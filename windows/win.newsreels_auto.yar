rule win_newsreels_auto {

    meta:
        author = "Felix Bilstein - yara-signator at cocacoding dot com"
        date = "2022-10-07"
        version = "1"
        description = "Detects win.newsreels."
        info = "autogenerated rule brought to you by yara-signator"
        tool = "yara-signator v0.6.0"
        signator_config = "callsandjumps;datarefs;binvalue"
        malpedia_reference = "https://malpedia.caad.fkie.fraunhofer.de/details/win.newsreels"
        malpedia_rule_date = "20221007"
        malpedia_hash = "597f9539014e3d0f350c069cd804aa71679486ae"
        malpedia_version = "20221010"
        malpedia_license = "CC BY-SA 4.0"
        malpedia_sharing = "TLP:WHITE"

    /* DISCLAIMER
     * The strings used in this rule have been automatically selected from the
     * disassembly of memory dumps and unpacked files, using YARA-Signator.
     * The code and documentation is published here:
     * https://github.com/fxb-cocacoding/yara-signator
     * As Malpedia is used as data source, please note that for a given
     * number of families, only single samples are documented.
     * This likely impacts the degree of generalization these rules will offer.
     * Take the described generation method also into consideration when you
     * apply the rules in your use cases and assign them confidence levels.
     */


    strings:
        $sequence_0 = { 8bf9 50 e8???????? 8b5c2414 33f6 85db }
            // n = 6, score = 100
            //   8bf9                 | mov                 edi, ecx
            //   50                   | push                eax
            //   e8????????           |                     
            //   8b5c2414             | mov                 ebx, dword ptr [esp + 0x14]
            //   33f6                 | xor                 esi, esi
            //   85db                 | test                ebx, ebx

        $sequence_1 = { 83c41c 85f6 750b 5f }
            // n = 4, score = 100
            //   83c41c               | add                 esp, 0x1c
            //   85f6                 | test                esi, esi
            //   750b                 | jne                 0xd
            //   5f                   | pop                 edi

        $sequence_2 = { 50 66895c2468 c744246401010000 895c2424 895c2420 }
            // n = 5, score = 100
            //   50                   | push                eax
            //   66895c2468           | mov                 word ptr [esp + 0x68], bx
            //   c744246401010000     | mov                 dword ptr [esp + 0x64], 0x101
            //   895c2424             | mov                 dword ptr [esp + 0x24], ebx
            //   895c2420             | mov                 dword ptr [esp + 0x20], ebx

        $sequence_3 = { 83c404 8b8658020000 85c0 7409 50 e8???????? 83c404 }
            // n = 7, score = 100
            //   83c404               | add                 esp, 4
            //   8b8658020000         | mov                 eax, dword ptr [esi + 0x258]
            //   85c0                 | test                eax, eax
            //   7409                 | je                  0xb
            //   50                   | push                eax
            //   e8????????           |                     
            //   83c404               | add                 esp, 4

        $sequence_4 = { 8dbc2488000000 83c9ff 33c0 6a4d f2ae f7d1 49 }
            // n = 7, score = 100
            //   8dbc2488000000       | lea                 edi, [esp + 0x88]
            //   83c9ff               | or                  ecx, 0xffffffff
            //   33c0                 | xor                 eax, eax
            //   6a4d                 | push                0x4d
            //   f2ae                 | repne scasb         al, byte ptr es:[edi]
            //   f7d1                 | not                 ecx
            //   49                   | dec                 ecx

        $sequence_5 = { ffd6 8b842428050000 be01000000 85c0 }
            // n = 4, score = 100
            //   ffd6                 | call                esi
            //   8b842428050000       | mov                 eax, dword ptr [esp + 0x528]
            //   be01000000           | mov                 esi, 1
            //   85c0                 | test                eax, eax

        $sequence_6 = { 57 ff15???????? 33c0 e9???????? 6a00 }
            // n = 5, score = 100
            //   57                   | push                edi
            //   ff15????????         |                     
            //   33c0                 | xor                 eax, eax
            //   e9????????           |                     
            //   6a00                 | push                0

        $sequence_7 = { e8???????? 8dbc2488000000 83c9ff 33c0 6a4d }
            // n = 5, score = 100
            //   e8????????           |                     
            //   8dbc2488000000       | lea                 edi, [esp + 0x88]
            //   83c9ff               | or                  ecx, 0xffffffff
            //   33c0                 | xor                 eax, eax
            //   6a4d                 | push                0x4d

        $sequence_8 = { 7409 50 e8???????? 83c404 8bb660020000 85f6 }
            // n = 6, score = 100
            //   7409                 | je                  0xb
            //   50                   | push                eax
            //   e8????????           |                     
            //   83c404               | add                 esp, 4
            //   8bb660020000         | mov                 esi, dword ptr [esi + 0x260]
            //   85f6                 | test                esi, esi

        $sequence_9 = { 51 e8???????? 83c410 c6043000 5e 5d }
            // n = 6, score = 100
            //   51                   | push                ecx
            //   e8????????           |                     
            //   83c410               | add                 esp, 0x10
            //   c6043000             | mov                 byte ptr [eax + esi], 0
            //   5e                   | pop                 esi
            //   5d                   | pop                 ebp

    condition:
        7 of them and filesize < 65536
}