rule win_elirks_auto {

    meta:
        author = "Felix Bilstein - yara-signator at cocacoding dot com"
        date = "2022-10-07"
        version = "1"
        description = "Detects win.elirks."
        info = "autogenerated rule brought to you by yara-signator"
        tool = "yara-signator v0.6.0"
        signator_config = "callsandjumps;datarefs;binvalue"
        malpedia_reference = "https://malpedia.caad.fkie.fraunhofer.de/details/win.elirks"
        malpedia_rule_date = "20221007"
        malpedia_hash = "597f9539014e3d0f350c069cd804aa71679486ae"
        malpedia_version = "20221010"
        malpedia_license = "CC BY-SA 4.0"
        malpedia_sharing = "TLP:WHITE"

    /* DISCLAIMER
     * The strings used in this rule have been automatically selected from the
     * disassembly of memory dumps and unpacked files, using YARA-Signator.
     * The code and documentation is published here:
     * https://github.com/fxb-cocacoding/yara-signator
     * As Malpedia is used as data source, please note that for a given
     * number of families, only single samples are documented.
     * This likely impacts the degree of generalization these rules will offer.
     * Take the described generation method also into consideration when you
     * apply the rules in your use cases and assign them confidence levels.
     */


    strings:
        $sequence_0 = { 8d542420 52 8d442428 50 51 8d942434020000 }
            // n = 6, score = 100
            //   8d542420             | lea                 edx, [esp + 0x20]
            //   52                   | push                edx
            //   8d442428             | lea                 eax, [esp + 0x28]
            //   50                   | push                eax
            //   51                   | push                ecx
            //   8d942434020000       | lea                 edx, [esp + 0x234]

        $sequence_1 = { 0fb65602 83e30f 03db c1ea06 83c102 03db 0bd3 }
            // n = 7, score = 100
            //   0fb65602             | movzx               edx, byte ptr [esi + 2]
            //   83e30f               | and                 ebx, 0xf
            //   03db                 | add                 ebx, ebx
            //   c1ea06               | shr                 edx, 6
            //   83c102               | add                 ecx, 2
            //   03db                 | add                 ebx, ebx
            //   0bd3                 | or                  edx, ebx

        $sequence_2 = { 0fb7045522844000 8b39 663b8794010000 8b949144c20000 7508 52 }
            // n = 6, score = 100
            //   0fb7045522844000     | movzx               eax, word ptr [edx*2 + 0x408422]
            //   8b39                 | mov                 edi, dword ptr [ecx]
            //   663b8794010000       | cmp                 ax, word ptr [edi + 0x194]
            //   8b949144c20000       | mov                 edx, dword ptr [ecx + edx*4 + 0xc244]
            //   7508                 | jne                 0xa
            //   52                   | push                edx

        $sequence_3 = { 897c241c 0f8407010000 8b842424020000 85c0 b9???????? 7505 b9???????? }
            // n = 7, score = 100
            //   897c241c             | mov                 dword ptr [esp + 0x1c], edi
            //   0f8407010000         | je                  0x10d
            //   8b842424020000       | mov                 eax, dword ptr [esp + 0x224]
            //   85c0                 | test                eax, eax
            //   b9????????           |                     
            //   7505                 | jne                 7
            //   b9????????           |                     

        $sequence_4 = { ff15???????? 83f8ff 0f84a5000000 56 50 e8???????? 85c0 }
            // n = 7, score = 100
            //   ff15????????         |                     
            //   83f8ff               | cmp                 eax, -1
            //   0f84a5000000         | je                  0xab
            //   56                   | push                esi
            //   50                   | push                eax
            //   e8????????           |                     
            //   85c0                 | test                eax, eax

        $sequence_5 = { 56 c7800060000000000000 c70014000000 c7400400040101 e8???????? 681c010000 8d542414 }
            // n = 7, score = 100
            //   56                   | push                esi
            //   c7800060000000000000     | mov    dword ptr [eax + 0x6000], 0
            //   c70014000000         | mov                 dword ptr [eax], 0x14
            //   c7400400040101       | mov                 dword ptr [eax + 4], 0x1010400
            //   e8????????           |                     
            //   681c010000           | push                0x11c
            //   8d542414             | lea                 edx, [esp + 0x14]

        $sequence_6 = { 33ff 85ff 8db348010000 7411 8b4604 83c001 }
            // n = 6, score = 100
            //   33ff                 | xor                 edi, edi
            //   85ff                 | test                edi, edi
            //   8db348010000         | lea                 esi, [ebx + 0x148]
            //   7411                 | je                  0x13
            //   8b4604               | mov                 eax, dword ptr [esi + 4]
            //   83c001               | add                 eax, 1

        $sequence_7 = { ff15???????? 85c0 7505 be01000000 8b542410 52 ffd3 }
            // n = 7, score = 100
            //   ff15????????         |                     
            //   85c0                 | test                eax, eax
            //   7505                 | jne                 7
            //   be01000000           | mov                 esi, 1
            //   8b542410             | mov                 edx, dword ptr [esp + 0x10]
            //   52                   | push                edx
            //   ffd3                 | call                ebx

        $sequence_8 = { 817c241800010000 7734 68???????? 56 ff15???????? 83c408 85c0 }
            // n = 7, score = 100
            //   817c241800010000     | cmp                 dword ptr [esp + 0x18], 0x100
            //   7734                 | ja                  0x36
            //   68????????           |                     
            //   56                   | push                esi
            //   ff15????????         |                     
            //   83c408               | add                 esp, 8
            //   85c0                 | test                eax, eax

        $sequence_9 = { 52 c684242307000000 ff15???????? 8bf0 8d843420060000 50 }
            // n = 6, score = 100
            //   52                   | push                edx
            //   c684242307000000     | mov                 byte ptr [esp + 0x723], 0
            //   ff15????????         |                     
            //   8bf0                 | mov                 esi, eax
            //   8d843420060000       | lea                 eax, [esp + esi + 0x620]
            //   50                   | push                eax

    condition:
        7 of them and filesize < 81920
}