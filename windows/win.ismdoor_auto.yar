rule win_ismdoor_auto {

    meta:
        author = "Felix Bilstein - yara-signator at cocacoding dot com"
        date = "2022-10-07"
        version = "1"
        description = "Detects win.ismdoor."
        info = "autogenerated rule brought to you by yara-signator"
        tool = "yara-signator v0.6.0"
        signator_config = "callsandjumps;datarefs;binvalue"
        malpedia_reference = "https://malpedia.caad.fkie.fraunhofer.de/details/win.ismdoor"
        malpedia_rule_date = "20221007"
        malpedia_hash = "597f9539014e3d0f350c069cd804aa71679486ae"
        malpedia_version = "20221010"
        malpedia_license = "CC BY-SA 4.0"
        malpedia_sharing = "TLP:WHITE"

    /* DISCLAIMER
     * The strings used in this rule have been automatically selected from the
     * disassembly of memory dumps and unpacked files, using YARA-Signator.
     * The code and documentation is published here:
     * https://github.com/fxb-cocacoding/yara-signator
     * As Malpedia is used as data source, please note that for a given
     * number of families, only single samples are documented.
     * This likely impacts the degree of generalization these rules will offer.
     * Take the described generation method also into consideration when you
     * apply the rules in your use cases and assign them confidence levels.
     */


    strings:
        $sequence_0 = { 7504 32c0 eb05 c0e804 2401 84c0 0f94c3 }
            // n = 7, score = 400
            //   7504                 | jne                 6
            //   32c0                 | xor                 al, al
            //   eb05                 | jmp                 7
            //   c0e804               | shr                 al, 4
            //   2401                 | and                 al, 1
            //   84c0                 | test                al, al
            //   0f94c3               | sete                bl

        $sequence_1 = { 742d 48837dff10 7209 488b4de7 e8???????? }
            // n = 5, score = 300
            //   742d                 | dec                 ecx
            //   48837dff10           | mov                 ebp, eax
            //   7209                 | dec                 esp
            //   488b4de7             | mov                 esi, edx
            //   e8????????           |                     

        $sequence_2 = { 33d2 41b808010000 488d4d60 e8???????? }
            // n = 4, score = 300
            //   33d2                 | dec                 ecx
            //   41b808010000         | shl                 ecx, 5
            //   488d4d60             | xor                 edx, edx
            //   e8????????           |                     

        $sequence_3 = { 33db 4533c9 458b5344 498be8 4c8bf2 }
            // n = 5, score = 300
            //   33db                 | inc                 ecx
            //   4533c9               | mov                 eax, 0x108
            //   458b5344             | dec                 eax
            //   498be8               | lea                 ecx, [ebp + 0x60]
            //   4c8bf2               | xor                 ebx, ebx

        $sequence_4 = { 8b7310 397320 0f427320 85f6 7423 }
            // n = 5, score = 300
            //   8b7310               | mov                 byte ptr [ebp + 0x20], 0
            //   397320               | dec                 eax
            //   0f427320             | cmp                 dword ptr [esp + 0x58], 0x10
            //   85f6                 | jb                  0x12
            //   7423                 | dec                 eax

        $sequence_5 = { 418d4701 3bf8 0f8d97000000 8bc7 }
            // n = 4, score = 300
            //   418d4701             | mov                 ecx, dword ptr [esp + 0x40]
            //   3bf8                 | je                  0x2f
            //   0f8d97000000         | dec                 eax
            //   8bc7                 | cmp                 dword ptr [ebp - 1], 0x10

        $sequence_6 = { c6452000 48837c245810 720a 488b4c2440 }
            // n = 4, score = 300
            //   c6452000             | inc                 ebp
            //   48837c245810         | xor                 ecx, ecx
            //   720a                 | inc                 ebp
            //   488b4c2440           | mov                 edx, dword ptr [ebx + 0x44]

        $sequence_7 = { 8bc2 83e03f 4c63c8 49c1e105 }
            // n = 4, score = 300
            //   8bc2                 | mov                 eax, edx
            //   83e03f               | and                 eax, 0x3f
            //   4c63c8               | dec                 esp
            //   49c1e105             | arpl                ax, cx

        $sequence_8 = { 8b4e28 b8abaaaa2a 2b4e24 f7e9 c1fa02 }
            // n = 5, score = 100
            //   8b4e28               | mov                 ecx, dword ptr [esi + 0x28]
            //   b8abaaaa2a           | mov                 eax, 0x2aaaaaab
            //   2b4e24               | sub                 ecx, dword ptr [esi + 0x24]
            //   f7e9                 | imul                ecx
            //   c1fa02               | sar                 edx, 2

        $sequence_9 = { c645fc25 50 8d8db0feffff c645b70a e8???????? 68???????? }
            // n = 6, score = 100
            //   c645fc25             | mov                 byte ptr [ebp - 4], 0x25
            //   50                   | push                eax
            //   8d8db0feffff         | lea                 ecx, [ebp - 0x150]
            //   c645b70a             | mov                 byte ptr [ebp - 0x49], 0xa
            //   e8????????           |                     
            //   68????????           |                     

        $sequence_10 = { 8d45ec 50 ffb5f4feffff 56 57 ff15???????? }
            // n = 6, score = 100
            //   8d45ec               | lea                 eax, [ebp - 0x14]
            //   50                   | push                eax
            //   ffb5f4feffff         | push                dword ptr [ebp - 0x10c]
            //   56                   | push                esi
            //   57                   | push                edi
            //   ff15????????         |                     

        $sequence_11 = { 84c0 0f847b000000 8b8d94efffff b8abaaaa2a }
            // n = 4, score = 100
            //   84c0                 | test                al, al
            //   0f847b000000         | je                  0x81
            //   8b8d94efffff         | mov                 ecx, dword ptr [ebp - 0x106c]
            //   b8abaaaa2a           | mov                 eax, 0x2aaaaaab

        $sequence_12 = { e8???????? c645fc0c 8bcc 896580 0f57c0 660fd645e4 }
            // n = 6, score = 100
            //   e8????????           |                     
            //   c645fc0c             | mov                 byte ptr [ebp - 4], 0xc
            //   8bcc                 | mov                 ecx, esp
            //   896580               | mov                 dword ptr [ebp - 0x80], esp
            //   0f57c0               | xorps               xmm0, xmm0
            //   660fd645e4           | movq                qword ptr [ebp - 0x1c], xmm0

        $sequence_13 = { c645fc12 8d8d94fcffff e8???????? 83c430 8d8d94fcffff }
            // n = 5, score = 100
            //   c645fc12             | mov                 byte ptr [ebp - 4], 0x12
            //   8d8d94fcffff         | lea                 ecx, [ebp - 0x36c]
            //   e8????????           |                     
            //   83c430               | add                 esp, 0x30
            //   8d8d94fcffff         | lea                 ecx, [ebp - 0x36c]

        $sequence_14 = { e8???????? 83c404 33c0 c78550ffffff07000000 83bd68ffffff08 c7854cffffff00000000 }
            // n = 6, score = 100
            //   e8????????           |                     
            //   83c404               | add                 esp, 4
            //   33c0                 | xor                 eax, eax
            //   c78550ffffff07000000     | mov    dword ptr [ebp - 0xb0], 7
            //   83bd68ffffff08       | cmp                 dword ptr [ebp - 0x98], 8
            //   c7854cffffff00000000     | mov    dword ptr [ebp - 0xb4], 0

    condition:
        7 of them and filesize < 1933312
}