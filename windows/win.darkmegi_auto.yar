rule win_darkmegi_auto {

    meta:
        author = "Felix Bilstein - yara-signator at cocacoding dot com"
        date = "2022-10-07"
        version = "1"
        description = "Detects win.darkmegi."
        info = "autogenerated rule brought to you by yara-signator"
        tool = "yara-signator v0.6.0"
        signator_config = "callsandjumps;datarefs;binvalue"
        malpedia_reference = "https://malpedia.caad.fkie.fraunhofer.de/details/win.darkmegi"
        malpedia_rule_date = "20221007"
        malpedia_hash = "597f9539014e3d0f350c069cd804aa71679486ae"
        malpedia_version = "20221010"
        malpedia_license = "CC BY-SA 4.0"
        malpedia_sharing = "TLP:WHITE"

    /* DISCLAIMER
     * The strings used in this rule have been automatically selected from the
     * disassembly of memory dumps and unpacked files, using YARA-Signator.
     * The code and documentation is published here:
     * https://github.com/fxb-cocacoding/yara-signator
     * As Malpedia is used as data source, please note that for a given
     * number of families, only single samples are documented.
     * This likely impacts the degree of generalization these rules will offer.
     * Take the described generation method also into consideration when you
     * apply the rules in your use cases and assign them confidence levels.
     */


    strings:
        $sequence_0 = { 51 ffd5 663d0100 7540 8b442410 8d1440 }
            // n = 6, score = 100
            //   51                   | push                ecx
            //   ffd5                 | call                ebp
            //   663d0100             | cmp                 ax, 1
            //   7540                 | jne                 0x42
            //   8b442410             | mov                 eax, dword ptr [esp + 0x10]
            //   8d1440               | lea                 edx, [eax + eax*2]

        $sequence_1 = { 3bd9 7cd2 8806 5f 5e 5d 5b }
            // n = 7, score = 100
            //   3bd9                 | cmp                 ebx, ecx
            //   7cd2                 | jl                  0xffffffd4
            //   8806                 | mov                 byte ptr [esi], al
            //   5f                   | pop                 edi
            //   5e                   | pop                 esi
            //   5d                   | pop                 ebp
            //   5b                   | pop                 ebx

        $sequence_2 = { 81c47c0a0000 c3 8d442414 6a00 50 55 56 }
            // n = 7, score = 100
            //   81c47c0a0000         | add                 esp, 0xa7c
            //   c3                   | ret                 
            //   8d442414             | lea                 eax, [esp + 0x14]
            //   6a00                 | push                0
            //   50                   | push                eax
            //   55                   | push                ebp
            //   56                   | push                esi

        $sequence_3 = { 8a9405ecfdffff 88900095b402 eb1c f6c202 }
            // n = 4, score = 100
            //   8a9405ecfdffff       | mov                 dl, byte ptr [ebp + eax - 0x214]
            //   88900095b402         | mov                 byte ptr [eax + 0x2b49500], dl
            //   eb1c                 | jmp                 0x1e
            //   f6c202               | test                dl, 2

        $sequence_4 = { 50 ffd5 668bc8 8b442410 81e1ffff0000 3bc1 7c86 }
            // n = 7, score = 100
            //   50                   | push                eax
            //   ffd5                 | call                ebp
            //   668bc8               | mov                 cx, ax
            //   8b442410             | mov                 eax, dword ptr [esp + 0x10]
            //   81e1ffff0000         | and                 ecx, 0xffff
            //   3bc1                 | cmp                 eax, ecx
            //   7c86                 | jl                  0xffffff88

        $sequence_5 = { 81c474100000 c3 8b842490100000 8d4c2420 }
            // n = 4, score = 100
            //   81c474100000         | add                 esp, 0x1074
            //   c3                   | ret                 
            //   8b842490100000       | mov                 eax, dword ptr [esp + 0x1090]
            //   8d4c2420             | lea                 ecx, [esp + 0x20]

        $sequence_6 = { 6a35 8be8 66c744241c0200 ffd6 8b8c24a0030100 668944241a }
            // n = 6, score = 100
            //   6a35                 | push                0x35
            //   8be8                 | mov                 ebp, eax
            //   66c744241c0200       | mov                 word ptr [esp + 0x1c], 2
            //   ffd6                 | call                esi
            //   8b8c24a0030100       | mov                 ecx, dword ptr [esp + 0x103a0]
            //   668944241a           | mov                 word ptr [esp + 0x1a], ax

        $sequence_7 = { 50 c744245001000000 ff15???????? bf???????? 83c9ff 33c0 }
            // n = 6, score = 100
            //   50                   | push                eax
            //   c744245001000000     | mov                 dword ptr [esp + 0x50], 1
            //   ff15????????         |                     
            //   bf????????           |                     
            //   83c9ff               | or                  ecx, 0xffffffff
            //   33c0                 | xor                 eax, eax

        $sequence_8 = { 8d542454 68f8000000 52 56 ffd7 }
            // n = 5, score = 100
            //   8d542454             | lea                 edx, [esp + 0x54]
            //   68f8000000           | push                0xf8
            //   52                   | push                edx
            //   56                   | push                esi
            //   ffd7                 | call                edi

        $sequence_9 = { 51 ffd5 25ffff0000 897304 8903 8b94249e030000 52 }
            // n = 7, score = 100
            //   51                   | push                ecx
            //   ffd5                 | call                ebp
            //   25ffff0000           | and                 eax, 0xffff
            //   897304               | mov                 dword ptr [ebx + 4], esi
            //   8903                 | mov                 dword ptr [ebx], eax
            //   8b94249e030000       | mov                 edx, dword ptr [esp + 0x39e]
            //   52                   | push                edx

    condition:
        7 of them and filesize < 90304
}