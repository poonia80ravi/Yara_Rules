rule win_badcall_auto {

    meta:
        author = "Felix Bilstein - yara-signator at cocacoding dot com"
        date = "2022-10-07"
        version = "1"
        description = "Detects win.badcall."
        info = "autogenerated rule brought to you by yara-signator"
        tool = "yara-signator v0.6.0"
        signator_config = "callsandjumps;datarefs;binvalue"
        malpedia_reference = "https://malpedia.caad.fkie.fraunhofer.de/details/win.badcall"
        malpedia_rule_date = "20221007"
        malpedia_hash = "597f9539014e3d0f350c069cd804aa71679486ae"
        malpedia_version = "20221010"
        malpedia_license = "CC BY-SA 4.0"
        malpedia_sharing = "TLP:WHITE"

    /* DISCLAIMER
     * The strings used in this rule have been automatically selected from the
     * disassembly of memory dumps and unpacked files, using YARA-Signator.
     * The code and documentation is published here:
     * https://github.com/fxb-cocacoding/yara-signator
     * As Malpedia is used as data source, please note that for a given
     * number of families, only single samples are documented.
     * This likely impacts the degree of generalization these rules will offer.
     * Take the described generation method also into consideration when you
     * apply the rules in your use cases and assign them confidence levels.
     */


    strings:
        $sequence_0 = { 57 53 e8???????? f7d8 1bc0 5b 5f }
            // n = 7, score = 300
            //   57                   | push                edi
            //   53                   | push                ebx
            //   e8????????           |                     
            //   f7d8                 | neg                 eax
            //   1bc0                 | sbb                 eax, eax
            //   5b                   | pop                 ebx
            //   5f                   | pop                 edi

        $sequence_1 = { 5e 5f b801000000 5b 81c40c030000 c3 }
            // n = 6, score = 300
            //   5e                   | pop                 esi
            //   5f                   | pop                 edi
            //   b801000000           | mov                 eax, 1
            //   5b                   | pop                 ebx
            //   81c40c030000         | add                 esp, 0x30c
            //   c3                   | ret                 

        $sequence_2 = { e8???????? 8d4c242c c7442474ffffffff e8???????? 8b4c246c 5f 33c0 }
            // n = 7, score = 300
            //   e8????????           |                     
            //   8d4c242c             | lea                 ecx, [esp + 0x2c]
            //   c7442474ffffffff     | mov                 dword ptr [esp + 0x74], 0xffffffff
            //   e8????????           |                     
            //   8b4c246c             | mov                 ecx, dword ptr [esp + 0x6c]
            //   5f                   | pop                 edi
            //   33c0                 | xor                 eax, eax

        $sequence_3 = { 8bf0 ffd7 85f6 7407 56 ff15???????? }
            // n = 6, score = 300
            //   8bf0                 | mov                 esi, eax
            //   ffd7                 | call                edi
            //   85f6                 | test                esi, esi
            //   7407                 | je                  9
            //   56                   | push                esi
            //   ff15????????         |                     

        $sequence_4 = { c705????????01000000 a1???????? 68???????? 50 }
            // n = 4, score = 300
            //   c705????????01000000     |     
            //   a1????????           |                     
            //   68????????           |                     
            //   50                   | push                eax

        $sequence_5 = { 53 57 33db b97f000000 33c0 8dbc2415010000 889c2414010000 }
            // n = 7, score = 300
            //   53                   | push                ebx
            //   57                   | push                edi
            //   33db                 | xor                 ebx, ebx
            //   b97f000000           | mov                 ecx, 0x7f
            //   33c0                 | xor                 eax, eax
            //   8dbc2415010000       | lea                 edi, [esp + 0x115]
            //   889c2414010000       | mov                 byte ptr [esp + 0x114], bl

        $sequence_6 = { ff15???????? c20400 c705????????01000000 a1???????? }
            // n = 4, score = 300
            //   ff15????????         |                     
            //   c20400               | ret                 4
            //   c705????????01000000     |     
            //   a1????????           |                     

        $sequence_7 = { 50 ff15???????? 83f8ff 740d 5f b801000000 5e }
            // n = 7, score = 300
            //   50                   | push                eax
            //   ff15????????         |                     
            //   83f8ff               | cmp                 eax, -1
            //   740d                 | je                  0xf
            //   5f                   | pop                 edi
            //   b801000000           | mov                 eax, 1
            //   5e                   | pop                 esi

        $sequence_8 = { 7434 83e803 7557 33c0 68???????? a3???????? a3???????? }
            // n = 7, score = 300
            //   7434                 | je                  0x36
            //   83e803               | sub                 eax, 3
            //   7557                 | jne                 0x59
            //   33c0                 | xor                 eax, eax
            //   68????????           |                     
            //   a3????????           |                     
            //   a3????????           |                     

        $sequence_9 = { ff15???????? c20400 a1???????? 68???????? }
            // n = 4, score = 300
            //   ff15????????         |                     
            //   c20400               | ret                 4
            //   a1????????           |                     
            //   68????????           |                     

        $sequence_10 = { 8d4c2414 66a1???????? 50 68???????? 51 e8???????? 83c40c }
            // n = 7, score = 300
            //   8d4c2414             | lea                 ecx, [esp + 0x14]
            //   66a1????????         |                     
            //   50                   | push                eax
            //   68????????           |                     
            //   51                   | push                ecx
            //   e8????????           |                     
            //   83c40c               | add                 esp, 0xc

        $sequence_11 = { 48 7455 48 7434 83e803 }
            // n = 5, score = 300
            //   48                   | dec                 eax
            //   7455                 | je                  0x57
            //   48                   | dec                 eax
            //   7434                 | je                  0x36
            //   83e803               | sub                 eax, 3

        $sequence_12 = { 83c618 6a04 51 8bce e8???????? 85c0 }
            // n = 6, score = 300
            //   83c618               | add                 esi, 0x18
            //   6a04                 | push                4
            //   51                   | push                ecx
            //   8bce                 | mov                 ecx, esi
            //   e8????????           |                     
            //   85c0                 | test                eax, eax

        $sequence_13 = { a3???????? a3???????? a1???????? 50 c705????????04000000 ff15???????? }
            // n = 6, score = 300
            //   a3????????           |                     
            //   a3????????           |                     
            //   a1????????           |                     
            //   50                   | push                eax
            //   c705????????04000000     |     
            //   ff15????????         |                     

        $sequence_14 = { 8d44241c 8a18 8acb 3a1f }
            // n = 4, score = 200
            //   8d44241c             | lea                 eax, [esp + 0x1c]
            //   8a18                 | mov                 bl, byte ptr [eax]
            //   8acb                 | mov                 cl, bl
            //   3a1f                 | cmp                 bl, byte ptr [edi]

        $sequence_15 = { b800000001 5b 59 c20c00 81ec78010000 53 56 }
            // n = 7, score = 200
            //   b800000001           | mov                 eax, 0x1000000
            //   5b                   | pop                 ebx
            //   59                   | pop                 ecx
            //   c20c00               | ret                 0xc
            //   81ec78010000         | sub                 esp, 0x178
            //   53                   | push                ebx
            //   56                   | push                esi

    condition:
        7 of them and filesize < 483328
}