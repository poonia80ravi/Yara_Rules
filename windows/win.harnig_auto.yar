rule win_harnig_auto {

    meta:
        author = "Felix Bilstein - yara-signator at cocacoding dot com"
        date = "2022-10-07"
        version = "1"
        description = "Detects win.harnig."
        info = "autogenerated rule brought to you by yara-signator"
        tool = "yara-signator v0.6.0"
        signator_config = "callsandjumps;datarefs;binvalue"
        malpedia_reference = "https://malpedia.caad.fkie.fraunhofer.de/details/win.harnig"
        malpedia_rule_date = "20221007"
        malpedia_hash = "597f9539014e3d0f350c069cd804aa71679486ae"
        malpedia_version = "20221010"
        malpedia_license = "CC BY-SA 4.0"
        malpedia_sharing = "TLP:WHITE"

    /* DISCLAIMER
     * The strings used in this rule have been automatically selected from the
     * disassembly of memory dumps and unpacked files, using YARA-Signator.
     * The code and documentation is published here:
     * https://github.com/fxb-cocacoding/yara-signator
     * As Malpedia is used as data source, please note that for a given
     * number of families, only single samples are documented.
     * This likely impacts the degree of generalization these rules will offer.
     * Take the described generation method also into consideration when you
     * apply the rules in your use cases and assign them confidence levels.
     */


    strings:
        $sequence_0 = { 52 50 ff512c 85c0 7404 }
            // n = 5, score = 100
            //   52                   | push                edx
            //   50                   | push                eax
            //   ff512c               | call                dword ptr [ecx + 0x2c]
            //   85c0                 | test                eax, eax
            //   7404                 | je                  6

        $sequence_1 = { 8d85e0fdffff 50 ffd3 6a03 }
            // n = 4, score = 100
            //   8d85e0fdffff         | lea                 eax, [ebp - 0x220]
            //   50                   | push                eax
            //   ffd3                 | call                ebx
            //   6a03                 | push                3

        $sequence_2 = { 50 8d85e0feffff 50 ffd3 8d85e0feffff 50 }
            // n = 6, score = 100
            //   50                   | push                eax
            //   8d85e0feffff         | lea                 eax, [ebp - 0x120]
            //   50                   | push                eax
            //   ffd3                 | call                ebx
            //   8d85e0feffff         | lea                 eax, [ebp - 0x120]
            //   50                   | push                eax

        $sequence_3 = { e8???????? 6a05 bf???????? 57 }
            // n = 4, score = 100
            //   e8????????           |                     
            //   6a05                 | push                5
            //   bf????????           |                     
            //   57                   | push                edi

        $sequence_4 = { 03f9 03d9 837e1800 7620 8b4508 }
            // n = 5, score = 100
            //   03f9                 | add                 edi, ecx
            //   03d9                 | add                 ebx, ecx
            //   837e1800             | cmp                 dword ptr [esi + 0x18], 0
            //   7620                 | jbe                 0x22
            //   8b4508               | mov                 eax, dword ptr [ebp + 8]

        $sequence_5 = { 8b7c2410 33c0 8a07 47 50 e8???????? }
            // n = 6, score = 100
            //   8b7c2410             | mov                 edi, dword ptr [esp + 0x10]
            //   33c0                 | xor                 eax, eax
            //   8a07                 | mov                 al, byte ptr [edi]
            //   47                   | inc                 edi
            //   50                   | push                eax
            //   e8????????           |                     

        $sequence_6 = { 56 8d85e0fbffff 50 ffd7 }
            // n = 4, score = 100
            //   56                   | push                esi
            //   8d85e0fbffff         | lea                 eax, [ebp - 0x420]
            //   50                   | push                eax
            //   ffd7                 | call                edi

        $sequence_7 = { c1e810 03f1 6685c0 7509 }
            // n = 4, score = 100
            //   c1e810               | shr                 eax, 0x10
            //   03f1                 | add                 esi, ecx
            //   6685c0               | test                ax, ax
            //   7509                 | jne                 0xb

        $sequence_8 = { 6a04 e8???????? 57 8d8dbcfeffff 51 }
            // n = 5, score = 100
            //   6a04                 | push                4
            //   e8????????           |                     
            //   57                   | push                edi
            //   8d8dbcfeffff         | lea                 ecx, [ebp - 0x144]
            //   51                   | push                ecx

        $sequence_9 = { e8???????? 6a08 48 59 2b4c240c }
            // n = 5, score = 100
            //   e8????????           |                     
            //   6a08                 | push                8
            //   48                   | dec                 eax
            //   59                   | pop                 ecx
            //   2b4c240c             | sub                 ecx, dword ptr [esp + 0xc]

    condition:
        7 of them and filesize < 49152
}