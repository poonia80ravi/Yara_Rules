rule win_nabucur_auto {

    meta:
        author = "Felix Bilstein - yara-signator at cocacoding dot com"
        date = "2022-10-07"
        version = "1"
        description = "Detects win.nabucur."
        info = "autogenerated rule brought to you by yara-signator"
        tool = "yara-signator v0.6.0"
        signator_config = "callsandjumps;datarefs;binvalue"
        malpedia_reference = "https://malpedia.caad.fkie.fraunhofer.de/details/win.nabucur"
        malpedia_rule_date = "20221007"
        malpedia_hash = "597f9539014e3d0f350c069cd804aa71679486ae"
        malpedia_version = "20221010"
        malpedia_license = "CC BY-SA 4.0"
        malpedia_sharing = "TLP:WHITE"

    /* DISCLAIMER
     * The strings used in this rule have been automatically selected from the
     * disassembly of memory dumps and unpacked files, using YARA-Signator.
     * The code and documentation is published here:
     * https://github.com/fxb-cocacoding/yara-signator
     * As Malpedia is used as data source, please note that for a given
     * number of families, only single samples are documented.
     * This likely impacts the degree of generalization these rules will offer.
     * Take the described generation method also into consideration when you
     * apply the rules in your use cases and assign them confidence levels.
     */


    strings:
        $sequence_0 = { 48 43 0bf9 85c0 75ef eb03 }
            // n = 6, score = 200
            //   48                   | dec                 eax
            //   43                   | inc                 ebx
            //   0bf9                 | or                  edi, ecx
            //   85c0                 | test                eax, eax
            //   75ef                 | jne                 0xfffffff1
            //   eb03                 | jmp                 5

        $sequence_1 = { 48 45 0bf1 85c0 }
            // n = 4, score = 200
            //   48                   | dec                 eax
            //   45                   | inc                 ebp
            //   0bf1                 | or                  esi, ecx
            //   85c0                 | test                eax, eax

        $sequence_2 = { 48 49 85c0 75fa }
            // n = 4, score = 200
            //   48                   | dec                 eax
            //   49                   | dec                 ecx
            //   85c0                 | test                eax, eax
            //   75fa                 | jne                 0xfffffffc

        $sequence_3 = { 48 5f 894500 5d }
            // n = 4, score = 200
            //   48                   | dec                 eax
            //   5f                   | pop                 edi
            //   894500               | mov                 dword ptr [ebp], eax
            //   5d                   | pop                 ebp

        $sequence_4 = { 009eaa030000 0fb686aa030000 57 83f80a 0f876d010000 }
            // n = 5, score = 200
            //   009eaa030000         | add                 byte ptr [esi + 0x3aa], bl
            //   0fb686aa030000       | movzx               eax, byte ptr [esi + 0x3aa]
            //   57                   | push                edi
            //   83f80a               | cmp                 eax, 0xa
            //   0f876d010000         | ja                  0x173

        $sequence_5 = { 48 83e904 85c0 7ff3 8bf0 8b442448 }
            // n = 6, score = 200
            //   48                   | dec                 eax
            //   83e904               | sub                 ecx, 4
            //   85c0                 | test                eax, eax
            //   7ff3                 | jg                  0xfffffff5
            //   8bf0                 | mov                 esi, eax
            //   8b442448             | mov                 eax, dword ptr [esp + 0x48]

        $sequence_6 = { 33ff 0bfd 8bd9 0facd112 33ed 0be9 8b4c2430 }
            // n = 7, score = 200
            //   33ff                 | xor                 edi, edi
            //   0bfd                 | or                  edi, ebp
            //   8bd9                 | mov                 ebx, ecx
            //   0facd112             | shrd                ecx, edx, 0x12
            //   33ed                 | xor                 ebp, ebp
            //   0be9                 | or                  ebp, ecx
            //   8b4c2430             | mov                 ecx, dword ptr [esp + 0x30]

        $sequence_7 = { 48 83e908 85c0 75f0 57 }
            // n = 5, score = 200
            //   48                   | dec                 eax
            //   83e908               | sub                 ecx, 8
            //   85c0                 | test                eax, eax
            //   75f0                 | jne                 0xfffffff2
            //   57                   | push                edi

        $sequence_8 = { a4 c1235b bd2a9e9c31 cf 8717 }
            // n = 5, score = 100
            //   a4                   | movsb               byte ptr es:[edi], byte ptr [esi]
            //   c1235b               | shl                 dword ptr [ebx], 0x5b
            //   bd2a9e9c31           | mov                 ebp, 0x319c9e2a
            //   cf                   | iretd               
            //   8717                 | xchg                dword ptr [edi], edx

        $sequence_9 = { 83ec04 0f31 8945fc 833d????????00 }
            // n = 4, score = 100
            //   83ec04               | sub                 esp, 4
            //   0f31                 | rdtsc               
            //   8945fc               | mov                 dword ptr [ebp - 4], eax
            //   833d????????00       |                     

        $sequence_10 = { f9 884642 0c8e cd77 8acb }
            // n = 5, score = 100
            //   f9                   | stc                 
            //   884642               | mov                 byte ptr [esi + 0x42], al
            //   0c8e                 | or                  al, 0x8e
            //   cd77                 | int                 0x77
            //   8acb                 | mov                 cl, bl

        $sequence_11 = { 8bec 81ec40040000 68???????? e8???????? }
            // n = 4, score = 100
            //   8bec                 | mov                 ebp, esp
            //   81ec40040000         | sub                 esp, 0x440
            //   68????????           |                     
            //   e8????????           |                     

        $sequence_12 = { 83c604 bbfd7477fe eb55 bac4b0e3fa }
            // n = 4, score = 100
            //   83c604               | add                 esi, 4
            //   bbfd7477fe           | mov                 ebx, 0xfe7774fd
            //   eb55                 | jmp                 0x57
            //   bac4b0e3fa           | mov                 edx, 0xfae3b0c4

        $sequence_13 = { 007500 7400 6f 007200 69007400e400 7400 }
            // n = 6, score = 100
            //   007500               | add                 byte ptr [ebp], dh
            //   7400                 | je                  2
            //   6f                   | outsd               dx, dword ptr [esi]
            //   007200               | add                 byte ptr [edx], dh
            //   69007400e400         | imul                eax, dword ptr [eax], 0xe40074
            //   7400                 | je                  2

        $sequence_14 = { b800000000 894608 8b450c 89460c 8b4508 894610 }
            // n = 6, score = 100
            //   b800000000           | mov                 eax, 0
            //   894608               | mov                 dword ptr [esi + 8], eax
            //   8b450c               | mov                 eax, dword ptr [ebp + 0xc]
            //   89460c               | mov                 dword ptr [esi + 0xc], eax
            //   8b4508               | mov                 eax, dword ptr [ebp + 8]
            //   894610               | mov                 dword ptr [esi + 0x10], eax

        $sequence_15 = { 4a b14f 237fd5 c6067f }
            // n = 4, score = 100
            //   4a                   | dec                 edx
            //   b14f                 | mov                 cl, 0x4f
            //   237fd5               | and                 edi, dword ptr [edi - 0x2b]
            //   c6067f               | mov                 byte ptr [esi], 0x7f

    condition:
        7 of them and filesize < 1949696
}