rule win_squirrelwaffle_auto {

    meta:
        author = "Felix Bilstein - yara-signator at cocacoding dot com"
        date = "2022-10-07"
        version = "1"
        description = "Detects win.squirrelwaffle."
        info = "autogenerated rule brought to you by yara-signator"
        tool = "yara-signator v0.6.0"
        signator_config = "callsandjumps;datarefs;binvalue"
        malpedia_reference = "https://malpedia.caad.fkie.fraunhofer.de/details/win.squirrelwaffle"
        malpedia_rule_date = "20221007"
        malpedia_hash = "597f9539014e3d0f350c069cd804aa71679486ae"
        malpedia_version = "20221010"
        malpedia_license = "CC BY-SA 4.0"
        malpedia_sharing = "TLP:WHITE"

    /* DISCLAIMER
     * The strings used in this rule have been automatically selected from the
     * disassembly of memory dumps and unpacked files, using YARA-Signator.
     * The code and documentation is published here:
     * https://github.com/fxb-cocacoding/yara-signator
     * As Malpedia is used as data source, please note that for a given
     * number of families, only single samples are documented.
     * This likely impacts the degree of generalization these rules will offer.
     * Take the described generation method also into consideration when you
     * apply the rules in your use cases and assign them confidence levels.
     */


    strings:
        $sequence_0 = { 8b01 8d4a01 81f900100000 7216 8b50fc }
            // n = 5, score = 700
            //   8b01                 | mov                 eax, dword ptr [ecx]
            //   8d4a01               | lea                 ecx, [edx + 1]
            //   81f900100000         | cmp                 ecx, 0x1000
            //   7216                 | jb                  0x18
            //   8b50fc               | mov                 edx, dword ptr [eax - 4]

        $sequence_1 = { 89857cf7ffff c645fc17 8b95c4f6ffff 8bc2 8b8dc0f6ffff 2bc1 }
            // n = 6, score = 700
            //   89857cf7ffff         | mov                 dword ptr [ebp - 0x884], eax
            //   c645fc17             | mov                 byte ptr [ebp - 4], 0x17
            //   8b95c4f6ffff         | mov                 edx, dword ptr [ebp - 0x93c]
            //   8bc2                 | mov                 eax, edx
            //   8b8dc0f6ffff         | mov                 ecx, dword ptr [ebp - 0x940]
            //   2bc1                 | sub                 eax, ecx

        $sequence_2 = { 897714 eb26 8b0d???????? 0f57c0 8b01 }
            // n = 5, score = 700
            //   897714               | mov                 dword ptr [edi + 0x14], esi
            //   eb26                 | jmp                 0x28
            //   8b0d????????         |                     
            //   0f57c0               | xorps               xmm0, xmm0
            //   8b01                 | mov                 eax, dword ptr [ecx]

        $sequence_3 = { 8975ec c745e800000000 c7461000000000 c746140f000000 8975e4 c60600 c745fc00000000 }
            // n = 7, score = 700
            //   8975ec               | mov                 dword ptr [ebp - 0x14], esi
            //   c745e800000000       | mov                 dword ptr [ebp - 0x18], 0
            //   c7461000000000       | mov                 dword ptr [esi + 0x10], 0
            //   c746140f000000       | mov                 dword ptr [esi + 0x14], 0xf
            //   8975e4               | mov                 dword ptr [ebp - 0x1c], esi
            //   c60600               | mov                 byte ptr [esi], 0
            //   c745fc00000000       | mov                 dword ptr [ebp - 4], 0

        $sequence_4 = { 8b45f8 83c410 8b4df0 89460c 894610 8b45f4 }
            // n = 6, score = 700
            //   8b45f8               | mov                 eax, dword ptr [ebp - 8]
            //   83c410               | add                 esp, 0x10
            //   8b4df0               | mov                 ecx, dword ptr [ebp - 0x10]
            //   89460c               | mov                 dword ptr [esi + 0xc], eax
            //   894610               | mov                 dword ptr [esi + 0x10], eax
            //   8b45f4               | mov                 eax, dword ptr [ebp - 0xc]

        $sequence_5 = { 0f8441010000 8b35???????? 8d4d90 51 50 ffd6 }
            // n = 6, score = 700
            //   0f8441010000         | je                  0x147
            //   8b35????????         |                     
            //   8d4d90               | lea                 ecx, [ebp - 0x70]
            //   51                   | push                ecx
            //   50                   | push                eax
            //   ffd6                 | call                esi

        $sequence_6 = { c7431000000000 c743140f000000 68???????? c60300 }
            // n = 4, score = 700
            //   c7431000000000       | mov                 dword ptr [ebx + 0x10], 0
            //   c743140f000000       | mov                 dword ptr [ebx + 0x14], 0xf
            //   68????????           |                     
            //   c60300               | mov                 byte ptr [ebx], 0

        $sequence_7 = { 68???????? 68???????? 6a14 6a18 8d8510fefeff }
            // n = 5, score = 700
            //   68????????           |                     
            //   68????????           |                     
            //   6a14                 | push                0x14
            //   6a18                 | push                0x18
            //   8d8510fefeff         | lea                 eax, [ebp - 0x101f0]

        $sequence_8 = { e8???????? 85c0 751a 50 8b8540ffffff }
            // n = 5, score = 700
            //   e8????????           |                     
            //   85c0                 | test                eax, eax
            //   751a                 | jne                 0x1c
            //   50                   | push                eax
            //   8b8540ffffff         | mov                 eax, dword ptr [ebp - 0xc0]

        $sequence_9 = { 57 e8???????? 8b45dc 83c40c c6040700 8b7df0 eb14 }
            // n = 7, score = 700
            //   57                   | push                edi
            //   e8????????           |                     
            //   8b45dc               | mov                 eax, dword ptr [ebp - 0x24]
            //   83c40c               | add                 esp, 0xc
            //   c6040700             | mov                 byte ptr [edi + eax], 0
            //   8b7df0               | mov                 edi, dword ptr [ebp - 0x10]
            //   eb14                 | jmp                 0x16

    condition:
        7 of them and filesize < 147456
}