rule win_milum_auto {

    meta:
        author = "Felix Bilstein - yara-signator at cocacoding dot com"
        date = "2022-10-07"
        version = "1"
        description = "Detects win.milum."
        info = "autogenerated rule brought to you by yara-signator"
        tool = "yara-signator v0.6.0"
        signator_config = "callsandjumps;datarefs;binvalue"
        malpedia_reference = "https://malpedia.caad.fkie.fraunhofer.de/details/win.milum"
        malpedia_rule_date = "20221007"
        malpedia_hash = "597f9539014e3d0f350c069cd804aa71679486ae"
        malpedia_version = "20221010"
        malpedia_license = "CC BY-SA 4.0"
        malpedia_sharing = "TLP:WHITE"

    /* DISCLAIMER
     * The strings used in this rule have been automatically selected from the
     * disassembly of memory dumps and unpacked files, using YARA-Signator.
     * The code and documentation is published here:
     * https://github.com/fxb-cocacoding/yara-signator
     * As Malpedia is used as data source, please note that for a given
     * number of families, only single samples are documented.
     * This likely impacts the degree of generalization these rules will offer.
     * Take the described generation method also into consideration when you
     * apply the rules in your use cases and assign them confidence levels.
     */


    strings:
        $sequence_0 = { 53 6800130000 895dcc ff15???????? 8b55cc 50 52 }
            // n = 7, score = 400
            //   53                   | push                ebx
            //   6800130000           | push                0x1300
            //   895dcc               | mov                 dword ptr [ebp - 0x34], ebx
            //   ff15????????         |                     
            //   8b55cc               | mov                 edx, dword ptr [ebp - 0x34]
            //   50                   | push                eax
            //   52                   | push                edx

        $sequence_1 = { e8???????? 8b55f4 50 52 8d4510 50 eb82 }
            // n = 7, score = 400
            //   e8????????           |                     
            //   8b55f4               | mov                 edx, dword ptr [ebp - 0xc]
            //   50                   | push                eax
            //   52                   | push                edx
            //   8d4510               | lea                 eax, [ebp + 0x10]
            //   50                   | push                eax
            //   eb82                 | jmp                 0xffffff84

        $sequence_2 = { 51 e8???????? 83c404 0fb64c3dcc 6a01 8d5594 52 }
            // n = 7, score = 400
            //   51                   | push                ecx
            //   e8????????           |                     
            //   83c404               | add                 esp, 4
            //   0fb64c3dcc           | movzx               ecx, byte ptr [ebp + edi - 0x34]
            //   6a01                 | push                1
            //   8d5594               | lea                 edx, [ebp - 0x6c]
            //   52                   | push                edx

        $sequence_3 = { e8???????? bb2a000000 8b0f 8b5104 8b4c3a38 e8???????? 8945e4 }
            // n = 7, score = 400
            //   e8????????           |                     
            //   bb2a000000           | mov                 ebx, 0x2a
            //   8b0f                 | mov                 ecx, dword ptr [edi]
            //   8b5104               | mov                 edx, dword ptr [ecx + 4]
            //   8b4c3a38             | mov                 ecx, dword ptr [edx + edi + 0x38]
            //   e8????????           |                     
            //   8945e4               | mov                 dword ptr [ebp - 0x1c], eax

        $sequence_4 = { 89a5e8fdffff 8d45b4 50 e8???????? c645fc10 c645fc0d e8???????? }
            // n = 7, score = 400
            //   89a5e8fdffff         | mov                 dword ptr [ebp - 0x218], esp
            //   8d45b4               | lea                 eax, [ebp - 0x4c]
            //   50                   | push                eax
            //   e8????????           |                     
            //   c645fc10             | mov                 byte ptr [ebp - 4], 0x10
            //   c645fc0d             | mov                 byte ptr [ebp - 4], 0xd
            //   e8????????           |                     

        $sequence_5 = { eb04 c645ed00 8a07 33db 895de4 895dd0 885dee }
            // n = 7, score = 400
            //   eb04                 | jmp                 6
            //   c645ed00             | mov                 byte ptr [ebp - 0x13], 0
            //   8a07                 | mov                 al, byte ptr [edi]
            //   33db                 | xor                 ebx, ebx
            //   895de4               | mov                 dword ptr [ebp - 0x1c], ebx
            //   895dd0               | mov                 dword ptr [ebp - 0x30], ebx
            //   885dee               | mov                 byte ptr [ebp - 0x12], bl

        $sequence_6 = { 6a00 880c10 015e14 6a00 e8???????? 83c40c 894730 }
            // n = 7, score = 400
            //   6a00                 | push                0
            //   880c10               | mov                 byte ptr [eax + edx], cl
            //   015e14               | add                 dword ptr [esi + 0x14], ebx
            //   6a00                 | push                0
            //   e8????????           |                     
            //   83c40c               | add                 esp, 0xc
            //   894730               | mov                 dword ptr [edi + 0x30], eax

        $sequence_7 = { c20400 8b4d08 6a01 e8???????? 5f 5e 5b }
            // n = 7, score = 400
            //   c20400               | ret                 4
            //   8b4d08               | mov                 ecx, dword ptr [ebp + 8]
            //   6a01                 | push                1
            //   e8????????           |                     
            //   5f                   | pop                 edi
            //   5e                   | pop                 esi
            //   5b                   | pop                 ebx

        $sequence_8 = { 720c 8b45d0 50 e8???????? 83c404 33db 33c9 }
            // n = 7, score = 400
            //   720c                 | jb                  0xe
            //   8b45d0               | mov                 eax, dword ptr [ebp - 0x30]
            //   50                   | push                eax
            //   e8????????           |                     
            //   83c404               | add                 esp, 4
            //   33db                 | xor                 ebx, ebx
            //   33c9                 | xor                 ecx, ecx

        $sequence_9 = { 68a8610000 6a01 50 ffd7 53 8d4de4 51 }
            // n = 7, score = 400
            //   68a8610000           | push                0x61a8
            //   6a01                 | push                1
            //   50                   | push                eax
            //   ffd7                 | call                edi
            //   53                   | push                ebx
            //   8d4de4               | lea                 ecx, [ebp - 0x1c]
            //   51                   | push                ecx

    condition:
        7 of them and filesize < 1076224
}