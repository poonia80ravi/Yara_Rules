rule win_unidentified_042_auto {

    meta:
        author = "Felix Bilstein - yara-signator at cocacoding dot com"
        date = "2022-10-07"
        version = "1"
        description = "Detects win.unidentified_042."
        info = "autogenerated rule brought to you by yara-signator"
        tool = "yara-signator v0.6.0"
        signator_config = "callsandjumps;datarefs;binvalue"
        malpedia_reference = "https://malpedia.caad.fkie.fraunhofer.de/details/win.unidentified_042"
        malpedia_rule_date = "20221007"
        malpedia_hash = "597f9539014e3d0f350c069cd804aa71679486ae"
        malpedia_version = "20221010"
        malpedia_license = "CC BY-SA 4.0"
        malpedia_sharing = "TLP:WHITE"

    /* DISCLAIMER
     * The strings used in this rule have been automatically selected from the
     * disassembly of memory dumps and unpacked files, using YARA-Signator.
     * The code and documentation is published here:
     * https://github.com/fxb-cocacoding/yara-signator
     * As Malpedia is used as data source, please note that for a given
     * number of families, only single samples are documented.
     * This likely impacts the degree of generalization these rules will offer.
     * Take the described generation method also into consideration when you
     * apply the rules in your use cases and assign them confidence levels.
     */


    strings:
        $sequence_0 = { 81ea46010000 7414 4a 0f8578020000 b8???????? c70109000000 5e }
            // n = 7, score = 100
            //   81ea46010000         | sub                 edx, 0x146
            //   7414                 | je                  0x16
            //   4a                   | dec                 edx
            //   0f8578020000         | jne                 0x27e
            //   b8????????           |                     
            //   c70109000000         | mov                 dword ptr [ecx], 9
            //   5e                   | pop                 esi

        $sequence_1 = { 0f8805ffffff 81c980000000 6689887c010000 f6c104 0f85fffeffff b88bfeffff c3 }
            // n = 7, score = 100
            //   0f8805ffffff         | js                  0xffffff0b
            //   81c980000000         | or                  ecx, 0x80
            //   6689887c010000       | mov                 word ptr [eax + 0x17c], cx
            //   f6c104               | test                cl, 4
            //   0f85fffeffff         | jne                 0xffffff05
            //   b88bfeffff           | mov                 eax, 0xfffffe8b
            //   c3                   | ret                 

        $sequence_2 = { 3bc3 7404 ffd0 eb06 ff15???????? 83c404 8945f0 }
            // n = 7, score = 100
            //   3bc3                 | cmp                 eax, ebx
            //   7404                 | je                  6
            //   ffd0                 | call                eax
            //   eb06                 | jmp                 8
            //   ff15????????         |                     
            //   83c404               | add                 esp, 4
            //   8945f0               | mov                 dword ptr [ebp - 0x10], eax

        $sequence_3 = { 333c95180e4300 0fb655fc 333c9518124300 8b55ec 337e18 c1ea18 8955ec }
            // n = 7, score = 100
            //   333c95180e4300       | xor                 edi, dword ptr [edx*4 + 0x430e18]
            //   0fb655fc             | movzx               edx, byte ptr [ebp - 4]
            //   333c9518124300       | xor                 edi, dword ptr [edx*4 + 0x431218]
            //   8b55ec               | mov                 edx, dword ptr [ebp - 0x14]
            //   337e18               | xor                 edi, dword ptr [esi + 0x18]
            //   c1ea18               | shr                 edx, 0x18
            //   8955ec               | mov                 dword ptr [ebp - 0x14], edx

        $sequence_4 = { 8d8535feffff 53 50 c745bc007b28f8 c745c074eab7f7 c745c4b1c4b499 c745c83c0876ea }
            // n = 7, score = 100
            //   8d8535feffff         | lea                 eax, [ebp - 0x1cb]
            //   53                   | push                ebx
            //   50                   | push                eax
            //   c745bc007b28f8       | mov                 dword ptr [ebp - 0x44], 0xf8287b00
            //   c745c074eab7f7       | mov                 dword ptr [ebp - 0x40], 0xf7b7ea74
            //   c745c4b1c4b499       | mov                 dword ptr [ebp - 0x3c], 0x99b4c4b1
            //   c745c83c0876ea       | mov                 dword ptr [ebp - 0x38], 0xea76083c

        $sequence_5 = { c1c60e 03f2 33de 895df8 23d9 33da 03583c }
            // n = 7, score = 100
            //   c1c60e               | rol                 esi, 0xe
            //   03f2                 | add                 esi, edx
            //   33de                 | xor                 ebx, esi
            //   895df8               | mov                 dword ptr [ebp - 8], ebx
            //   23d9                 | and                 ebx, ecx
            //   33da                 | xor                 ebx, edx
            //   03583c               | add                 ebx, dword ptr [eax + 0x3c]

        $sequence_6 = { 90 3bc3 7d0b 40 803c3040 75f5 3bc3 }
            // n = 7, score = 100
            //   90                   | nop                 
            //   3bc3                 | cmp                 eax, ebx
            //   7d0b                 | jge                 0xd
            //   40                   | inc                 eax
            //   803c3040             | cmp                 byte ptr [eax + esi], 0x40
            //   75f5                 | jne                 0xfffffff7
            //   3bc3                 | cmp                 eax, ebx

        $sequence_7 = { ff15???????? 8bd8 85db 743e 8d8524e9ffff 50 8d8d34e9ffff }
            // n = 7, score = 100
            //   ff15????????         |                     
            //   8bd8                 | mov                 ebx, eax
            //   85db                 | test                ebx, ebx
            //   743e                 | je                  0x40
            //   8d8524e9ffff         | lea                 eax, [ebp - 0x16dc]
            //   50                   | push                eax
            //   8d8d34e9ffff         | lea                 ecx, [ebp - 0x16cc]

        $sequence_8 = { ff15???????? 8b7f40 85ff 7410 8b450c 8b4b08 8b13 }
            // n = 7, score = 100
            //   ff15????????         |                     
            //   8b7f40               | mov                 edi, dword ptr [edi + 0x40]
            //   85ff                 | test                edi, edi
            //   7410                 | je                  0x12
            //   8b450c               | mov                 eax, dword ptr [ebp + 0xc]
            //   8b4b08               | mov                 ecx, dword ptr [ebx + 8]
            //   8b13                 | mov                 edx, dword ptr [ebx]

        $sequence_9 = { 51 8bc3 e8???????? 83c404 8bdf e8???????? bb14000000 }
            // n = 7, score = 100
            //   51                   | push                ecx
            //   8bc3                 | mov                 eax, ebx
            //   e8????????           |                     
            //   83c404               | add                 esp, 4
            //   8bdf                 | mov                 ebx, edi
            //   e8????????           |                     
            //   bb14000000           | mov                 ebx, 0x14

    condition:
        7 of them and filesize < 516096
}