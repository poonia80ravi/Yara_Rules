rule win_flawedgrace_auto {

    meta:
        author = "Felix Bilstein - yara-signator at cocacoding dot com"
        date = "2022-10-07"
        version = "1"
        description = "Detects win.flawedgrace."
        info = "autogenerated rule brought to you by yara-signator"
        tool = "yara-signator v0.6.0"
        signator_config = "callsandjumps;datarefs;binvalue"
        malpedia_reference = "https://malpedia.caad.fkie.fraunhofer.de/details/win.flawedgrace"
        malpedia_rule_date = "20221007"
        malpedia_hash = "597f9539014e3d0f350c069cd804aa71679486ae"
        malpedia_version = "20221010"
        malpedia_license = "CC BY-SA 4.0"
        malpedia_sharing = "TLP:WHITE"

    /* DISCLAIMER
     * The strings used in this rule have been automatically selected from the
     * disassembly of memory dumps and unpacked files, using YARA-Signator.
     * The code and documentation is published here:
     * https://github.com/fxb-cocacoding/yara-signator
     * As Malpedia is used as data source, please note that for a given
     * number of families, only single samples are documented.
     * This likely impacts the degree of generalization these rules will offer.
     * Take the described generation method also into consideration when you
     * apply the rules in your use cases and assign them confidence levels.
     */


    strings:
        $sequence_0 = { 0fb6c0 330c85e0b34500 8bc2 334fc0 c1e810 0fb6c0 894dec }
            // n = 7, score = 200
            //   0fb6c0               | movzx               eax, al
            //   330c85e0b34500       | xor                 ecx, dword ptr [eax*4 + 0x45b3e0]
            //   8bc2                 | mov                 eax, edx
            //   334fc0               | xor                 ecx, dword ptr [edi - 0x40]
            //   c1e810               | shr                 eax, 0x10
            //   0fb6c0               | movzx               eax, al
            //   894dec               | mov                 dword ptr [ebp - 0x14], ecx

        $sequence_1 = { 33f6 85db 7462 e8???????? 6a00 6880000000 6a03 }
            // n = 7, score = 200
            //   33f6                 | xor                 esi, esi
            //   85db                 | test                ebx, ebx
            //   7462                 | je                  0x64
            //   e8????????           |                     
            //   6a00                 | push                0
            //   6880000000           | push                0x80
            //   6a03                 | push                3

        $sequence_2 = { c685c5c8fffff0 c685c6c8ffff4c c685c7c8ffff8b c685c8c8ffffc8 c685c9c8ffff4c c685cac8ffff8b c685cbc8ffff45 }
            // n = 7, score = 200
            //   c685c5c8fffff0       | mov                 byte ptr [ebp - 0x373b], 0xf0
            //   c685c6c8ffff4c       | mov                 byte ptr [ebp - 0x373a], 0x4c
            //   c685c7c8ffff8b       | mov                 byte ptr [ebp - 0x3739], 0x8b
            //   c685c8c8ffffc8       | mov                 byte ptr [ebp - 0x3738], 0xc8
            //   c685c9c8ffff4c       | mov                 byte ptr [ebp - 0x3737], 0x4c
            //   c685cac8ffff8b       | mov                 byte ptr [ebp - 0x3736], 0x8b
            //   c685cbc8ffff45       | mov                 byte ptr [ebp - 0x3735], 0x45

        $sequence_3 = { c68546e5ffff00 c68547e5ffff00 c68548e5ffff00 c68549e5ffff00 c6854ae5ffff00 c6854be5ffff00 c6854ce5ffff00 }
            // n = 7, score = 200
            //   c68546e5ffff00       | mov                 byte ptr [ebp - 0x1aba], 0
            //   c68547e5ffff00       | mov                 byte ptr [ebp - 0x1ab9], 0
            //   c68548e5ffff00       | mov                 byte ptr [ebp - 0x1ab8], 0
            //   c68549e5ffff00       | mov                 byte ptr [ebp - 0x1ab7], 0
            //   c6854ae5ffff00       | mov                 byte ptr [ebp - 0x1ab6], 0
            //   c6854be5ffff00       | mov                 byte ptr [ebp - 0x1ab5], 0
            //   c6854ce5ffff00       | mov                 byte ptr [ebp - 0x1ab4], 0

        $sequence_4 = { 5b 8be5 5d c3 68b0000000 6a08 ff15???????? }
            // n = 7, score = 200
            //   5b                   | pop                 ebx
            //   8be5                 | mov                 esp, ebp
            //   5d                   | pop                 ebp
            //   c3                   | ret                 
            //   68b0000000           | push                0xb0
            //   6a08                 | push                8
            //   ff15????????         |                     

        $sequence_5 = { 83e801 8985d8bfffff 85d2 0f84a6000000 68f4010000 ff15???????? 8d8decc0ffff }
            // n = 7, score = 200
            //   83e801               | sub                 eax, 1
            //   8985d8bfffff         | mov                 dword ptr [ebp - 0x4028], eax
            //   85d2                 | test                edx, edx
            //   0f84a6000000         | je                  0xac
            //   68f4010000           | push                0x1f4
            //   ff15????????         |                     
            //   8d8decc0ffff         | lea                 ecx, [ebp - 0x3f14]

        $sequence_6 = { 51 ff15???????? 8b45f0 8b4dfc 33cd e8???????? 8be5 }
            // n = 7, score = 200
            //   51                   | push                ecx
            //   ff15????????         |                     
            //   8b45f0               | mov                 eax, dword ptr [ebp - 0x10]
            //   8b4dfc               | mov                 ecx, dword ptr [ebp - 4]
            //   33cd                 | xor                 ecx, ebp
            //   e8????????           |                     
            //   8be5                 | mov                 esp, ebp

        $sequence_7 = { c68535d7ffff4c c68536d7ffff8b c68537d7ffffc1 c68538d7ffff49 c68539d7ffff8b c6853ad7ffffd4 c6853bd7ffff48 }
            // n = 7, score = 200
            //   c68535d7ffff4c       | mov                 byte ptr [ebp - 0x28cb], 0x4c
            //   c68536d7ffff8b       | mov                 byte ptr [ebp - 0x28ca], 0x8b
            //   c68537d7ffffc1       | mov                 byte ptr [ebp - 0x28c9], 0xc1
            //   c68538d7ffff49       | mov                 byte ptr [ebp - 0x28c8], 0x49
            //   c68539d7ffff8b       | mov                 byte ptr [ebp - 0x28c7], 0x8b
            //   c6853ad7ffffd4       | mov                 byte ptr [ebp - 0x28c6], 0xd4
            //   c6853bd7ffff48       | mov                 byte ptr [ebp - 0x28c5], 0x48

        $sequence_8 = { c6852bdaffff00 c6852cdaffff2c c6852ddaffff32 c6852edaffff00 c6852fdaffff00 c68530daffff00 c68531daffff00 }
            // n = 7, score = 200
            //   c6852bdaffff00       | mov                 byte ptr [ebp - 0x25d5], 0
            //   c6852cdaffff2c       | mov                 byte ptr [ebp - 0x25d4], 0x2c
            //   c6852ddaffff32       | mov                 byte ptr [ebp - 0x25d3], 0x32
            //   c6852edaffff00       | mov                 byte ptr [ebp - 0x25d2], 0
            //   c6852fdaffff00       | mov                 byte ptr [ebp - 0x25d1], 0
            //   c68530daffff00       | mov                 byte ptr [ebp - 0x25d0], 0
            //   c68531daffff00       | mov                 byte ptr [ebp - 0x25cf], 0

        $sequence_9 = { 5d c20c00 85c0 8b1d???????? 7408 50 6a00 }
            // n = 7, score = 200
            //   5d                   | pop                 ebp
            //   c20c00               | ret                 0xc
            //   85c0                 | test                eax, eax
            //   8b1d????????         |                     
            //   7408                 | je                  0xa
            //   50                   | push                eax
            //   6a00                 | push                0

    condition:
        7 of them and filesize < 966656
}