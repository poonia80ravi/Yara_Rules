rule win_systembc_auto {

    meta:
        author = "Felix Bilstein - yara-signator at cocacoding dot com"
        date = "2022-10-07"
        version = "1"
        description = "Detects win.systembc."
        info = "autogenerated rule brought to you by yara-signator"
        tool = "yara-signator v0.6.0"
        signator_config = "callsandjumps;datarefs;binvalue"
        malpedia_reference = "https://malpedia.caad.fkie.fraunhofer.de/details/win.systembc"
        malpedia_rule_date = "20221007"
        malpedia_hash = "597f9539014e3d0f350c069cd804aa71679486ae"
        malpedia_version = "20221010"
        malpedia_license = "CC BY-SA 4.0"
        malpedia_sharing = "TLP:WHITE"

    /* DISCLAIMER
     * The strings used in this rule have been automatically selected from the
     * disassembly of memory dumps and unpacked files, using YARA-Signator.
     * The code and documentation is published here:
     * https://github.com/fxb-cocacoding/yara-signator
     * As Malpedia is used as data source, please note that for a given
     * number of families, only single samples are documented.
     * This likely impacts the degree of generalization these rules will offer.
     * Take the described generation method also into consideration when you
     * apply the rules in your use cases and assign them confidence levels.
     */


    strings:
        $sequence_0 = { 8d85f0fbffff 50 8b45f8 8b08 50 8b410c ffd0 }
            // n = 7, score = 800
            //   8d85f0fbffff         | lea                 eax, [ebp - 0x410]
            //   50                   | push                eax
            //   8b45f8               | mov                 eax, dword ptr [ebp - 8]
            //   8b08                 | mov                 ecx, dword ptr [eax]
            //   50                   | push                eax
            //   8b410c               | mov                 eax, dword ptr [ecx + 0xc]
            //   ffd0                 | call                eax

        $sequence_1 = { 8b943088000000 8b8c308c000000 eb08 8b543078 8b4c307c 8955ec 894de8 }
            // n = 7, score = 800
            //   8b943088000000       | mov                 edx, dword ptr [eax + esi + 0x88]
            //   8b8c308c000000       | mov                 ecx, dword ptr [eax + esi + 0x8c]
            //   eb08                 | jmp                 0xa
            //   8b543078             | mov                 edx, dword ptr [eax + esi + 0x78]
            //   8b4c307c             | mov                 ecx, dword ptr [eax + esi + 0x7c]
            //   8955ec               | mov                 dword ptr [ebp - 0x14], edx
            //   894de8               | mov                 dword ptr [ebp - 0x18], ecx

        $sequence_2 = { 668b4702 50 8d4704 50 }
            // n = 4, score = 800
            //   668b4702             | mov                 ax, word ptr [edi + 2]
            //   50                   | push                eax
            //   8d4704               | lea                 eax, [edi + 4]
            //   50                   | push                eax

        $sequence_3 = { 8b4c307c 8955ec 894de8 0bc0 0f8495000000 8d0432 }
            // n = 6, score = 800
            //   8b4c307c             | mov                 ecx, dword ptr [eax + esi + 0x7c]
            //   8955ec               | mov                 dword ptr [ebp - 0x14], edx
            //   894de8               | mov                 dword ptr [ebp - 0x18], ecx
            //   0bc0                 | or                  eax, eax
            //   0f8495000000         | je                  0x9b
            //   8d0432               | lea                 eax, [edx + esi]

        $sequence_4 = { eb08 43 3b5dfc 7296 33c0 5e 5f }
            // n = 7, score = 800
            //   eb08                 | jmp                 0xa
            //   43                   | inc                 ebx
            //   3b5dfc               | cmp                 ebx, dword ptr [ebp - 4]
            //   7296                 | jb                  0xffffff98
            //   33c0                 | xor                 eax, eax
            //   5e                   | pop                 esi
            //   5f                   | pop                 edi

        $sequence_5 = { 898538f4ffff 8bbd4cf9ffff 8b8d50f9ffff c6043900 33d2 }
            // n = 5, score = 800
            //   898538f4ffff         | mov                 dword ptr [ebp - 0xbc8], eax
            //   8bbd4cf9ffff         | mov                 edi, dword ptr [ebp - 0x6b4]
            //   8b8d50f9ffff         | mov                 ecx, dword ptr [ebp - 0x6b0]
            //   c6043900             | mov                 byte ptr [ecx + edi], 0
            //   33d2                 | xor                 edx, edx

        $sequence_6 = { c78524f4ffff04000000 6a00 8d8524f4ffff 50 8d8528f4ffff }
            // n = 5, score = 800
            //   c78524f4ffff04000000     | mov    dword ptr [ebp - 0xbdc], 4
            //   6a00                 | push                0
            //   8d8524f4ffff         | lea                 eax, [ebp - 0xbdc]
            //   50                   | push                eax
            //   8d8528f4ffff         | lea                 eax, [ebp - 0xbd8]

        $sequence_7 = { 8d4103 50 57 ff75f8 e8???????? 833c9e00 }
            // n = 6, score = 800
            //   8d4103               | lea                 eax, [ecx + 3]
            //   50                   | push                eax
            //   57                   | push                edi
            //   ff75f8               | push                dword ptr [ebp - 8]
            //   e8????????           |                     
            //   833c9e00             | cmp                 dword ptr [esi + ebx*4], 0

        $sequence_8 = { 8b7508 8b463c 668b543018 6681fa0b02 }
            // n = 4, score = 800
            //   8b7508               | mov                 esi, dword ptr [ebp + 8]
            //   8b463c               | mov                 eax, dword ptr [esi + 0x3c]
            //   668b543018           | mov                 dx, word ptr [eax + esi + 0x18]
            //   6681fa0b02           | cmp                 dx, 0x20b

        $sequence_9 = { 53 57 56 8b7d08 b000 }
            // n = 5, score = 800
            //   53                   | push                ebx
            //   57                   | push                edi
            //   56                   | push                esi
            //   8b7d08               | mov                 edi, dword ptr [ebp + 8]
            //   b000                 | mov                 al, 0

    condition:
        7 of them and filesize < 57344
}