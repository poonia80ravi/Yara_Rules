rule win_satana_auto {

    meta:
        author = "Felix Bilstein - yara-signator at cocacoding dot com"
        date = "2022-10-07"
        version = "1"
        description = "Detects win.satana."
        info = "autogenerated rule brought to you by yara-signator"
        tool = "yara-signator v0.6.0"
        signator_config = "callsandjumps;datarefs;binvalue"
        malpedia_reference = "https://malpedia.caad.fkie.fraunhofer.de/details/win.satana"
        malpedia_rule_date = "20221007"
        malpedia_hash = "597f9539014e3d0f350c069cd804aa71679486ae"
        malpedia_version = "20221010"
        malpedia_license = "CC BY-SA 4.0"
        malpedia_sharing = "TLP:WHITE"

    /* DISCLAIMER
     * The strings used in this rule have been automatically selected from the
     * disassembly of memory dumps and unpacked files, using YARA-Signator.
     * The code and documentation is published here:
     * https://github.com/fxb-cocacoding/yara-signator
     * As Malpedia is used as data source, please note that for a given
     * number of families, only single samples are documented.
     * This likely impacts the degree of generalization these rules will offer.
     * Take the described generation method also into consideration when you
     * apply the rules in your use cases and assign them confidence levels.
     */


    strings:
        $sequence_0 = { 33d2 8bf7 f7f6 8d544101 b8???????? 8915???????? e8???????? }
            // n = 7, score = 100
            //   33d2                 | xor                 edx, edx
            //   8bf7                 | mov                 esi, edi
            //   f7f6                 | div                 esi
            //   8d544101             | lea                 edx, [ecx + eax*2 + 1]
            //   b8????????           |                     
            //   8915????????         |                     
            //   e8????????           |                     

        $sequence_1 = { 668b16 83c602 6685d2 75f5 83c602 }
            // n = 5, score = 100
            //   668b16               | mov                 dx, word ptr [esi]
            //   83c602               | add                 esi, 2
            //   6685d2               | test                dx, dx
            //   75f5                 | jne                 0xfffffff7
            //   83c602               | add                 esi, 2

        $sequence_2 = { 33d2 33f6 33c9 3905???????? 7619 803c070a }
            // n = 6, score = 100
            //   33d2                 | xor                 edx, edx
            //   33f6                 | xor                 esi, esi
            //   33c9                 | xor                 ecx, ecx
            //   3905????????         |                     
            //   7619                 | jbe                 0x1b
            //   803c070a             | cmp                 byte ptr [edi + eax], 0xa

        $sequence_3 = { 83c408 6a00 6a04 8d44240c 50 }
            // n = 5, score = 100
            //   83c408               | add                 esp, 8
            //   6a00                 | push                0
            //   6a04                 | push                4
            //   8d44240c             | lea                 eax, [esp + 0xc]
            //   50                   | push                eax

        $sequence_4 = { c745f478817e51 66c745f88500 e8???????? 8b15???????? 50 52 ff15???????? }
            // n = 7, score = 100
            //   c745f478817e51       | mov                 dword ptr [ebp - 0xc], 0x517e8178
            //   66c745f88500         | mov                 word ptr [ebp - 8], 0x85
            //   e8????????           |                     
            //   8b15????????         |                     
            //   50                   | push                eax
            //   52                   | push                edx
            //   ff15????????         |                     

        $sequence_5 = { 81ea???????? 52 68???????? 8d4674 50 51 }
            // n = 6, score = 100
            //   81ea????????         |                     
            //   52                   | push                edx
            //   68????????           |                     
            //   8d4674               | lea                 eax, [esi + 0x74]
            //   50                   | push                eax
            //   51                   | push                ecx

        $sequence_6 = { 8b1485f8854100 0fb701 668902 83c102 83c202 6685c0 75ef }
            // n = 7, score = 100
            //   8b1485f8854100       | mov                 edx, dword ptr [eax*4 + 0x4185f8]
            //   0fb701               | movzx               eax, word ptr [ecx]
            //   668902               | mov                 word ptr [edx], ax
            //   83c102               | add                 ecx, 2
            //   83c202               | add                 edx, 2
            //   6685c0               | test                ax, ax
            //   75ef                 | jne                 0xfffffff1

        $sequence_7 = { 8b7dac 90 837dd800 0f8c9c000000 7f0a 837dd400 0f8690000000 }
            // n = 7, score = 100
            //   8b7dac               | mov                 edi, dword ptr [ebp - 0x54]
            //   90                   | nop                 
            //   837dd800             | cmp                 dword ptr [ebp - 0x28], 0
            //   0f8c9c000000         | jl                  0xa2
            //   7f0a                 | jg                  0xc
            //   837dd400             | cmp                 dword ptr [ebp - 0x2c], 0
            //   0f8690000000         | jbe                 0x96

        $sequence_8 = { 40 84c9 75f6 c785e0feffff65000000 33c0 8da42400000000 }
            // n = 6, score = 100
            //   40                   | inc                 eax
            //   84c9                 | test                cl, cl
            //   75f6                 | jne                 0xfffffff8
            //   c785e0feffff65000000     | mov    dword ptr [ebp - 0x120], 0x65
            //   33c0                 | xor                 eax, eax
            //   8da42400000000       | lea                 esp, [esp]

        $sequence_9 = { ba???????? 81ea???????? 52 68???????? 8d4674 50 51 }
            // n = 7, score = 100
            //   ba????????           |                     
            //   81ea????????         |                     
            //   52                   | push                edx
            //   68????????           |                     
            //   8d4674               | lea                 eax, [esi + 0x74]
            //   50                   | push                eax
            //   51                   | push                ecx

    condition:
        7 of them and filesize < 221184
}