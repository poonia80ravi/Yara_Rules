rule win_tiop_auto {

    meta:
        author = "Felix Bilstein - yara-signator at cocacoding dot com"
        date = "2022-10-07"
        version = "1"
        description = "Detects win.tiop."
        info = "autogenerated rule brought to you by yara-signator"
        tool = "yara-signator v0.6.0"
        signator_config = "callsandjumps;datarefs;binvalue"
        malpedia_reference = "https://malpedia.caad.fkie.fraunhofer.de/details/win.tiop"
        malpedia_rule_date = "20221007"
        malpedia_hash = "597f9539014e3d0f350c069cd804aa71679486ae"
        malpedia_version = "20221010"
        malpedia_license = "CC BY-SA 4.0"
        malpedia_sharing = "TLP:WHITE"

    /* DISCLAIMER
     * The strings used in this rule have been automatically selected from the
     * disassembly of memory dumps and unpacked files, using YARA-Signator.
     * The code and documentation is published here:
     * https://github.com/fxb-cocacoding/yara-signator
     * As Malpedia is used as data source, please note that for a given
     * number of families, only single samples are documented.
     * This likely impacts the degree of generalization these rules will offer.
     * Take the described generation method also into consideration when you
     * apply the rules in your use cases and assign them confidence levels.
     */


    strings:
        $sequence_0 = { 83ec44 a1???????? 53 55 56 }
            // n = 5, score = 100
            //   83ec44               | sub                 esp, 0x44
            //   a1????????           |                     
            //   53                   | push                ebx
            //   55                   | push                ebp
            //   56                   | push                esi

        $sequence_1 = { 8bf8 83c404 83ffff 7412 }
            // n = 4, score = 100
            //   8bf8                 | mov                 edi, eax
            //   83c404               | add                 esp, 4
            //   83ffff               | cmp                 edi, -1
            //   7412                 | je                  0x14

        $sequence_2 = { 8b4308 8b4b14 50 51 52 e8???????? }
            // n = 6, score = 100
            //   8b4308               | mov                 eax, dword ptr [ebx + 8]
            //   8b4b14               | mov                 ecx, dword ptr [ebx + 0x14]
            //   50                   | push                eax
            //   51                   | push                ecx
            //   52                   | push                edx
            //   e8????????           |                     

        $sequence_3 = { 7541 57 bf???????? 83c9ff 33c0 f2ae f7d1 }
            // n = 7, score = 100
            //   7541                 | jne                 0x43
            //   57                   | push                edi
            //   bf????????           |                     
            //   83c9ff               | or                  ecx, 0xffffffff
            //   33c0                 | xor                 eax, eax
            //   f2ae                 | repne scasb         al, byte ptr es:[edi]
            //   f7d1                 | not                 ecx

        $sequence_4 = { 0f8cd4010000 8b442410 3bc3 0f84c8010000 8d542438 895c2438 8b08 }
            // n = 7, score = 100
            //   0f8cd4010000         | jl                  0x1da
            //   8b442410             | mov                 eax, dword ptr [esp + 0x10]
            //   3bc3                 | cmp                 eax, ebx
            //   0f84c8010000         | je                  0x1ce
            //   8d542438             | lea                 edx, [esp + 0x38]
            //   895c2438             | mov                 dword ptr [esp + 0x38], ebx
            //   8b08                 | mov                 ecx, dword ptr [eax]

        $sequence_5 = { 49 85d2 741a 8d5101 8b4c2404 56 }
            // n = 6, score = 100
            //   49                   | dec                 ecx
            //   85d2                 | test                edx, edx
            //   741a                 | je                  0x1c
            //   8d5101               | lea                 edx, [ecx + 1]
            //   8b4c2404             | mov                 ecx, dword ptr [esp + 4]
            //   56                   | push                esi

        $sequence_6 = { b908020000 33c0 8dbc2491000000 889c2490000000 f3ab 8b0d???????? 8d942490000000 }
            // n = 7, score = 100
            //   b908020000           | mov                 ecx, 0x208
            //   33c0                 | xor                 eax, eax
            //   8dbc2491000000       | lea                 edi, [esp + 0x91]
            //   889c2490000000       | mov                 byte ptr [esp + 0x90], bl
            //   f3ab                 | rep stosd           dword ptr es:[edi], eax
            //   8b0d????????         |                     
            //   8d942490000000       | lea                 edx, [esp + 0x90]

        $sequence_7 = { 8b84245c010000 83c410 8d542444 6a00 52 50 ff15???????? }
            // n = 7, score = 100
            //   8b84245c010000       | mov                 eax, dword ptr [esp + 0x15c]
            //   83c410               | add                 esp, 0x10
            //   8d542444             | lea                 edx, [esp + 0x44]
            //   6a00                 | push                0
            //   52                   | push                edx
            //   50                   | push                eax
            //   ff15????????         |                     

        $sequence_8 = { ff520c 8d4c2408 c7442418ffffffff e8???????? 8b3d???????? be01000000 8d4c240c }
            // n = 7, score = 100
            //   ff520c               | call                dword ptr [edx + 0xc]
            //   8d4c2408             | lea                 ecx, [esp + 8]
            //   c7442418ffffffff     | mov                 dword ptr [esp + 0x18], 0xffffffff
            //   e8????????           |                     
            //   8b3d????????         |                     
            //   be01000000           | mov                 esi, 1
            //   8d4c240c             | lea                 ecx, [esp + 0xc]

        $sequence_9 = { b9???????? e8???????? 5f 5e c605????????00 b801000000 5b }
            // n = 7, score = 100
            //   b9????????           |                     
            //   e8????????           |                     
            //   5f                   | pop                 edi
            //   5e                   | pop                 esi
            //   c605????????00       |                     
            //   b801000000           | mov                 eax, 1
            //   5b                   | pop                 ebx

    condition:
        7 of them and filesize < 712704
}