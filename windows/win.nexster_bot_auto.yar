rule win_nexster_bot_auto {

    meta:
        author = "Felix Bilstein - yara-signator at cocacoding dot com"
        date = "2022-10-07"
        version = "1"
        description = "Detects win.nexster_bot."
        info = "autogenerated rule brought to you by yara-signator"
        tool = "yara-signator v0.6.0"
        signator_config = "callsandjumps;datarefs;binvalue"
        malpedia_reference = "https://malpedia.caad.fkie.fraunhofer.de/details/win.nexster_bot"
        malpedia_rule_date = "20221007"
        malpedia_hash = "597f9539014e3d0f350c069cd804aa71679486ae"
        malpedia_version = "20221010"
        malpedia_license = "CC BY-SA 4.0"
        malpedia_sharing = "TLP:WHITE"

    /* DISCLAIMER
     * The strings used in this rule have been automatically selected from the
     * disassembly of memory dumps and unpacked files, using YARA-Signator.
     * The code and documentation is published here:
     * https://github.com/fxb-cocacoding/yara-signator
     * As Malpedia is used as data source, please note that for a given
     * number of families, only single samples are documented.
     * This likely impacts the degree of generalization these rules will offer.
     * Take the described generation method also into consideration when you
     * apply the rules in your use cases and assign them confidence levels.
     */


    strings:
        $sequence_0 = { e8???????? 8b8c24b8000000 6a0a 8d842430020000 50 }
            // n = 5, score = 100
            //   e8????????           |                     
            //   8b8c24b8000000       | mov                 ecx, dword ptr [esp + 0xb8]
            //   6a0a                 | push                0xa
            //   8d842430020000       | lea                 eax, [esp + 0x230]
            //   50                   | push                eax

        $sequence_1 = { 8bc8 c1f905 83e01f c1e006 8b0c8d20804100 8d440104 }
            // n = 6, score = 100
            //   8bc8                 | mov                 ecx, eax
            //   c1f905               | sar                 ecx, 5
            //   83e01f               | and                 eax, 0x1f
            //   c1e006               | shl                 eax, 6
            //   8b0c8d20804100       | mov                 ecx, dword ptr [ecx*4 + 0x418020]
            //   8d440104             | lea                 eax, [ecx + eax + 4]

        $sequence_2 = { c1f905 8bf0 83e61f 8d3c8d20804100 8b0f c1e606 833c0eff }
            // n = 7, score = 100
            //   c1f905               | sar                 ecx, 5
            //   8bf0                 | mov                 esi, eax
            //   83e61f               | and                 esi, 0x1f
            //   8d3c8d20804100       | lea                 edi, [ecx*4 + 0x418020]
            //   8b0f                 | mov                 ecx, dword ptr [edi]
            //   c1e606               | shl                 esi, 6
            //   833c0eff             | cmp                 dword ptr [esi + ecx], -1

        $sequence_3 = { 6a00 50 c685bc0d000000 e8???????? 33c9 }
            // n = 5, score = 100
            //   6a00                 | push                0
            //   50                   | push                eax
            //   c685bc0d000000       | mov                 byte ptr [ebp + 0xdbc], 0
            //   e8????????           |                     
            //   33c9                 | xor                 ecx, ecx

        $sequence_4 = { e8???????? 83c404 83bc249800000005 0f855d010000 8b84249c000000 85c0 }
            // n = 6, score = 100
            //   e8????????           |                     
            //   83c404               | add                 esp, 4
            //   83bc249800000005     | cmp                 dword ptr [esp + 0x98], 5
            //   0f855d010000         | jne                 0x163
            //   8b84249c000000       | mov                 eax, dword ptr [esp + 0x9c]
            //   85c0                 | test                eax, eax

        $sequence_5 = { 8d9424b8010000 52 8d842460020000 68???????? 50 e8???????? }
            // n = 6, score = 100
            //   8d9424b8010000       | lea                 edx, [esp + 0x1b8]
            //   52                   | push                edx
            //   8d842460020000       | lea                 eax, [esp + 0x260]
            //   68????????           |                     
            //   50                   | push                eax
            //   e8????????           |                     

        $sequence_6 = { 8975e0 8b04bd20804100 0500080000 3bf0 }
            // n = 4, score = 100
            //   8975e0               | mov                 dword ptr [ebp - 0x20], esi
            //   8b04bd20804100       | mov                 eax, dword ptr [edi*4 + 0x418020]
            //   0500080000           | add                 eax, 0x800
            //   3bf0                 | cmp                 esi, eax

        $sequence_7 = { 899424b4010000 66898424b8010000 888c24ba010000 e9???????? }
            // n = 4, score = 100
            //   899424b4010000       | mov                 dword ptr [esp + 0x1b4], edx
            //   66898424b8010000     | mov                 word ptr [esp + 0x1b8], ax
            //   888c24ba010000       | mov                 byte ptr [esp + 0x1ba], cl
            //   e9????????           |                     

        $sequence_8 = { 8b75e0 8bc6 c1f805 83e61f c1e606 03348520804100 8b45e4 }
            // n = 7, score = 100
            //   8b75e0               | mov                 esi, dword ptr [ebp - 0x20]
            //   8bc6                 | mov                 eax, esi
            //   c1f805               | sar                 eax, 5
            //   83e61f               | and                 esi, 0x1f
            //   c1e606               | shl                 esi, 6
            //   03348520804100       | add                 esi, dword ptr [eax*4 + 0x418020]
            //   8b45e4               | mov                 eax, dword ptr [ebp - 0x1c]

        $sequence_9 = { 83ec08 56 68???????? 50 8d4c240c 51 e8???????? }
            // n = 7, score = 100
            //   83ec08               | sub                 esp, 8
            //   56                   | push                esi
            //   68????????           |                     
            //   50                   | push                eax
            //   8d4c240c             | lea                 ecx, [esp + 0xc]
            //   51                   | push                ecx
            //   e8????????           |                     

    condition:
        7 of them and filesize < 245760
}