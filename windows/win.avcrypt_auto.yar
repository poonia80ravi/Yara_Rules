rule win_avcrypt_auto {

    meta:
        author = "Felix Bilstein - yara-signator at cocacoding dot com"
        date = "2022-10-07"
        version = "1"
        description = "Detects win.avcrypt."
        info = "autogenerated rule brought to you by yara-signator"
        tool = "yara-signator v0.6.0"
        signator_config = "callsandjumps;datarefs;binvalue"
        malpedia_reference = "https://malpedia.caad.fkie.fraunhofer.de/details/win.avcrypt"
        malpedia_rule_date = "20221007"
        malpedia_hash = "597f9539014e3d0f350c069cd804aa71679486ae"
        malpedia_version = "20221010"
        malpedia_license = "CC BY-SA 4.0"
        malpedia_sharing = "TLP:WHITE"

    /* DISCLAIMER
     * The strings used in this rule have been automatically selected from the
     * disassembly of memory dumps and unpacked files, using YARA-Signator.
     * The code and documentation is published here:
     * https://github.com/fxb-cocacoding/yara-signator
     * As Malpedia is used as data source, please note that for a given
     * number of families, only single samples are documented.
     * This likely impacts the degree of generalization these rules will offer.
     * Take the described generation method also into consideration when you
     * apply the rules in your use cases and assign them confidence levels.
     */


    strings:
        $sequence_0 = { 33ff 8d5001 47 8b048d80b54300 4e 807d1300 8955e4 }
            // n = 7, score = 100
            //   33ff                 | xor                 edi, edi
            //   8d5001               | lea                 edx, [eax + 1]
            //   47                   | inc                 edi
            //   8b048d80b54300       | mov                 eax, dword ptr [ecx*4 + 0x43b580]
            //   4e                   | dec                 esi
            //   807d1300             | cmp                 byte ptr [ebp + 0x13], 0
            //   8955e4               | mov                 dword ptr [ebp - 0x1c], edx

        $sequence_1 = { e8???????? 8ac3 e8???????? c3 68d4040000 b8???????? e8???????? }
            // n = 7, score = 100
            //   e8????????           |                     
            //   8ac3                 | mov                 al, bl
            //   e8????????           |                     
            //   c3                   | ret                 
            //   68d4040000           | push                0x4d4
            //   b8????????           |                     
            //   e8????????           |                     

        $sequence_2 = { a1???????? 33c5 8945fc 8365b800 8d45bc 56 52 }
            // n = 7, score = 100
            //   a1????????           |                     
            //   33c5                 | xor                 eax, ebp
            //   8945fc               | mov                 dword ptr [ebp - 4], eax
            //   8365b800             | and                 dword ptr [ebp - 0x48], 0
            //   8d45bc               | lea                 eax, [ebp - 0x44]
            //   56                   | push                esi
            //   52                   | push                edx

        $sequence_3 = { 83e21f c1e206 03148580b54300 eb02 8bd3 f642247f }
            // n = 6, score = 100
            //   83e21f               | and                 edx, 0x1f
            //   c1e206               | shl                 edx, 6
            //   03148580b54300       | add                 edx, dword ptr [eax*4 + 0x43b580]
            //   eb02                 | jmp                 4
            //   8bd3                 | mov                 edx, ebx
            //   f642247f             | test                byte ptr [edx + 0x24], 0x7f

        $sequence_4 = { 50 8b8528e5ffff 8b048580b54300 ff3401 ff15???????? 8bb540e5ffff 8bbd34e5ffff }
            // n = 7, score = 100
            //   50                   | push                eax
            //   8b8528e5ffff         | mov                 eax, dword ptr [ebp - 0x1ad8]
            //   8b048580b54300       | mov                 eax, dword ptr [eax*4 + 0x43b580]
            //   ff3401               | push                dword ptr [ecx + eax]
            //   ff15????????         |                     
            //   8bb540e5ffff         | mov                 esi, dword ptr [ebp - 0x1ac0]
            //   8bbd34e5ffff         | mov                 edi, dword ptr [ebp - 0x1acc]

        $sequence_5 = { c20400 55 8bec 56 8d7118 8bce e8???????? }
            // n = 7, score = 100
            //   c20400               | ret                 4
            //   55                   | push                ebp
            //   8bec                 | mov                 ebp, esp
            //   56                   | push                esi
            //   8d7118               | lea                 esi, [ecx + 0x18]
            //   8bce                 | mov                 ecx, esi
            //   e8????????           |                     

        $sequence_6 = { 8be5 5d c3 55 8bec 81ec58040000 a1???????? }
            // n = 7, score = 100
            //   8be5                 | mov                 esp, ebp
            //   5d                   | pop                 ebp
            //   c3                   | ret                 
            //   55                   | push                ebp
            //   8bec                 | mov                 ebp, esp
            //   81ec58040000         | sub                 esp, 0x458
            //   a1????????           |                     

        $sequence_7 = { 50 e8???????? 83c40c 85c0 7425 837e1408 7207 }
            // n = 7, score = 100
            //   50                   | push                eax
            //   e8????????           |                     
            //   83c40c               | add                 esp, 0xc
            //   85c0                 | test                eax, eax
            //   7425                 | je                  0x27
            //   837e1408             | cmp                 dword ptr [esi + 0x14], 8
            //   7207                 | jb                  9

        $sequence_8 = { 30e1 55 ce f8 40 63d4 50 }
            // n = 7, score = 100
            //   30e1                 | xor                 cl, ah
            //   55                   | push                ebp
            //   ce                   | into                
            //   f8                   | clc                 
            //   40                   | inc                 eax
            //   63d4                 | arpl                sp, dx
            //   50                   | push                eax

        $sequence_9 = { 75db 8b5df0 5f 8933 }
            // n = 4, score = 100
            //   75db                 | jne                 0xffffffdd
            //   8b5df0               | mov                 ebx, dword ptr [ebp - 0x10]
            //   5f                   | pop                 edi
            //   8933                 | mov                 dword ptr [ebx], esi

    condition:
        7 of them and filesize < 6160384
}