rule win_magala_auto {

    meta:
        author = "Felix Bilstein - yara-signator at cocacoding dot com"
        date = "2022-10-07"
        version = "1"
        description = "Detects win.magala."
        info = "autogenerated rule brought to you by yara-signator"
        tool = "yara-signator v0.6.0"
        signator_config = "callsandjumps;datarefs;binvalue"
        malpedia_reference = "https://malpedia.caad.fkie.fraunhofer.de/details/win.magala"
        malpedia_rule_date = "20221007"
        malpedia_hash = "597f9539014e3d0f350c069cd804aa71679486ae"
        malpedia_version = "20221010"
        malpedia_license = "CC BY-SA 4.0"
        malpedia_sharing = "TLP:WHITE"

    /* DISCLAIMER
     * The strings used in this rule have been automatically selected from the
     * disassembly of memory dumps and unpacked files, using YARA-Signator.
     * The code and documentation is published here:
     * https://github.com/fxb-cocacoding/yara-signator
     * As Malpedia is used as data source, please note that for a given
     * number of families, only single samples are documented.
     * This likely impacts the degree of generalization these rules will offer.
     * Take the described generation method also into consideration when you
     * apply the rules in your use cases and assign them confidence levels.
     */


    strings:
        $sequence_0 = { 57 50 e8???????? 8b4614 83c40c 83f808 7204 }
            // n = 7, score = 200
            //   57                   | push                edi
            //   50                   | push                eax
            //   e8????????           |                     
            //   8b4614               | mov                 eax, dword ptr [esi + 0x14]
            //   83c40c               | add                 esp, 0xc
            //   83f808               | cmp                 eax, 8
            //   7204                 | jb                  6

        $sequence_1 = { c70300000000 eb12 8b47fc 40 50 }
            // n = 5, score = 200
            //   c70300000000         | mov                 dword ptr [ebx], 0
            //   eb12                 | jmp                 0x14
            //   8b47fc               | mov                 eax, dword ptr [edi - 4]
            //   40                   | inc                 eax
            //   50                   | push                eax

        $sequence_2 = { 50 8d4dcc e8???????? c645fc00 8b45ec }
            // n = 5, score = 200
            //   50                   | push                eax
            //   8d4dcc               | lea                 ecx, [ebp - 0x34]
            //   e8????????           |                     
            //   c645fc00             | mov                 byte ptr [ebp - 4], 0
            //   8b45ec               | mov                 eax, dword ptr [ebp - 0x14]

        $sequence_3 = { 8bf0 c645fc03 837e1410 7202 8b36 85f6 7504 }
            // n = 7, score = 200
            //   8bf0                 | mov                 esi, eax
            //   c645fc03             | mov                 byte ptr [ebp - 4], 3
            //   837e1410             | cmp                 dword ptr [esi + 0x14], 0x10
            //   7202                 | jb                  4
            //   8b36                 | mov                 esi, dword ptr [esi]
            //   85f6                 | test                esi, esi
            //   7504                 | jne                 6

        $sequence_4 = { ff700c 8b4904 ff7008 8b00 03ca 51 }
            // n = 6, score = 200
            //   ff700c               | push                dword ptr [eax + 0xc]
            //   8b4904               | mov                 ecx, dword ptr [ecx + 4]
            //   ff7008               | push                dword ptr [eax + 8]
            //   8b00                 | mov                 eax, dword ptr [eax]
            //   03ca                 | add                 ecx, edx
            //   51                   | push                ecx

        $sequence_5 = { e8???????? 8bc8 51 e8???????? 83c404 8b45a4 83f808 }
            // n = 7, score = 200
            //   e8????????           |                     
            //   8bc8                 | mov                 ecx, eax
            //   51                   | push                ecx
            //   e8????????           |                     
            //   83c404               | add                 esp, 4
            //   8b45a4               | mov                 eax, dword ptr [ebp - 0x5c]
            //   83f808               | cmp                 eax, 8

        $sequence_6 = { 68???????? e8???????? 83c404 33f6 eb05 be01000000 8b4ddc }
            // n = 7, score = 200
            //   68????????           |                     
            //   e8????????           |                     
            //   83c404               | add                 esp, 4
            //   33f6                 | xor                 esi, esi
            //   eb05                 | jmp                 7
            //   be01000000           | mov                 esi, 1
            //   8b4ddc               | mov                 ecx, dword ptr [ebp - 0x24]

        $sequence_7 = { b9???????? bb00008000 0f4355bc 833d????????08 0f430d???????? 33c0 837dec02 }
            // n = 7, score = 200
            //   b9????????           |                     
            //   bb00008000           | mov                 ebx, 0x800000
            //   0f4355bc             | cmovae              edx, dword ptr [ebp - 0x44]
            //   833d????????08       |                     
            //   0f430d????????       |                     
            //   33c0                 | xor                 eax, eax
            //   837dec02             | cmp                 dword ptr [ebp - 0x14], 2

        $sequence_8 = { 51 ffd0 0fb6041e 8d8d48ffffff 83c418 50 e8???????? }
            // n = 7, score = 200
            //   51                   | push                ecx
            //   ffd0                 | call                eax
            //   0fb6041e             | movzx               eax, byte ptr [esi + ebx]
            //   8d8d48ffffff         | lea                 ecx, [ebp - 0xb8]
            //   83c418               | add                 esp, 0x18
            //   50                   | push                eax
            //   e8????????           |                     

        $sequence_9 = { ff15???????? 33f6 c645fc04 8b45c0 85c0 7406 8b08 }
            // n = 7, score = 200
            //   ff15????????         |                     
            //   33f6                 | xor                 esi, esi
            //   c645fc04             | mov                 byte ptr [ebp - 4], 4
            //   8b45c0               | mov                 eax, dword ptr [ebp - 0x40]
            //   85c0                 | test                eax, eax
            //   7406                 | je                  8
            //   8b08                 | mov                 ecx, dword ptr [eax]

    condition:
        7 of them and filesize < 589824
}