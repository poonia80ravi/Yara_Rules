rule win_zerocleare_auto {

    meta:
        author = "Felix Bilstein - yara-signator at cocacoding dot com"
        date = "2022-10-07"
        version = "1"
        description = "Detects win.zerocleare."
        info = "autogenerated rule brought to you by yara-signator"
        tool = "yara-signator v0.6.0"
        signator_config = "callsandjumps;datarefs;binvalue"
        malpedia_reference = "https://malpedia.caad.fkie.fraunhofer.de/details/win.zerocleare"
        malpedia_rule_date = "20221007"
        malpedia_hash = "597f9539014e3d0f350c069cd804aa71679486ae"
        malpedia_version = "20221010"
        malpedia_license = "CC BY-SA 4.0"
        malpedia_sharing = "TLP:WHITE"

    /* DISCLAIMER
     * The strings used in this rule have been automatically selected from the
     * disassembly of memory dumps and unpacked files, using YARA-Signator.
     * The code and documentation is published here:
     * https://github.com/fxb-cocacoding/yara-signator
     * As Malpedia is used as data source, please note that for a given
     * number of families, only single samples are documented.
     * This likely impacts the degree of generalization these rules will offer.
     * Take the described generation method also into consideration when you
     * apply the rules in your use cases and assign them confidence levels.
     */


    strings:
        $sequence_0 = { 7608 83ee01 83df00 eb0e 0f57c0 660f1345dc }
            // n = 6, score = 100
            //   7608                 | jbe                 0xa
            //   83ee01               | sub                 esi, 1
            //   83df00               | sbb                 edi, 0
            //   eb0e                 | jmp                 0x10
            //   0f57c0               | xorps               xmm0, xmm0
            //   660f1345dc           | movlpd              qword ptr [ebp - 0x24], xmm0

        $sequence_1 = { 8bf8 83e73f 6bdf38 031c9540fd4400 b9???????? eb11 }
            // n = 6, score = 100
            //   8bf8                 | mov                 edi, eax
            //   83e73f               | and                 edi, 0x3f
            //   6bdf38               | imul                ebx, edi, 0x38
            //   031c9540fd4400       | add                 ebx, dword ptr [edx*4 + 0x44fd40]
            //   b9????????           |                     
            //   eb11                 | jmp                 0x13

        $sequence_2 = { 8985e4f7ffff 7839 8bf7 2bf0 660f1f440000 68???????? 50 }
            // n = 7, score = 100
            //   8985e4f7ffff         | mov                 dword ptr [ebp - 0x81c], eax
            //   7839                 | js                  0x3b
            //   8bf7                 | mov                 esi, edi
            //   2bf0                 | sub                 esi, eax
            //   660f1f440000         | nop                 word ptr [eax + eax]
            //   68????????           |                     
            //   50                   | push                eax

        $sequence_3 = { 660f138540f7ffff 6af6 660f138548f7ffff 660f138550f7ffff 660f138558f7ffff 660f138560f7ffff }
            // n = 6, score = 100
            //   660f138540f7ffff     | movlpd              qword ptr [ebp - 0x8c0], xmm0
            //   6af6                 | push                -0xa
            //   660f138548f7ffff     | movlpd              qword ptr [ebp - 0x8b8], xmm0
            //   660f138550f7ffff     | movlpd              qword ptr [ebp - 0x8b0], xmm0
            //   660f138558f7ffff     | movlpd              qword ptr [ebp - 0x8a8], xmm0
            //   660f138560f7ffff     | movlpd              qword ptr [ebp - 0x8a0], xmm0

        $sequence_4 = { ff15???????? 8b04bd40fd4400 834c0318ff 33c0 eb16 e8???????? }
            // n = 6, score = 100
            //   ff15????????         |                     
            //   8b04bd40fd4400       | mov                 eax, dword ptr [edi*4 + 0x44fd40]
            //   834c0318ff           | or                  dword ptr [ebx + eax + 0x18], 0xffffffff
            //   33c0                 | xor                 eax, eax
            //   eb16                 | jmp                 0x18
            //   e8????????           |                     

        $sequence_5 = { ffb5f4f7ffff ffb5f0f7ffff e8???????? 83c408 85c0 7409 }
            // n = 6, score = 100
            //   ffb5f4f7ffff         | push                dword ptr [ebp - 0x80c]
            //   ffb5f0f7ffff         | push                dword ptr [ebp - 0x810]
            //   e8????????           |                     
            //   83c408               | add                 esp, 8
            //   85c0                 | test                eax, eax
            //   7409                 | je                  0xb

        $sequence_6 = { eb1b 8b0c8d40fd4400 8a443928 a840 7508 0c02 88443928 }
            // n = 7, score = 100
            //   eb1b                 | jmp                 0x1d
            //   8b0c8d40fd4400       | mov                 ecx, dword ptr [ecx*4 + 0x44fd40]
            //   8a443928             | mov                 al, byte ptr [ecx + edi + 0x28]
            //   a840                 | test                al, 0x40
            //   7508                 | jne                 0xa
            //   0c02                 | or                  al, 2
            //   88443928             | mov                 byte ptr [ecx + edi + 0x28], al

        $sequence_7 = { 8901 8b85e0f7ffff 894104 33c0 }
            // n = 4, score = 100
            //   8901                 | mov                 dword ptr [ecx], eax
            //   8b85e0f7ffff         | mov                 eax, dword ptr [ebp - 0x820]
            //   894104               | mov                 dword ptr [ecx + 4], eax
            //   33c0                 | xor                 eax, eax

        $sequence_8 = { 8b8504f8ffff 46 8b8d00f8ffff 2bc1 3bf0 }
            // n = 5, score = 100
            //   8b8504f8ffff         | mov                 eax, dword ptr [ebp - 0x7fc]
            //   46                   | inc                 esi
            //   8b8d00f8ffff         | mov                 ecx, dword ptr [ebp - 0x800]
            //   2bc1                 | sub                 eax, ecx
            //   3bf0                 | cmp                 esi, eax

        $sequence_9 = { c785dcf7ffff00000000 8985e0f7ffff eb19 8d85dcf7ffff 50 }
            // n = 5, score = 100
            //   c785dcf7ffff00000000     | mov    dword ptr [ebp - 0x824], 0
            //   8985e0f7ffff         | mov                 dword ptr [ebp - 0x820], eax
            //   eb19                 | jmp                 0x1b
            //   8d85dcf7ffff         | lea                 eax, [ebp - 0x824]
            //   50                   | push                eax

    condition:
        7 of them and filesize < 42670080
}