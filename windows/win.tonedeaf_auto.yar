rule win_tonedeaf_auto {

    meta:
        author = "Felix Bilstein - yara-signator at cocacoding dot com"
        date = "2022-10-07"
        version = "1"
        description = "Detects win.tonedeaf."
        info = "autogenerated rule brought to you by yara-signator"
        tool = "yara-signator v0.6.0"
        signator_config = "callsandjumps;datarefs;binvalue"
        malpedia_reference = "https://malpedia.caad.fkie.fraunhofer.de/details/win.tonedeaf"
        malpedia_rule_date = "20221007"
        malpedia_hash = "597f9539014e3d0f350c069cd804aa71679486ae"
        malpedia_version = "20221010"
        malpedia_license = "CC BY-SA 4.0"
        malpedia_sharing = "TLP:WHITE"

    /* DISCLAIMER
     * The strings used in this rule have been automatically selected from the
     * disassembly of memory dumps and unpacked files, using YARA-Signator.
     * The code and documentation is published here:
     * https://github.com/fxb-cocacoding/yara-signator
     * As Malpedia is used as data source, please note that for a given
     * number of families, only single samples are documented.
     * This likely impacts the degree of generalization these rules will offer.
     * Take the described generation method also into consideration when you
     * apply the rules in your use cases and assign them confidence levels.
     */


    strings:
        $sequence_0 = { 8bc3 46 d1e8 33d2 8bc8 03c3 f7d1 }
            // n = 7, score = 400
            //   8bc3                 | mov                 eax, ebx
            //   46                   | inc                 esi
            //   d1e8                 | shr                 eax, 1
            //   33d2                 | xor                 edx, edx
            //   8bc8                 | mov                 ecx, eax
            //   03c3                 | add                 eax, ebx
            //   f7d1                 | not                 ecx

        $sequence_1 = { 50 6a01 6a6b 57 ff15???????? 6880000000 }
            // n = 6, score = 400
            //   50                   | push                eax
            //   6a01                 | push                1
            //   6a6b                 | push                0x6b
            //   57                   | push                edi
            //   ff15????????         |                     
            //   6880000000           | push                0x80

        $sequence_2 = { 8a0e 8d7601 884c32ff 84c9 75f3 8bf3 }
            // n = 6, score = 400
            //   8a0e                 | mov                 cl, byte ptr [esi]
            //   8d7601               | lea                 esi, [esi + 1]
            //   884c32ff             | mov                 byte ptr [edx + esi - 1], cl
            //   84c9                 | test                cl, cl
            //   75f3                 | jne                 0xfffffff5
            //   8bf3                 | mov                 esi, ebx

        $sequence_3 = { 33c0 660fd645d4 33db 8945d8 }
            // n = 4, score = 400
            //   33c0                 | xor                 eax, eax
            //   660fd645d4           | movq                qword ptr [ebp - 0x2c], xmm0
            //   33db                 | xor                 ebx, ebx
            //   8945d8               | mov                 dword ptr [ebp - 0x28], eax

        $sequence_4 = { 84c9 75f3 8bf3 8a03 43 84c0 }
            // n = 6, score = 400
            //   84c9                 | test                cl, cl
            //   75f3                 | jne                 0xfffffff5
            //   8bf3                 | mov                 esi, ebx
            //   8a03                 | mov                 al, byte ptr [ebx]
            //   43                   | inc                 ebx
            //   84c0                 | test                al, al

        $sequence_5 = { 50 6a01 6a6b 57 }
            // n = 4, score = 400
            //   50                   | push                eax
            //   6a01                 | push                1
            //   6a6b                 | push                0x6b
            //   57                   | push                edi

        $sequence_6 = { 8bc3 46 d1e8 33d2 8bc8 }
            // n = 5, score = 400
            //   8bc3                 | mov                 eax, ebx
            //   46                   | inc                 esi
            //   d1e8                 | shr                 eax, 1
            //   33d2                 | xor                 edx, edx
            //   8bc8                 | mov                 ecx, eax

        $sequence_7 = { 2bf1 8bc3 46 d1e8 }
            // n = 4, score = 400
            //   2bf1                 | sub                 esi, ecx
            //   8bc3                 | mov                 eax, ebx
            //   46                   | inc                 esi
            //   d1e8                 | shr                 eax, 1

        $sequence_8 = { 6a01 6a6b 57 ff15???????? 6880000000 }
            // n = 5, score = 400
            //   6a01                 | push                1
            //   6a6b                 | push                0x6b
            //   57                   | push                edi
            //   ff15????????         |                     
            //   6880000000           | push                0x80

        $sequence_9 = { c745dc00000000 33c0 660fd645d4 33db 8945d8 895dd4 }
            // n = 6, score = 400
            //   c745dc00000000       | mov                 dword ptr [ebp - 0x24], 0
            //   33c0                 | xor                 eax, eax
            //   660fd645d4           | movq                qword ptr [ebp - 0x2c], xmm0
            //   33db                 | xor                 ebx, ebx
            //   8945d8               | mov                 dword ptr [ebp - 0x28], eax
            //   895dd4               | mov                 dword ptr [ebp - 0x2c], ebx

    condition:
        7 of them and filesize < 851968
}