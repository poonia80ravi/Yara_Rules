rule win_snojan_auto {

    meta:
        author = "Felix Bilstein - yara-signator at cocacoding dot com"
        date = "2022-10-07"
        version = "1"
        description = "Detects win.snojan."
        info = "autogenerated rule brought to you by yara-signator"
        tool = "yara-signator v0.6.0"
        signator_config = "callsandjumps;datarefs;binvalue"
        malpedia_reference = "https://malpedia.caad.fkie.fraunhofer.de/details/win.snojan"
        malpedia_rule_date = "20221007"
        malpedia_hash = "597f9539014e3d0f350c069cd804aa71679486ae"
        malpedia_version = "20221010"
        malpedia_license = "CC BY-SA 4.0"
        malpedia_sharing = "TLP:WHITE"

    /* DISCLAIMER
     * The strings used in this rule have been automatically selected from the
     * disassembly of memory dumps and unpacked files, using YARA-Signator.
     * The code and documentation is published here:
     * https://github.com/fxb-cocacoding/yara-signator
     * As Malpedia is used as data source, please note that for a given
     * number of families, only single samples are documented.
     * This likely impacts the degree of generalization these rules will offer.
     * Take the described generation method also into consideration when you
     * apply the rules in your use cases and assign them confidence levels.
     */


    strings:
        $sequence_0 = { 83ec04 c70424???????? 89442424 e8???????? 0fb7c0 }
            // n = 5, score = 200
            //   83ec04               | sub                 esp, 4
            //   c70424????????       |                     
            //   89442424             | mov                 dword ptr [esp + 0x24], eax
            //   e8????????           |                     
            //   0fb7c0               | movzx               eax, ax

        $sequence_1 = { 8b1d???????? 83fbff 7421 85db 740c ff149d9026986d 83eb01 }
            // n = 7, score = 200
            //   8b1d????????         |                     
            //   83fbff               | cmp                 ebx, -1
            //   7421                 | je                  0x23
            //   85db                 | test                ebx, ebx
            //   740c                 | je                  0xe
            //   ff149d9026986d       | call                dword ptr [ebx*4 + 0x6d982690]
            //   83eb01               | sub                 ebx, 1

        $sequence_2 = { 8b13 83c308 03960000986d 8d860000986d 8955cc }
            // n = 5, score = 200
            //   8b13                 | mov                 edx, dword ptr [ebx]
            //   83c308               | add                 ebx, 8
            //   03960000986d         | add                 edx, dword ptr [esi + 0x6d980000]
            //   8d860000986d         | lea                 eax, [esi + 0x6d980000]
            //   8955cc               | mov                 dword ptr [ebp - 0x34], edx

        $sequence_3 = { 893424 e8???????? 807c241f00 0f85b7000000 893c24 ff15???????? 83ec04 }
            // n = 7, score = 200
            //   893424               | mov                 dword ptr [esp], esi
            //   e8????????           |                     
            //   807c241f00           | cmp                 byte ptr [esp + 0x1f], 0
            //   0f85b7000000         | jne                 0xbd
            //   893c24               | mov                 dword ptr [esp], edi
            //   ff15????????         |                     
            //   83ec04               | sub                 esp, 4

        $sequence_4 = { 0f84bd000000 8d5c2430 c644241f00 c744240c00000000 c744240800900100 895c2404 }
            // n = 6, score = 200
            //   0f84bd000000         | je                  0xc3
            //   8d5c2430             | lea                 ebx, [esp + 0x30]
            //   c644241f00           | mov                 byte ptr [esp + 0x1f], 0
            //   c744240c00000000     | mov                 dword ptr [esp + 0xc], 0
            //   c744240800900100     | mov                 dword ptr [esp + 8], 0x19000
            //   895c2404             | mov                 dword ptr [esp + 4], ebx

        $sequence_5 = { 83ec10 83f800 89c5 7e64 }
            // n = 4, score = 200
            //   83ec10               | sub                 esp, 0x10
            //   83f800               | cmp                 eax, 0
            //   89c5                 | mov                 ebp, eax
            //   7e64                 | jle                 0x66

        $sequence_6 = { 753d c744241400000000 c744241000000000 c744240c00000000 c7442408???????? }
            // n = 5, score = 200
            //   753d                 | jne                 0x3f
            //   c744241400000000     | mov                 dword ptr [esp + 0x14], 0
            //   c744241000000000     | mov                 dword ptr [esp + 0x10], 0
            //   c744240c00000000     | mov                 dword ptr [esp + 0xc], 0
            //   c7442408????????     |                     

        $sequence_7 = { c744240800900100 895c2404 893c24 ff15???????? 83ec10 }
            // n = 5, score = 200
            //   c744240800900100     | mov                 dword ptr [esp + 8], 0x19000
            //   895c2404             | mov                 dword ptr [esp + 4], ebx
            //   893c24               | mov                 dword ptr [esp], edi
            //   ff15????????         |                     
            //   83ec10               | sub                 esp, 0x10

        $sequence_8 = { 893424 e8???????? 807c241f00 0f85b7000000 893c24 ff15???????? }
            // n = 6, score = 200
            //   893424               | mov                 dword ptr [esp], esi
            //   e8????????           |                     
            //   807c241f00           | cmp                 byte ptr [esp + 0x1f], 0
            //   0f85b7000000         | jne                 0xbd
            //   893c24               | mov                 dword ptr [esp], edi
            //   ff15????????         |                     

        $sequence_9 = { e8???????? 0fb654241f 85c0 b801000000 0f44d0 8854241f }
            // n = 6, score = 200
            //   e8????????           |                     
            //   0fb654241f           | movzx               edx, byte ptr [esp + 0x1f]
            //   85c0                 | test                eax, eax
            //   b801000000           | mov                 eax, 1
            //   0f44d0               | cmove               edx, eax
            //   8854241f             | mov                 byte ptr [esp + 0x1f], dl

    condition:
        7 of them and filesize < 90112
}