rule win_ddkong_auto {

    meta:
        author = "Felix Bilstein - yara-signator at cocacoding dot com"
        date = "2022-10-07"
        version = "1"
        description = "Detects win.ddkong."
        info = "autogenerated rule brought to you by yara-signator"
        tool = "yara-signator v0.6.0"
        signator_config = "callsandjumps;datarefs;binvalue"
        malpedia_reference = "https://malpedia.caad.fkie.fraunhofer.de/details/win.ddkong"
        malpedia_rule_date = "20221007"
        malpedia_hash = "597f9539014e3d0f350c069cd804aa71679486ae"
        malpedia_version = "20221010"
        malpedia_license = "CC BY-SA 4.0"
        malpedia_sharing = "TLP:WHITE"

    /* DISCLAIMER
     * The strings used in this rule have been automatically selected from the
     * disassembly of memory dumps and unpacked files, using YARA-Signator.
     * The code and documentation is published here:
     * https://github.com/fxb-cocacoding/yara-signator
     * As Malpedia is used as data source, please note that for a given
     * number of families, only single samples are documented.
     * This likely impacts the degree of generalization these rules will offer.
     * Take the described generation method also into consideration when you
     * apply the rules in your use cases and assign them confidence levels.
     */


    strings:
        $sequence_0 = { ffd7 50 ffd6 c6852cffffff57 c6852dffffff6f c6852effffff77 c6852fffffff36 }
            // n = 7, score = 100
            //   ffd7                 | call                edi
            //   50                   | push                eax
            //   ffd6                 | call                esi
            //   c6852cffffff57       | mov                 byte ptr [ebp - 0xd4], 0x57
            //   c6852dffffff6f       | mov                 byte ptr [ebp - 0xd3], 0x6f
            //   c6852effffff77       | mov                 byte ptr [ebp - 0xd2], 0x77
            //   c6852fffffff36       | mov                 byte ptr [ebp - 0xd1], 0x36

        $sequence_1 = { c644241561 c64424166c c644241746 c644241b00 ff15???????? 50 ff15???????? }
            // n = 7, score = 100
            //   c644241561           | mov                 byte ptr [esp + 0x15], 0x61
            //   c64424166c           | mov                 byte ptr [esp + 0x16], 0x6c
            //   c644241746           | mov                 byte ptr [esp + 0x17], 0x46
            //   c644241b00           | mov                 byte ptr [esp + 0x1b], 0
            //   ff15????????         |                     
            //   50                   | push                eax
            //   ff15????????         |                     

        $sequence_2 = { 8d854cffffff 56 50 ff9574ffffff }
            // n = 4, score = 100
            //   8d854cffffff         | lea                 eax, [ebp - 0xb4]
            //   56                   | push                esi
            //   50                   | push                eax
            //   ff9574ffffff         | call                dword ptr [ebp - 0x8c]

        $sequence_3 = { ffd7 8065f600 8945f8 8d45e8 c645e849 50 }
            // n = 6, score = 100
            //   ffd7                 | call                edi
            //   8065f600             | and                 byte ptr [ebp - 0xa], 0
            //   8945f8               | mov                 dword ptr [ebp - 8], eax
            //   8d45e8               | lea                 eax, [ebp - 0x18]
            //   c645e849             | mov                 byte ptr [ebp - 0x18], 0x49
            //   50                   | push                eax

        $sequence_4 = { be???????? 50 56 c745f832000000 ffd3 }
            // n = 5, score = 100
            //   be????????           |                     
            //   50                   | push                eax
            //   56                   | push                esi
            //   c745f832000000       | mov                 dword ptr [ebp - 8], 0x32
            //   ffd3                 | call                ebx

        $sequence_5 = { ff55b0 39b518ffffff 7409 ffb518ffffff }
            // n = 4, score = 100
            //   ff55b0               | call                dword ptr [ebp - 0x50]
            //   39b518ffffff         | cmp                 dword ptr [ebp - 0xe8], esi
            //   7409                 | je                  0xb
            //   ffb518ffffff         | push                dword ptr [ebp - 0xe8]

        $sequence_6 = { c645a265 c645a353 c645a465 c645a573 c645a673 }
            // n = 5, score = 100
            //   c645a265             | mov                 byte ptr [ebp - 0x5e], 0x65
            //   c645a353             | mov                 byte ptr [ebp - 0x5d], 0x53
            //   c645a465             | mov                 byte ptr [ebp - 0x5c], 0x65
            //   c645a573             | mov                 byte ptr [ebp - 0x5b], 0x73
            //   c645a673             | mov                 byte ptr [ebp - 0x5a], 0x73

        $sequence_7 = { 68???????? c645d346 c645d469 c645d56c c645d665 c645d741 }
            // n = 6, score = 100
            //   68????????           |                     
            //   c645d346             | mov                 byte ptr [ebp - 0x2d], 0x46
            //   c645d469             | mov                 byte ptr [ebp - 0x2c], 0x69
            //   c645d56c             | mov                 byte ptr [ebp - 0x2b], 0x6c
            //   c645d665             | mov                 byte ptr [ebp - 0x2a], 0x65
            //   c645d741             | mov                 byte ptr [ebp - 0x29], 0x41

        $sequence_8 = { 53 ffd6 50 ffd7 80659a00 }
            // n = 5, score = 100
            //   53                   | push                ebx
            //   ffd6                 | call                esi
            //   50                   | push                eax
            //   ffd7                 | call                edi
            //   80659a00             | and                 byte ptr [ebp - 0x66], 0

        $sequence_9 = { 7453 55 8b4104 33d2 }
            // n = 4, score = 100
            //   7453                 | je                  0x55
            //   55                   | push                ebp
            //   8b4104               | mov                 eax, dword ptr [ecx + 4]
            //   33d2                 | xor                 edx, edx

    condition:
        7 of them and filesize < 81920
}