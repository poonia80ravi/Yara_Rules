rule win_buhtrap_auto {

    meta:
        author = "Felix Bilstein - yara-signator at cocacoding dot com"
        date = "2022-10-07"
        version = "1"
        description = "Detects win.buhtrap."
        info = "autogenerated rule brought to you by yara-signator"
        tool = "yara-signator v0.6.0"
        signator_config = "callsandjumps;datarefs;binvalue"
        malpedia_reference = "https://malpedia.caad.fkie.fraunhofer.de/details/win.buhtrap"
        malpedia_rule_date = "20221007"
        malpedia_hash = "597f9539014e3d0f350c069cd804aa71679486ae"
        malpedia_version = "20221010"
        malpedia_license = "CC BY-SA 4.0"
        malpedia_sharing = "TLP:WHITE"

    /* DISCLAIMER
     * The strings used in this rule have been automatically selected from the
     * disassembly of memory dumps and unpacked files, using YARA-Signator.
     * The code and documentation is published here:
     * https://github.com/fxb-cocacoding/yara-signator
     * As Malpedia is used as data source, please note that for a given
     * number of families, only single samples are documented.
     * This likely impacts the degree of generalization these rules will offer.
     * Take the described generation method also into consideration when you
     * apply the rules in your use cases and assign them confidence levels.
     */


    strings:
        $sequence_0 = { e8???????? 59 59 84c0 0f8435010000 }
            // n = 5, score = 500
            //   e8????????           |                     
            //   59                   | pop                 ecx
            //   59                   | pop                 ecx
            //   84c0                 | test                al, al
            //   0f8435010000         | je                  0x13b

        $sequence_1 = { 33db 8bf2 53 6880000000 6a02 }
            // n = 5, score = 400
            //   33db                 | xor                 ebx, ebx
            //   8bf2                 | mov                 esi, edx
            //   53                   | push                ebx
            //   6880000000           | push                0x80
            //   6a02                 | push                2

        $sequence_2 = { 895c242c 8b08 53 53 }
            // n = 4, score = 400
            //   895c242c             | mov                 dword ptr [esp + 0x2c], ebx
            //   8b08                 | mov                 ecx, dword ptr [eax]
            //   53                   | push                ebx
            //   53                   | push                ebx

        $sequence_3 = { e8???????? 83ec0c a2???????? 8bf3 }
            // n = 4, score = 400
            //   e8????????           |                     
            //   83ec0c               | sub                 esp, 0xc
            //   a2????????           |                     
            //   8bf3                 | mov                 esi, ebx

        $sequence_4 = { 8975f0 ff15???????? 56 8bf8 }
            // n = 4, score = 400
            //   8975f0               | mov                 dword ptr [ebp - 0x10], esi
            //   ff15????????         |                     
            //   56                   | push                esi
            //   8bf8                 | mov                 edi, eax

        $sequence_5 = { ffd7 807dff00 59 742b }
            // n = 4, score = 400
            //   ffd7                 | call                edi
            //   807dff00             | cmp                 byte ptr [ebp - 1], 0
            //   59                   | pop                 ecx
            //   742b                 | je                  0x2d

        $sequence_6 = { 58 ff742424 8d4c2428 6689442434 e8???????? }
            // n = 5, score = 400
            //   58                   | pop                 eax
            //   ff742424             | push                dword ptr [esp + 0x24]
            //   8d4c2428             | lea                 ecx, [esp + 0x28]
            //   6689442434           | mov                 word ptr [esp + 0x34], ax
            //   e8????????           |                     

        $sequence_7 = { ffd6 6a13 5a b9???????? a3???????? }
            // n = 5, score = 400
            //   ffd6                 | call                esi
            //   6a13                 | push                0x13
            //   5a                   | pop                 edx
            //   b9????????           |                     
            //   a3????????           |                     

        $sequence_8 = { 85f6 750b ff75f4 e8???????? 59 }
            // n = 5, score = 100
            //   85f6                 | test                esi, esi
            //   750b                 | jne                 0xd
            //   ff75f4               | push                dword ptr [ebp - 0xc]
            //   e8????????           |                     
            //   59                   | pop                 ecx

        $sequence_9 = { ff7508 8b75fc 57 8bc3 e8???????? }
            // n = 5, score = 100
            //   ff7508               | push                dword ptr [ebp + 8]
            //   8b75fc               | mov                 esi, dword ptr [ebp - 4]
            //   57                   | push                edi
            //   8bc3                 | mov                 eax, ebx
            //   e8????????           |                     

        $sequence_10 = { 3bc6 75f7 85d2 7408 8b4664 894264 }
            // n = 6, score = 100
            //   3bc6                 | cmp                 eax, esi
            //   75f7                 | jne                 0xfffffff9
            //   85d2                 | test                edx, edx
            //   7408                 | je                  0xa
            //   8b4664               | mov                 eax, dword ptr [esi + 0x64]
            //   894264               | mov                 dword ptr [edx + 0x64], eax

        $sequence_11 = { e8???????? 8b4514 8938 eb1e 8b75ec 8b7e18 }
            // n = 6, score = 100
            //   e8????????           |                     
            //   8b4514               | mov                 eax, dword ptr [ebp + 0x14]
            //   8938                 | mov                 dword ptr [eax], edi
            //   eb1e                 | jmp                 0x20
            //   8b75ec               | mov                 esi, dword ptr [ebp - 0x14]
            //   8b7e18               | mov                 edi, dword ptr [esi + 0x18]

        $sequence_12 = { 83c410 807c240800 740d 837f1000 7507 57 }
            // n = 6, score = 100
            //   83c410               | add                 esp, 0x10
            //   807c240800           | cmp                 byte ptr [esp + 8], 0
            //   740d                 | je                  0xf
            //   837f1000             | cmp                 dword ptr [edi + 0x10], 0
            //   7507                 | jne                 9
            //   57                   | push                edi

        $sequence_13 = { 83f87a 754a 56 ff75fc e8???????? }
            // n = 5, score = 100
            //   83f87a               | cmp                 eax, 0x7a
            //   754a                 | jne                 0x4c
            //   56                   | push                esi
            //   ff75fc               | push                dword ptr [ebp - 4]
            //   e8????????           |                     

        $sequence_14 = { 8bfb e8???????? 85c0 740c 53 8d7dcc }
            // n = 6, score = 100
            //   8bfb                 | mov                 edi, ebx
            //   e8????????           |                     
            //   85c0                 | test                eax, eax
            //   740c                 | je                  0xe
            //   53                   | push                ebx
            //   8d7dcc               | lea                 edi, [ebp - 0x34]

    condition:
        7 of them and filesize < 131072
}