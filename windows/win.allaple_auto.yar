rule win_allaple_auto {

    meta:
        author = "Felix Bilstein - yara-signator at cocacoding dot com"
        date = "2022-10-07"
        version = "1"
        description = "Detects win.allaple."
        info = "autogenerated rule brought to you by yara-signator"
        tool = "yara-signator v0.6.0"
        signator_config = "callsandjumps;datarefs;binvalue"
        malpedia_reference = "https://malpedia.caad.fkie.fraunhofer.de/details/win.allaple"
        malpedia_rule_date = "20221007"
        malpedia_hash = "597f9539014e3d0f350c069cd804aa71679486ae"
        malpedia_version = "20221010"
        malpedia_license = "CC BY-SA 4.0"
        malpedia_sharing = "TLP:WHITE"

    /* DISCLAIMER
     * The strings used in this rule have been automatically selected from the
     * disassembly of memory dumps and unpacked files, using YARA-Signator.
     * The code and documentation is published here:
     * https://github.com/fxb-cocacoding/yara-signator
     * As Malpedia is used as data source, please note that for a given
     * number of families, only single samples are documented.
     * This likely impacts the degree of generalization these rules will offer.
     * Take the described generation method also into consideration when you
     * apply the rules in your use cases and assign them confidence levels.
     */


    strings:
        $sequence_0 = { 52 e8???????? 8bf0 8935???????? 8b1d???????? eb2f 6a00 }
            // n = 7, score = 300
            //   52                   | push                edx
            //   e8????????           |                     
            //   8bf0                 | mov                 esi, eax
            //   8935????????         |                     
            //   8b1d????????         |                     
            //   eb2f                 | jmp                 0x31
            //   6a00                 | push                0

        $sequence_1 = { 803c385c 75f9 40 8d3c38 8d853cfbffff 50 }
            // n = 6, score = 300
            //   803c385c             | cmp                 byte ptr [eax + edi], 0x5c
            //   75f9                 | jne                 0xfffffffb
            //   40                   | inc                 eax
            //   8d3c38               | lea                 edi, [eax + edi]
            //   8d853cfbffff         | lea                 eax, [ebp - 0x4c4]
            //   50                   | push                eax

        $sequence_2 = { 6a04 e8???????? 0bc0 745a 898544fbffff 6a00 6a00 }
            // n = 7, score = 300
            //   6a04                 | push                4
            //   e8????????           |                     
            //   0bc0                 | or                  eax, eax
            //   745a                 | je                  0x5c
            //   898544fbffff         | mov                 dword ptr [ebp - 0x4bc], eax
            //   6a00                 | push                0
            //   6a00                 | push                0

        $sequence_3 = { 034e10 3bcf 7608 2b7e14 037e0c eb08 83c628 }
            // n = 7, score = 300
            //   034e10               | add                 ecx, dword ptr [esi + 0x10]
            //   3bcf                 | cmp                 ecx, edi
            //   7608                 | jbe                 0xa
            //   2b7e14               | sub                 edi, dword ptr [esi + 0x14]
            //   037e0c               | add                 edi, dword ptr [esi + 0xc]
            //   eb08                 | jmp                 0xa
            //   83c628               | add                 esi, 0x28

        $sequence_4 = { 817f04ff534d42 7554 8b1f 53 e8???????? 8bd8 }
            // n = 6, score = 300
            //   817f04ff534d42       | cmp                 dword ptr [edi + 4], 0x424d53ff
            //   7554                 | jne                 0x56
            //   8b1f                 | mov                 ebx, dword ptr [edi]
            //   53                   | push                ebx
            //   e8????????           |                     
            //   8bd8                 | mov                 ebx, eax

        $sequence_5 = { 8811 8be5 5d c3 55 8bec 83ec14 }
            // n = 7, score = 300
            //   8811                 | mov                 byte ptr [ecx], dl
            //   8be5                 | mov                 esp, ebp
            //   5d                   | pop                 ebp
            //   c3                   | ret                 
            //   55                   | push                ebp
            //   8bec                 | mov                 ebp, esp
            //   83ec14               | sub                 esp, 0x14

        $sequence_6 = { ba???????? 8d8dd4feffff e8???????? 8b45f0 25ff000000 8985a4fdffff c785c8fdffff00000000 }
            // n = 7, score = 300
            //   ba????????           |                     
            //   8d8dd4feffff         | lea                 ecx, [ebp - 0x12c]
            //   e8????????           |                     
            //   8b45f0               | mov                 eax, dword ptr [ebp - 0x10]
            //   25ff000000           | and                 eax, 0xff
            //   8985a4fdffff         | mov                 dword ptr [ebp - 0x25c], eax
            //   c785c8fdffff00000000     | mov    dword ptr [ebp - 0x238], 0

        $sequence_7 = { ff7508 ffd1 ff0d???????? 8b4f14 0bc9 7408 8bd1 }
            // n = 7, score = 300
            //   ff7508               | push                dword ptr [ebp + 8]
            //   ffd1                 | call                ecx
            //   ff0d????????         |                     
            //   8b4f14               | mov                 ecx, dword ptr [edi + 0x14]
            //   0bc9                 | or                  ecx, ecx
            //   7408                 | je                  0xa
            //   8bd1                 | mov                 edx, ecx

        $sequence_8 = { 8955f0 8b0d???????? 894dec 6a03 ff35???????? ff35???????? }
            // n = 6, score = 300
            //   8955f0               | mov                 dword ptr [ebp - 0x10], edx
            //   8b0d????????         |                     
            //   894dec               | mov                 dword ptr [ebp - 0x14], ecx
            //   6a03                 | push                3
            //   ff35????????         |                     
            //   ff35????????         |                     

        $sequence_9 = { eb38 c745f806000000 c745fc00000000 c745f001000000 8b45ec 8945f4 }
            // n = 6, score = 300
            //   eb38                 | jmp                 0x3a
            //   c745f806000000       | mov                 dword ptr [ebp - 8], 6
            //   c745fc00000000       | mov                 dword ptr [ebp - 4], 0
            //   c745f001000000       | mov                 dword ptr [ebp - 0x10], 1
            //   8b45ec               | mov                 eax, dword ptr [ebp - 0x14]
            //   8945f4               | mov                 dword ptr [ebp - 0xc], eax

    condition:
        7 of them and filesize < 253952
}