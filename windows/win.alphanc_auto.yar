rule win_alphanc_auto {

    meta:
        author = "Felix Bilstein - yara-signator at cocacoding dot com"
        date = "2022-10-07"
        version = "1"
        description = "Detects win.alphanc."
        info = "autogenerated rule brought to you by yara-signator"
        tool = "yara-signator v0.6.0"
        signator_config = "callsandjumps;datarefs;binvalue"
        malpedia_reference = "https://malpedia.caad.fkie.fraunhofer.de/details/win.alphanc"
        malpedia_rule_date = "20221007"
        malpedia_hash = "597f9539014e3d0f350c069cd804aa71679486ae"
        malpedia_version = "20221010"
        malpedia_license = "CC BY-SA 4.0"
        malpedia_sharing = "TLP:WHITE"

    /* DISCLAIMER
     * The strings used in this rule have been automatically selected from the
     * disassembly of memory dumps and unpacked files, using YARA-Signator.
     * The code and documentation is published here:
     * https://github.com/fxb-cocacoding/yara-signator
     * As Malpedia is used as data source, please note that for a given
     * number of families, only single samples are documented.
     * This likely impacts the degree of generalization these rules will offer.
     * Take the described generation method also into consideration when you
     * apply the rules in your use cases and assign them confidence levels.
     */


    strings:
        $sequence_0 = { e8???????? 8b4c247c 56 8d542420 51 52 e8???????? }
            // n = 7, score = 100
            //   e8????????           |                     
            //   8b4c247c             | mov                 ecx, dword ptr [esp + 0x7c]
            //   56                   | push                esi
            //   8d542420             | lea                 edx, [esp + 0x20]
            //   51                   | push                ecx
            //   52                   | push                edx
            //   e8????????           |                     

        $sequence_1 = { 8d044544ce4e00 eb59 8d044542ce4e00 eb50 f6c303 740d 0fb74208 }
            // n = 7, score = 100
            //   8d044544ce4e00       | lea                 eax, [eax*2 + 0x4ece44]
            //   eb59                 | jmp                 0x5b
            //   8d044542ce4e00       | lea                 eax, [eax*2 + 0x4ece42]
            //   eb50                 | jmp                 0x52
            //   f6c303               | test                bl, 3
            //   740d                 | je                  0xf
            //   0fb74208             | movzx               eax, word ptr [edx + 8]

        $sequence_2 = { c3 834d1408 8bcb 8bf8 8bd1 c1e902 f3a5 }
            // n = 7, score = 100
            //   c3                   | ret                 
            //   834d1408             | or                  dword ptr [ebp + 0x14], 8
            //   8bcb                 | mov                 ecx, ebx
            //   8bf8                 | mov                 edi, eax
            //   8bd1                 | mov                 edx, ecx
            //   c1e902               | shr                 ecx, 2
            //   f3a5                 | rep movsd           dword ptr es:[edi], dword ptr [esi]

        $sequence_3 = { e9???????? 85ff 7502 45 48 8b942488000000 8d4c1302 }
            // n = 7, score = 100
            //   e9????????           |                     
            //   85ff                 | test                edi, edi
            //   7502                 | jne                 4
            //   45                   | inc                 ebp
            //   48                   | dec                 eax
            //   8b942488000000       | mov                 edx, dword ptr [esp + 0x88]
            //   8d4c1302             | lea                 ecx, [ebx + edx + 2]

        $sequence_4 = { e8???????? 68af010000 e9???????? 8b85c0000000 8b4804 8b4554 894c2454 }
            // n = 7, score = 100
            //   e8????????           |                     
            //   68af010000           | push                0x1af
            //   e9????????           |                     
            //   8b85c0000000         | mov                 eax, dword ptr [ebp + 0xc0]
            //   8b4804               | mov                 ecx, dword ptr [eax + 4]
            //   8b4554               | mov                 eax, dword ptr [ebp + 0x54]
            //   894c2454             | mov                 dword ptr [esp + 0x54], ecx

        $sequence_5 = { e8???????? 83c404 8b4c241c 56 51 e8???????? 83c408 }
            // n = 7, score = 100
            //   e8????????           |                     
            //   83c404               | add                 esp, 4
            //   8b4c241c             | mov                 ecx, dword ptr [esp + 0x1c]
            //   56                   | push                esi
            //   51                   | push                ecx
            //   e8????????           |                     
            //   83c408               | add                 esp, 8

        $sequence_6 = { 8d4c241c 50 51 e8???????? 83c40c 85c0 0f84a5000000 }
            // n = 7, score = 100
            //   8d4c241c             | lea                 ecx, [esp + 0x1c]
            //   50                   | push                eax
            //   51                   | push                ecx
            //   e8????????           |                     
            //   83c40c               | add                 esp, 0xc
            //   85c0                 | test                eax, eax
            //   0f84a5000000         | je                  0xab

        $sequence_7 = { 52 6a04 8b4864 57 ff511c 8b4314 8d4c2420 }
            // n = 7, score = 100
            //   52                   | push                edx
            //   6a04                 | push                4
            //   8b4864               | mov                 ecx, dword ptr [eax + 0x64]
            //   57                   | push                edi
            //   ff511c               | call                dword ptr [ecx + 0x1c]
            //   8b4314               | mov                 eax, dword ptr [ebx + 0x14]
            //   8d4c2420             | lea                 ecx, [esp + 0x20]

        $sequence_8 = { c6842491020000af c6842492020000a4 c6842493020000bc c68424940200009d 888c2495020000 c6842496020000b8 888c2497020000 }
            // n = 7, score = 100
            //   c6842491020000af     | mov                 byte ptr [esp + 0x291], 0xaf
            //   c6842492020000a4     | mov                 byte ptr [esp + 0x292], 0xa4
            //   c6842493020000bc     | mov                 byte ptr [esp + 0x293], 0xbc
            //   c68424940200009d     | mov                 byte ptr [esp + 0x294], 0x9d
            //   888c2495020000       | mov                 byte ptr [esp + 0x295], cl
            //   c6842496020000b8     | mov                 byte ptr [esp + 0x296], 0xb8
            //   888c2497020000       | mov                 byte ptr [esp + 0x297], cl

        $sequence_9 = { 8a19 33c3 41 a3???????? 3811 75e5 810d????????00300400 }
            // n = 7, score = 100
            //   8a19                 | mov                 bl, byte ptr [ecx]
            //   33c3                 | xor                 eax, ebx
            //   41                   | inc                 ecx
            //   a3????????           |                     
            //   3811                 | cmp                 byte ptr [ecx], dl
            //   75e5                 | jne                 0xffffffe7
            //   810d????????00300400     |     

    condition:
        7 of them and filesize < 2015232
}