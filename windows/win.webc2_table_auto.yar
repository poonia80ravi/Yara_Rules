rule win_webc2_table_auto {

    meta:
        author = "Felix Bilstein - yara-signator at cocacoding dot com"
        date = "2022-10-07"
        version = "1"
        description = "Detects win.webc2_table."
        info = "autogenerated rule brought to you by yara-signator"
        tool = "yara-signator v0.6.0"
        signator_config = "callsandjumps;datarefs;binvalue"
        malpedia_reference = "https://malpedia.caad.fkie.fraunhofer.de/details/win.webc2_table"
        malpedia_rule_date = "20221007"
        malpedia_hash = "597f9539014e3d0f350c069cd804aa71679486ae"
        malpedia_version = "20221010"
        malpedia_license = "CC BY-SA 4.0"
        malpedia_sharing = "TLP:WHITE"

    /* DISCLAIMER
     * The strings used in this rule have been automatically selected from the
     * disassembly of memory dumps and unpacked files, using YARA-Signator.
     * The code and documentation is published here:
     * https://github.com/fxb-cocacoding/yara-signator
     * As Malpedia is used as data source, please note that for a given
     * number of families, only single samples are documented.
     * This likely impacts the degree of generalization these rules will offer.
     * Take the described generation method also into consideration when you
     * apply the rules in your use cases and assign them confidence levels.
     */


    strings:
        $sequence_0 = { e8???????? 6a0f 8d85d8f6ffff 68???????? 50 e8???????? 83c424 }
            // n = 7, score = 100
            //   e8????????           |                     
            //   6a0f                 | push                0xf
            //   8d85d8f6ffff         | lea                 eax, [ebp - 0x928]
            //   68????????           |                     
            //   50                   | push                eax
            //   e8????????           |                     
            //   83c424               | add                 esp, 0x24

        $sequence_1 = { 66ab aa 6a18 33c0 59 8dbde9feffff 889de8feffff }
            // n = 7, score = 100
            //   66ab                 | stosw               word ptr es:[edi], ax
            //   aa                   | stosb               byte ptr es:[edi], al
            //   6a18                 | push                0x18
            //   33c0                 | xor                 eax, eax
            //   59                   | pop                 ecx
            //   8dbde9feffff         | lea                 edi, [ebp - 0x117]
            //   889de8feffff         | mov                 byte ptr [ebp - 0x118], bl

        $sequence_2 = { 8d46cd 50 8b45f8 83c032 897df4 }
            // n = 5, score = 100
            //   8d46cd               | lea                 eax, [esi - 0x33]
            //   50                   | push                eax
            //   8b45f8               | mov                 eax, dword ptr [ebp - 8]
            //   83c032               | add                 eax, 0x32
            //   897df4               | mov                 dword ptr [ebp - 0xc], edi

        $sequence_3 = { 8d8d48ffffff eb03 8b4dec ff45fc 8901 83c104 57 }
            // n = 7, score = 100
            //   8d8d48ffffff         | lea                 ecx, [ebp - 0xb8]
            //   eb03                 | jmp                 5
            //   8b4dec               | mov                 ecx, dword ptr [ebp - 0x14]
            //   ff45fc               | inc                 dword ptr [ebp - 4]
            //   8901                 | mov                 dword ptr [ecx], eax
            //   83c104               | add                 ecx, 4
            //   57                   | push                edi

        $sequence_4 = { 8d8558ffffff 50 e8???????? 8b35???????? 8d8558ffffff }
            // n = 5, score = 100
            //   8d8558ffffff         | lea                 eax, [ebp - 0xa8]
            //   50                   | push                eax
            //   e8????????           |                     
            //   8b35????????         |                     
            //   8d8558ffffff         | lea                 eax, [ebp - 0xa8]

        $sequence_5 = { ab ab ab 66ab aa baff000000 33c0 }
            // n = 7, score = 100
            //   ab                   | stosd               dword ptr es:[edi], eax
            //   ab                   | stosd               dword ptr es:[edi], eax
            //   ab                   | stosd               dword ptr es:[edi], eax
            //   66ab                 | stosw               word ptr es:[edi], ax
            //   aa                   | stosb               byte ptr es:[edi], al
            //   baff000000           | mov                 edx, 0xff
            //   33c0                 | xor                 eax, eax

        $sequence_6 = { f3ab 66ab aa 59 33c0 8dbd81feffff 889d80feffff }
            // n = 7, score = 100
            //   f3ab                 | rep stosd           dword ptr es:[edi], eax
            //   66ab                 | stosw               word ptr es:[edi], ax
            //   aa                   | stosb               byte ptr es:[edi], al
            //   59                   | pop                 ecx
            //   33c0                 | xor                 eax, eax
            //   8dbd81feffff         | lea                 edi, [ebp - 0x17f]
            //   889d80feffff         | mov                 byte ptr [ebp - 0x180], bl

        $sequence_7 = { f3ab 66ab aa 33c0 8d7dd9 885dd8 }
            // n = 6, score = 100
            //   f3ab                 | rep stosd           dword ptr es:[edi], eax
            //   66ab                 | stosw               word ptr es:[edi], ax
            //   aa                   | stosb               byte ptr es:[edi], al
            //   33c0                 | xor                 eax, eax
            //   8d7dd9               | lea                 edi, [ebp - 0x27]
            //   885dd8               | mov                 byte ptr [ebp - 0x28], bl

        $sequence_8 = { 8b45f8 83c032 897df4 50 ff7508 }
            // n = 5, score = 100
            //   8b45f8               | mov                 eax, dword ptr [ebp - 8]
            //   83c032               | add                 eax, 0x32
            //   897df4               | mov                 dword ptr [ebp - 0xc], edi
            //   50                   | push                eax
            //   ff7508               | push                dword ptr [ebp + 8]

        $sequence_9 = { 3c6d 7e06 3c7a 7f02 2c0d 88040a 41 }
            // n = 7, score = 100
            //   3c6d                 | cmp                 al, 0x6d
            //   7e06                 | jle                 8
            //   3c7a                 | cmp                 al, 0x7a
            //   7f02                 | jg                  4
            //   2c0d                 | sub                 al, 0xd
            //   88040a               | mov                 byte ptr [edx + ecx], al
            //   41                   | inc                 ecx

    condition:
        7 of them and filesize < 49152
}