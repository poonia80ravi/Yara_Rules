rule win_killav_auto {

    meta:
        author = "Felix Bilstein - yara-signator at cocacoding dot com"
        date = "2022-10-07"
        version = "1"
        description = "Detects win.killav."
        info = "autogenerated rule brought to you by yara-signator"
        tool = "yara-signator v0.6.0"
        signator_config = "callsandjumps;datarefs;binvalue"
        malpedia_reference = "https://malpedia.caad.fkie.fraunhofer.de/details/win.killav"
        malpedia_rule_date = "20221007"
        malpedia_hash = "597f9539014e3d0f350c069cd804aa71679486ae"
        malpedia_version = "20221010"
        malpedia_license = "CC BY-SA 4.0"
        malpedia_sharing = "TLP:WHITE"

    /* DISCLAIMER
     * The strings used in this rule have been automatically selected from the
     * disassembly of memory dumps and unpacked files, using YARA-Signator.
     * The code and documentation is published here:
     * https://github.com/fxb-cocacoding/yara-signator
     * As Malpedia is used as data source, please note that for a given
     * number of families, only single samples are documented.
     * This likely impacts the degree of generalization these rules will offer.
     * Take the described generation method also into consideration when you
     * apply the rules in your use cases and assign them confidence levels.
     */


    strings:
        $sequence_0 = { 8b049d70ba4300 f644012801 0f8487000000 817d10ffffff7f }
            // n = 4, score = 100
            //   8b049d70ba4300       | mov                 eax, dword ptr [ebx*4 + 0x43ba70]
            //   f644012801           | test                byte ptr [ecx + eax + 0x28], 1
            //   0f8487000000         | je                  0x8d
            //   817d10ffffff7f       | cmp                 dword ptr [ebp + 0x10], 0x7fffffff

        $sequence_1 = { e8???????? 837de800 740c 8d45d8 50 8d4dd0 e8???????? }
            // n = 7, score = 100
            //   e8????????           |                     
            //   837de800             | cmp                 dword ptr [ebp - 0x18], 0
            //   740c                 | je                  0xe
            //   8d45d8               | lea                 eax, [ebp - 0x28]
            //   50                   | push                eax
            //   8d4dd0               | lea                 ecx, [ebp - 0x30]
            //   e8????????           |                     

        $sequence_2 = { c745ec07000000 668945d8 e8???????? 8d45d8 c645fc10 }
            // n = 5, score = 100
            //   c745ec07000000       | mov                 dword ptr [ebp - 0x14], 7
            //   668945d8             | mov                 word ptr [ebp - 0x28], ax
            //   e8????????           |                     
            //   8d45d8               | lea                 eax, [ebp - 0x28]
            //   c645fc10             | mov                 byte ptr [ebp - 4], 0x10

        $sequence_3 = { 83f8ff 0f8403020000 eb55 0fb607 0fbe88e0a24300 41 894dd4 }
            // n = 7, score = 100
            //   83f8ff               | cmp                 eax, -1
            //   0f8403020000         | je                  0x209
            //   eb55                 | jmp                 0x57
            //   0fb607               | movzx               eax, byte ptr [edi]
            //   0fbe88e0a24300       | movsx               ecx, byte ptr [eax + 0x43a2e0]
            //   41                   | inc                 ecx
            //   894dd4               | mov                 dword ptr [ebp - 0x2c], ecx

        $sequence_4 = { c745e4e8e24200 e9???????? 894de0 c745e4e8e24200 e9???????? c745e003000000 c745e4e0e24200 }
            // n = 7, score = 100
            //   c745e4e8e24200       | mov                 dword ptr [ebp - 0x1c], 0x42e2e8
            //   e9????????           |                     
            //   894de0               | mov                 dword ptr [ebp - 0x20], ecx
            //   c745e4e8e24200       | mov                 dword ptr [ebp - 0x1c], 0x42e2e8
            //   e9????????           |                     
            //   c745e003000000       | mov                 dword ptr [ebp - 0x20], 3
            //   c745e4e0e24200       | mov                 dword ptr [ebp - 0x1c], 0x42e2e0

        $sequence_5 = { c1f806 6bc938 8b048570ba4300 0fb6440828 83e040 5d c3 }
            // n = 7, score = 100
            //   c1f806               | sar                 eax, 6
            //   6bc938               | imul                ecx, ecx, 0x38
            //   8b048570ba4300       | mov                 eax, dword ptr [eax*4 + 0x43ba70]
            //   0fb6440828           | movzx               eax, byte ptr [eax + ecx + 0x28]
            //   83e040               | and                 eax, 0x40
            //   5d                   | pop                 ebp
            //   c3                   | ret                 

        $sequence_6 = { c745e800000000 c745ec07000000 668945d8 e8???????? 8d45d8 c645fc16 50 }
            // n = 7, score = 100
            //   c745e800000000       | mov                 dword ptr [ebp - 0x18], 0
            //   c745ec07000000       | mov                 dword ptr [ebp - 0x14], 7
            //   668945d8             | mov                 word ptr [ebp - 0x28], ax
            //   e8????????           |                     
            //   8d45d8               | lea                 eax, [ebp - 0x28]
            //   c645fc16             | mov                 byte ptr [ebp - 4], 0x16
            //   50                   | push                eax

        $sequence_7 = { 8d4dd8 e8???????? 8d45d8 c645fc49 50 8d4dd0 e8???????? }
            // n = 7, score = 100
            //   8d4dd8               | lea                 ecx, [ebp - 0x28]
            //   e8????????           |                     
            //   8d45d8               | lea                 eax, [ebp - 0x28]
            //   c645fc49             | mov                 byte ptr [ebp - 4], 0x49
            //   50                   | push                eax
            //   8d4dd0               | lea                 ecx, [ebp - 0x30]
            //   e8????????           |                     

        $sequence_8 = { 8b5dec c70200000000 8b15???????? c70100000000 8b0d???????? c70000000000 8b45f0 }
            // n = 7, score = 100
            //   8b5dec               | mov                 ebx, dword ptr [ebp - 0x14]
            //   c70200000000         | mov                 dword ptr [edx], 0
            //   8b15????????         |                     
            //   c70100000000         | mov                 dword ptr [ecx], 0
            //   8b0d????????         |                     
            //   c70000000000         | mov                 dword ptr [eax], 0
            //   8b45f0               | mov                 eax, dword ptr [ebp - 0x10]

        $sequence_9 = { ff742420 ba???????? 51 b9???????? e8???????? 83c404 }
            // n = 6, score = 100
            //   ff742420             | push                dword ptr [esp + 0x20]
            //   ba????????           |                     
            //   51                   | push                ecx
            //   b9????????           |                     
            //   e8????????           |                     
            //   83c404               | add                 esp, 4

    condition:
        7 of them and filesize < 517120
}