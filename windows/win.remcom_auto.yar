rule win_remcom_auto {

    meta:
        author = "Felix Bilstein - yara-signator at cocacoding dot com"
        date = "2022-10-07"
        version = "1"
        description = "Detects win.remcom."
        info = "autogenerated rule brought to you by yara-signator"
        tool = "yara-signator v0.6.0"
        signator_config = "callsandjumps;datarefs;binvalue"
        malpedia_reference = "https://malpedia.caad.fkie.fraunhofer.de/details/win.remcom"
        malpedia_rule_date = "20221007"
        malpedia_hash = "597f9539014e3d0f350c069cd804aa71679486ae"
        malpedia_version = "20221010"
        malpedia_license = "CC BY-SA 4.0"
        malpedia_sharing = "TLP:WHITE"

    /* DISCLAIMER
     * The strings used in this rule have been automatically selected from the
     * disassembly of memory dumps and unpacked files, using YARA-Signator.
     * The code and documentation is published here:
     * https://github.com/fxb-cocacoding/yara-signator
     * As Malpedia is used as data source, please note that for a given
     * number of families, only single samples are documented.
     * This likely impacts the degree of generalization these rules will offer.
     * Take the described generation method also into consideration when you
     * apply the rules in your use cases and assign them confidence levels.
     */


    strings:
        $sequence_0 = { 8b0d???????? 51 ff15???????? 8b15???????? 33c0 }
            // n = 5, score = 100
            //   8b0d????????         |                     
            //   51                   | push                ecx
            //   ff15????????         |                     
            //   8b15????????         |                     
            //   33c0                 | xor                 eax, eax

        $sequence_1 = { 8bc8 83e01f c1f905 c1e006 03048de0fc4000 }
            // n = 5, score = 100
            //   8bc8                 | mov                 ecx, eax
            //   83e01f               | and                 eax, 0x1f
            //   c1f905               | sar                 ecx, 5
            //   c1e006               | shl                 eax, 6
            //   03048de0fc4000       | add                 eax, dword ptr [ecx*4 + 0x40fce0]

        $sequence_2 = { 6a00 68ff000000 6a04 6a03 8d55e0 68???????? c745f40c000000 }
            // n = 7, score = 100
            //   6a00                 | push                0
            //   68ff000000           | push                0xff
            //   6a04                 | push                4
            //   6a03                 | push                3
            //   8d55e0               | lea                 edx, [ebp - 0x20]
            //   68????????           |                     
            //   c745f40c000000       | mov                 dword ptr [ebp - 0xc], 0xc

        $sequence_3 = { 7d0d 8a4c181c 888860e94000 40 ebe9 33c0 8945e4 }
            // n = 7, score = 100
            //   7d0d                 | jge                 0xf
            //   8a4c181c             | mov                 cl, byte ptr [eax + ebx + 0x1c]
            //   888860e94000         | mov                 byte ptr [eax + 0x40e960], cl
            //   40                   | inc                 eax
            //   ebe9                 | jmp                 0xffffffeb
            //   33c0                 | xor                 eax, eax
            //   8945e4               | mov                 dword ptr [ebp - 0x1c], eax

        $sequence_4 = { a1???????? 68???????? 50 eb34 8b0d???????? 51 ff15???????? }
            // n = 7, score = 100
            //   a1????????           |                     
            //   68????????           |                     
            //   50                   | push                eax
            //   eb34                 | jmp                 0x36
            //   8b0d????????         |                     
            //   51                   | push                ecx
            //   ff15????????         |                     

        $sequence_5 = { 8bc7 c1f805 8bf7 83e61f c1e606 033485e0fc4000 c745e401000000 }
            // n = 7, score = 100
            //   8bc7                 | mov                 eax, edi
            //   c1f805               | sar                 eax, 5
            //   8bf7                 | mov                 esi, edi
            //   83e61f               | and                 esi, 0x1f
            //   c1e606               | shl                 esi, 6
            //   033485e0fc4000       | add                 esi, dword ptr [eax*4 + 0x40fce0]
            //   c745e401000000       | mov                 dword ptr [ebp - 0x1c], 1

        $sequence_6 = { 8db180eb4000 8975e4 eb2a 8a4601 84c0 7428 0fb63e }
            // n = 7, score = 100
            //   8db180eb4000         | lea                 esi, [ecx + 0x40eb80]
            //   8975e4               | mov                 dword ptr [ebp - 0x1c], esi
            //   eb2a                 | jmp                 0x2c
            //   8a4601               | mov                 al, byte ptr [esi + 1]
            //   84c0                 | test                al, al
            //   7428                 | je                  0x2a
            //   0fb63e               | movzx               edi, byte ptr [esi]

        $sequence_7 = { c70001000000 8b45e4 8b3d???????? 85c0 7403 }
            // n = 5, score = 100
            //   c70001000000         | mov                 dword ptr [eax], 1
            //   8b45e4               | mov                 eax, dword ptr [ebp - 0x1c]
            //   8b3d????????         |                     
            //   85c0                 | test                eax, eax
            //   7403                 | je                  5

        $sequence_8 = { 8b85f4feffff 5b 5f 33cd 5e }
            // n = 5, score = 100
            //   8b85f4feffff         | mov                 eax, dword ptr [ebp - 0x10c]
            //   5b                   | pop                 ebx
            //   5f                   | pop                 edi
            //   33cd                 | xor                 ecx, ebp
            //   5e                   | pop                 esi

        $sequence_9 = { ffd7 8b4e3c 894638 83f9ff 7432 837e40ff }
            // n = 6, score = 100
            //   ffd7                 | call                edi
            //   8b4e3c               | mov                 ecx, dword ptr [esi + 0x3c]
            //   894638               | mov                 dword ptr [esi + 0x38], eax
            //   83f9ff               | cmp                 ecx, -1
            //   7432                 | je                  0x34
            //   837e40ff             | cmp                 dword ptr [esi + 0x40], -1

    condition:
        7 of them and filesize < 155648
}