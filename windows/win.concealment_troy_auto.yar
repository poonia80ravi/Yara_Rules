rule win_concealment_troy_auto {

    meta:
        author = "Felix Bilstein - yara-signator at cocacoding dot com"
        date = "2022-10-07"
        version = "1"
        description = "Detects win.concealment_troy."
        info = "autogenerated rule brought to you by yara-signator"
        tool = "yara-signator v0.6.0"
        signator_config = "callsandjumps;datarefs;binvalue"
        malpedia_reference = "https://malpedia.caad.fkie.fraunhofer.de/details/win.concealment_troy"
        malpedia_rule_date = "20221007"
        malpedia_hash = "597f9539014e3d0f350c069cd804aa71679486ae"
        malpedia_version = "20221010"
        malpedia_license = "CC BY-SA 4.0"
        malpedia_sharing = "TLP:WHITE"

    /* DISCLAIMER
     * The strings used in this rule have been automatically selected from the
     * disassembly of memory dumps and unpacked files, using YARA-Signator.
     * The code and documentation is published here:
     * https://github.com/fxb-cocacoding/yara-signator
     * As Malpedia is used as data source, please note that for a given
     * number of families, only single samples are documented.
     * This likely impacts the degree of generalization these rules will offer.
     * Take the described generation method also into consideration when you
     * apply the rules in your use cases and assign them confidence levels.
     */


    strings:
        $sequence_0 = { 33c0 5f 5e 5b 8b8c24580d0000 33cc }
            // n = 6, score = 100
            //   33c0                 | xor                 eax, eax
            //   5f                   | pop                 edi
            //   5e                   | pop                 esi
            //   5b                   | pop                 ebx
            //   8b8c24580d0000       | mov                 ecx, dword ptr [esp + 0xd58]
            //   33cc                 | xor                 ecx, esp

        $sequence_1 = { e8???????? 56 56 68???????? 68???????? 8d842474020000 68???????? }
            // n = 7, score = 100
            //   e8????????           |                     
            //   56                   | push                esi
            //   56                   | push                esi
            //   68????????           |                     
            //   68????????           |                     
            //   8d842474020000       | lea                 eax, [esp + 0x274]
            //   68????????           |                     

        $sequence_2 = { 6a00 bb???????? c744241c04000000 e8???????? 8b542420 50 }
            // n = 6, score = 100
            //   6a00                 | push                0
            //   bb????????           |                     
            //   c744241c04000000     | mov                 dword ptr [esp + 0x1c], 4
            //   e8????????           |                     
            //   8b542420             | mov                 edx, dword ptr [esp + 0x20]
            //   50                   | push                eax

        $sequence_3 = { c1fb05 83e61f 8d1c9da0774100 894508 8b03 c1e606 }
            // n = 6, score = 100
            //   c1fb05               | sar                 ebx, 5
            //   83e61f               | and                 esi, 0x1f
            //   8d1c9da0774100       | lea                 ebx, [ebx*4 + 0x4177a0]
            //   894508               | mov                 dword ptr [ebp + 8], eax
            //   8b03                 | mov                 eax, dword ptr [ebx]
            //   c1e606               | shl                 esi, 6

        $sequence_4 = { e8???????? 8bc6 c1f805 8b0485a0774100 }
            // n = 4, score = 100
            //   e8????????           |                     
            //   8bc6                 | mov                 eax, esi
            //   c1f805               | sar                 eax, 5
            //   8b0485a0774100       | mov                 eax, dword ptr [eax*4 + 0x4177a0]

        $sequence_5 = { 52 6a01 53 bb???????? }
            // n = 4, score = 100
            //   52                   | push                edx
            //   6a01                 | push                1
            //   53                   | push                ebx
            //   bb????????           |                     

        $sequence_6 = { 8d3c85a0774100 e8???????? 83e01f 59 c1e006 0307 59 }
            // n = 7, score = 100
            //   8d3c85a0774100       | lea                 edi, [eax*4 + 0x4177a0]
            //   e8????????           |                     
            //   83e01f               | and                 eax, 0x1f
            //   59                   | pop                 ecx
            //   c1e006               | shl                 eax, 6
            //   0307                 | add                 eax, dword ptr [edi]
            //   59                   | pop                 ecx

        $sequence_7 = { 6a00 50 c684244009000000 e8???????? 83c410 56 }
            // n = 6, score = 100
            //   6a00                 | push                0
            //   50                   | push                eax
            //   c684244009000000     | mov                 byte ptr [esp + 0x940], 0
            //   e8????????           |                     
            //   83c410               | add                 esp, 0x10
            //   56                   | push                esi

        $sequence_8 = { e8???????? 81c418020000 c3 33c0 6a0a }
            // n = 5, score = 100
            //   e8????????           |                     
            //   81c418020000         | add                 esp, 0x218
            //   c3                   | ret                 
            //   33c0                 | xor                 eax, eax
            //   6a0a                 | push                0xa

        $sequence_9 = { 8b1495a0774100 c1e006 8d440224 802080 884dfd 8065fd48 884dff }
            // n = 7, score = 100
            //   8b1495a0774100       | mov                 edx, dword ptr [edx*4 + 0x4177a0]
            //   c1e006               | shl                 eax, 6
            //   8d440224             | lea                 eax, [edx + eax + 0x24]
            //   802080               | and                 byte ptr [eax], 0x80
            //   884dfd               | mov                 byte ptr [ebp - 3], cl
            //   8065fd48             | and                 byte ptr [ebp - 3], 0x48
            //   884dff               | mov                 byte ptr [ebp - 1], cl

    condition:
        7 of them and filesize < 229376
}