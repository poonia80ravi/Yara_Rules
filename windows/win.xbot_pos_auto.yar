rule win_xbot_pos_auto {

    meta:
        author = "Felix Bilstein - yara-signator at cocacoding dot com"
        date = "2022-10-07"
        version = "1"
        description = "Detects win.xbot_pos."
        info = "autogenerated rule brought to you by yara-signator"
        tool = "yara-signator v0.6.0"
        signator_config = "callsandjumps;datarefs;binvalue"
        malpedia_reference = "https://malpedia.caad.fkie.fraunhofer.de/details/win.xbot_pos"
        malpedia_rule_date = "20221007"
        malpedia_hash = "597f9539014e3d0f350c069cd804aa71679486ae"
        malpedia_version = "20221010"
        malpedia_license = "CC BY-SA 4.0"
        malpedia_sharing = "TLP:WHITE"

    /* DISCLAIMER
     * The strings used in this rule have been automatically selected from the
     * disassembly of memory dumps and unpacked files, using YARA-Signator.
     * The code and documentation is published here:
     * https://github.com/fxb-cocacoding/yara-signator
     * As Malpedia is used as data source, please note that for a given
     * number of families, only single samples are documented.
     * This likely impacts the degree of generalization these rules will offer.
     * Take the described generation method also into consideration when you
     * apply the rules in your use cases and assign them confidence levels.
     */


    strings:
        $sequence_0 = { 4c 00e6 4c 4c 00f3 4c }
            // n = 6, score = 100
            //   4c                   | dec                 esp
            //   00e6                 | add                 dh, ah
            //   4c                   | dec                 esp
            //   4c                   | dec                 esp
            //   00f3                 | add                 bl, dh
            //   4c                   | dec                 esp

        $sequence_1 = { 8bf0 8b4de8 e8???????? 8b10 d1ea 3bd6 7702 }
            // n = 7, score = 100
            //   8bf0                 | mov                 esi, eax
            //   8b4de8               | mov                 ecx, dword ptr [ebp - 0x18]
            //   e8????????           |                     
            //   8b10                 | mov                 edx, dword ptr [eax]
            //   d1ea                 | shr                 edx, 1
            //   3bd6                 | cmp                 edx, esi
            //   7702                 | ja                  4

        $sequence_2 = { 83e13f 6bd130 8b0485e0465600 0fb64c1028 83e102 7407 }
            // n = 6, score = 100
            //   83e13f               | and                 ecx, 0x3f
            //   6bd130               | imul                edx, ecx, 0x30
            //   8b0485e0465600       | mov                 eax, dword ptr [eax*4 + 0x5646e0]
            //   0fb64c1028           | movzx               ecx, byte ptr [eax + edx + 0x28]
            //   83e102               | and                 ecx, 2
            //   7407                 | je                  9

        $sequence_3 = { 3b5104 720e 8b45ec 8b4df8 8b5008 }
            // n = 5, score = 100
            //   3b5104               | cmp                 edx, dword ptr [ecx + 4]
            //   720e                 | jb                  0x10
            //   8b45ec               | mov                 eax, dword ptr [ebp - 0x14]
            //   8b4df8               | mov                 ecx, dword ptr [ebp - 8]
            //   8b5008               | mov                 edx, dword ptr [eax + 8]

        $sequence_4 = { 38534c 004553 4c 005253 4c 005f53 4c }
            // n = 7, score = 100
            //   38534c               | cmp                 byte ptr [ebx + 0x4c], dl
            //   004553               | add                 byte ptr [ebp + 0x53], al
            //   4c                   | dec                 esp
            //   005253               | add                 byte ptr [edx + 0x53], dl
            //   4c                   | dec                 esp
            //   005f53               | add                 byte ptr [edi + 0x53], bl
            //   4c                   | dec                 esp

        $sequence_5 = { 83c40c 898508f1ffff 8b8d08f1ffff 898d04f1ffff c645fc0c }
            // n = 5, score = 100
            //   83c40c               | add                 esp, 0xc
            //   898508f1ffff         | mov                 dword ptr [ebp - 0xef8], eax
            //   8b8d08f1ffff         | mov                 ecx, dword ptr [ebp - 0xef8]
            //   898d04f1ffff         | mov                 dword ptr [ebp - 0xefc], ecx
            //   c645fc0c             | mov                 byte ptr [ebp - 4], 0xc

        $sequence_6 = { 8d4dc4 e8???????? 8a852bfcffff e9???????? 837d0800 742d 83bd4cffffff00 }
            // n = 7, score = 100
            //   8d4dc4               | lea                 ecx, [ebp - 0x3c]
            //   e8????????           |                     
            //   8a852bfcffff         | mov                 al, byte ptr [ebp - 0x3d5]
            //   e9????????           |                     
            //   837d0800             | cmp                 dword ptr [ebp + 8], 0
            //   742d                 | je                  0x2f
            //   83bd4cffffff00       | cmp                 dword ptr [ebp - 0xb4], 0

        $sequence_7 = { 776c 8b45dc 0fb6880c9f4a00 ff248df89e4a00 c645e801 8b15???????? 83c203 }
            // n = 7, score = 100
            //   776c                 | ja                  0x6e
            //   8b45dc               | mov                 eax, dword ptr [ebp - 0x24]
            //   0fb6880c9f4a00       | movzx               ecx, byte ptr [eax + 0x4a9f0c]
            //   ff248df89e4a00       | jmp                 dword ptr [ecx*4 + 0x4a9ef8]
            //   c645e801             | mov                 byte ptr [ebp - 0x18], 1
            //   8b15????????         |                     
            //   83c203               | add                 edx, 3

        $sequence_8 = { 8b5004 52 8b00 50 e8???????? 83c41c 8945f8 }
            // n = 7, score = 100
            //   8b5004               | mov                 edx, dword ptr [eax + 4]
            //   52                   | push                edx
            //   8b00                 | mov                 eax, dword ptr [eax]
            //   50                   | push                eax
            //   e8????????           |                     
            //   83c41c               | add                 esp, 0x1c
            //   8945f8               | mov                 dword ptr [ebp - 8], eax

        $sequence_9 = { 83c404 0fbe08 85c9 7564 8b45ec 50 e8???????? }
            // n = 7, score = 100
            //   83c404               | add                 esp, 4
            //   0fbe08               | movsx               ecx, byte ptr [eax]
            //   85c9                 | test                ecx, ecx
            //   7564                 | jne                 0x66
            //   8b45ec               | mov                 eax, dword ptr [ebp - 0x14]
            //   50                   | push                eax
            //   e8????????           |                     

    condition:
        7 of them and filesize < 3031040
}