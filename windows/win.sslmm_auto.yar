rule win_sslmm_auto {

    meta:
        author = "Felix Bilstein - yara-signator at cocacoding dot com"
        date = "2022-10-07"
        version = "1"
        description = "Detects win.sslmm."
        info = "autogenerated rule brought to you by yara-signator"
        tool = "yara-signator v0.6.0"
        signator_config = "callsandjumps;datarefs;binvalue"
        malpedia_reference = "https://malpedia.caad.fkie.fraunhofer.de/details/win.sslmm"
        malpedia_rule_date = "20221007"
        malpedia_hash = "597f9539014e3d0f350c069cd804aa71679486ae"
        malpedia_version = "20221010"
        malpedia_license = "CC BY-SA 4.0"
        malpedia_sharing = "TLP:WHITE"

    /* DISCLAIMER
     * The strings used in this rule have been automatically selected from the
     * disassembly of memory dumps and unpacked files, using YARA-Signator.
     * The code and documentation is published here:
     * https://github.com/fxb-cocacoding/yara-signator
     * As Malpedia is used as data source, please note that for a given
     * number of families, only single samples are documented.
     * This likely impacts the degree of generalization these rules will offer.
     * Take the described generation method also into consideration when you
     * apply the rules in your use cases and assign them confidence levels.
     */


    strings:
        $sequence_0 = { 8b5c2428 56 57 85db 8bf1 0f8490010000 53 }
            // n = 7, score = 400
            //   8b5c2428             | mov                 ebx, dword ptr [esp + 0x28]
            //   56                   | push                esi
            //   57                   | push                edi
            //   85db                 | test                ebx, ebx
            //   8bf1                 | mov                 esi, ecx
            //   0f8490010000         | je                  0x196
            //   53                   | push                ebx

        $sequence_1 = { 52 50 896c2474 89bc2488000000 89bc2480000000 89bc2484000000 }
            // n = 6, score = 400
            //   52                   | push                edx
            //   50                   | push                eax
            //   896c2474             | mov                 dword ptr [esp + 0x74], ebp
            //   89bc2488000000       | mov                 dword ptr [esp + 0x88], edi
            //   89bc2480000000       | mov                 dword ptr [esp + 0x80], edi
            //   89bc2484000000       | mov                 dword ptr [esp + 0x84], edi

        $sequence_2 = { 6a01 e8???????? 8bf8 85ff 743e 8bce }
            // n = 6, score = 400
            //   6a01                 | push                1
            //   e8????????           |                     
            //   8bf8                 | mov                 edi, eax
            //   85ff                 | test                edi, edi
            //   743e                 | je                  0x40
            //   8bce                 | mov                 ecx, esi

        $sequence_3 = { 89442454 8d1403 8b442438 89742418 89542468 89442460 }
            // n = 6, score = 400
            //   89442454             | mov                 dword ptr [esp + 0x54], eax
            //   8d1403               | lea                 edx, [ebx + eax]
            //   8b442438             | mov                 eax, dword ptr [esp + 0x38]
            //   89742418             | mov                 dword ptr [esp + 0x18], esi
            //   89542468             | mov                 dword ptr [esp + 0x68], edx
            //   89442460             | mov                 dword ptr [esp + 0x60], eax

        $sequence_4 = { 8b4c2428 51 ff9630010000 8b542464 52 }
            // n = 5, score = 400
            //   8b4c2428             | mov                 ecx, dword ptr [esp + 0x28]
            //   51                   | push                ecx
            //   ff9630010000         | call                dword ptr [esi + 0x130]
            //   8b542464             | mov                 edx, dword ptr [esp + 0x64]
            //   52                   | push                edx

        $sequence_5 = { f3a5 8bc8 8954241c 83e103 53 f3a4 b902010000 }
            // n = 7, score = 400
            //   f3a5                 | rep movsd           dword ptr es:[edi], dword ptr [esi]
            //   8bc8                 | mov                 ecx, eax
            //   8954241c             | mov                 dword ptr [esp + 0x1c], edx
            //   83e103               | and                 ecx, 3
            //   53                   | push                ebx
            //   f3a4                 | rep movsb           byte ptr es:[edi], byte ptr [esi]
            //   b902010000           | mov                 ecx, 0x102

        $sequence_6 = { f7d1 2bf9 b001 8bd1 8bf7 8bbc24a0010000 }
            // n = 6, score = 400
            //   f7d1                 | not                 ecx
            //   2bf9                 | sub                 edi, ecx
            //   b001                 | mov                 al, 1
            //   8bd1                 | mov                 edx, ecx
            //   8bf7                 | mov                 esi, edi
            //   8bbc24a0010000       | mov                 edi, dword ptr [esp + 0x1a0]

        $sequence_7 = { 8b4c82fc 8b5110 8b0a 8b5104 895486fc 8b4c2408 3b410c }
            // n = 7, score = 400
            //   8b4c82fc             | mov                 ecx, dword ptr [edx + eax*4 - 4]
            //   8b5110               | mov                 edx, dword ptr [ecx + 0x10]
            //   8b0a                 | mov                 ecx, dword ptr [edx]
            //   8b5104               | mov                 edx, dword ptr [ecx + 4]
            //   895486fc             | mov                 dword ptr [esi + eax*4 - 4], edx
            //   8b4c2408             | mov                 ecx, dword ptr [esp + 8]
            //   3b410c               | cmp                 eax, dword ptr [ecx + 0xc]

        $sequence_8 = { 8bf1 0f8490010000 53 e8???????? 83c404 85c0 }
            // n = 6, score = 400
            //   8bf1                 | mov                 esi, ecx
            //   0f8490010000         | je                  0x196
            //   53                   | push                ebx
            //   e8????????           |                     
            //   83c404               | add                 esp, 4
            //   85c0                 | test                eax, eax

        $sequence_9 = { f7d1 49 8d442414 51 50 8bcb e8???????? }
            // n = 7, score = 400
            //   f7d1                 | not                 ecx
            //   49                   | dec                 ecx
            //   8d442414             | lea                 eax, [esp + 0x14]
            //   51                   | push                ecx
            //   50                   | push                eax
            //   8bcb                 | mov                 ecx, ebx
            //   e8????????           |                     

    condition:
        7 of them and filesize < 188416
}