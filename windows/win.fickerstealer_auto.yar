rule win_fickerstealer_auto {

    meta:
        author = "Felix Bilstein - yara-signator at cocacoding dot com"
        date = "2022-10-07"
        version = "1"
        description = "Detects win.fickerstealer."
        info = "autogenerated rule brought to you by yara-signator"
        tool = "yara-signator v0.6.0"
        signator_config = "callsandjumps;datarefs;binvalue"
        malpedia_reference = "https://malpedia.caad.fkie.fraunhofer.de/details/win.fickerstealer"
        malpedia_rule_date = "20221007"
        malpedia_hash = "597f9539014e3d0f350c069cd804aa71679486ae"
        malpedia_version = "20221010"
        malpedia_license = "CC BY-SA 4.0"
        malpedia_sharing = "TLP:WHITE"

    /* DISCLAIMER
     * The strings used in this rule have been automatically selected from the
     * disassembly of memory dumps and unpacked files, using YARA-Signator.
     * The code and documentation is published here:
     * https://github.com/fxb-cocacoding/yara-signator
     * As Malpedia is used as data source, please note that for a given
     * number of families, only single samples are documented.
     * This likely impacts the degree of generalization these rules will offer.
     * Take the described generation method also into consideration when you
     * apply the rules in your use cases and assign them confidence levels.
     */


    strings:
        $sequence_0 = { 8b7c2420 f20f10442418 84d2 f20f11542460 f20f114c2468 f20f108c2400010000 f20f10542430 }
            // n = 7, score = 200
            //   8b7c2420             | mov                 edi, dword ptr [esp + 0x20]
            //   f20f10442418         | movsd               xmm0, qword ptr [esp + 0x18]
            //   84d2                 | test                dl, dl
            //   f20f11542460         | movsd               qword ptr [esp + 0x60], xmm2
            //   f20f114c2468         | movsd               qword ptr [esp + 0x68], xmm1
            //   f20f108c2400010000     | movsd    xmm1, qword ptr [esp + 0x100]
            //   f20f10542430         | movsd               xmm2, qword ptr [esp + 0x30]

        $sequence_1 = { 8d55e4 037d98 894d98 89f1 0345d0 8945d0 8d8528ffffff }
            // n = 7, score = 200
            //   8d55e4               | lea                 edx, [ebp - 0x1c]
            //   037d98               | add                 edi, dword ptr [ebp - 0x68]
            //   894d98               | mov                 dword ptr [ebp - 0x68], ecx
            //   89f1                 | mov                 ecx, esi
            //   0345d0               | add                 eax, dword ptr [ebp - 0x30]
            //   8945d0               | mov                 dword ptr [ebp - 0x30], eax
            //   8d8528ffffff         | lea                 eax, [ebp - 0xd8]

        $sequence_2 = { f20f1145d8 894de8 8906 f20f1045d8 f20f104de0 8b55e8 f20f114604 }
            // n = 7, score = 200
            //   f20f1145d8           | movsd               qword ptr [ebp - 0x28], xmm0
            //   894de8               | mov                 dword ptr [ebp - 0x18], ecx
            //   8906                 | mov                 dword ptr [esi], eax
            //   f20f1045d8           | movsd               xmm0, qword ptr [ebp - 0x28]
            //   f20f104de0           | movsd               xmm1, qword ptr [ebp - 0x20]
            //   8b55e8               | mov                 edx, dword ptr [ebp - 0x18]
            //   f20f114604           | movsd               qword ptr [esi + 4], xmm0

        $sequence_3 = { e8???????? 83c408 01442414 89ce 89d0 b900000080 e9???????? }
            // n = 7, score = 200
            //   e8????????           |                     
            //   83c408               | add                 esp, 8
            //   01442414             | add                 dword ptr [esp + 0x14], eax
            //   89ce                 | mov                 esi, ecx
            //   89d0                 | mov                 eax, edx
            //   b900000080           | mov                 ecx, 0x80000000
            //   e9????????           |                     

        $sequence_4 = { e8???????? 89d9 e8???????? 89fe 89f0 83c404 5e }
            // n = 7, score = 200
            //   e8????????           |                     
            //   89d9                 | mov                 ecx, ebx
            //   e8????????           |                     
            //   89fe                 | mov                 esi, edi
            //   89f0                 | mov                 eax, esi
            //   83c404               | add                 esp, 4
            //   5e                   | pop                 esi

        $sequence_5 = { 8d4ddc f20f1045a0 f20f104d98 f20f114208 f20f110a 50 e8???????? }
            // n = 7, score = 200
            //   8d4ddc               | lea                 ecx, [ebp - 0x24]
            //   f20f1045a0           | movsd               xmm0, qword ptr [ebp - 0x60]
            //   f20f104d98           | movsd               xmm1, qword ptr [ebp - 0x68]
            //   f20f114208           | movsd               qword ptr [edx + 8], xmm0
            //   f20f110a             | movsd               qword ptr [edx], xmm1
            //   50                   | push                eax
            //   e8????????           |                     

        $sequence_6 = { f20f114808 f20f1100 31c0 40 50 e8???????? 58 }
            // n = 7, score = 200
            //   f20f114808           | movsd               qword ptr [eax + 8], xmm1
            //   f20f1100             | movsd               qword ptr [eax], xmm0
            //   31c0                 | xor                 eax, eax
            //   40                   | inc                 eax
            //   50                   | push                eax
            //   e8????????           |                     
            //   58                   | pop                 eax

        $sequence_7 = { b840120000 e8???????? 898c2480000000 8b4a3c 8b424c 89ce 29c6 }
            // n = 7, score = 200
            //   b840120000           | mov                 eax, 0x1240
            //   e8????????           |                     
            //   898c2480000000       | mov                 dword ptr [esp + 0x80], ecx
            //   8b4a3c               | mov                 ecx, dword ptr [edx + 0x3c]
            //   8b424c               | mov                 eax, dword ptr [edx + 0x4c]
            //   89ce                 | mov                 esi, ecx
            //   29c6                 | sub                 esi, eax

        $sequence_8 = { 8b75ac b904040404 8b8554feffff ba02020202 21ce 21d0 09fe }
            // n = 7, score = 200
            //   8b75ac               | mov                 esi, dword ptr [ebp - 0x54]
            //   b904040404           | mov                 ecx, 0x4040404
            //   8b8554feffff         | mov                 eax, dword ptr [ebp - 0x1ac]
            //   ba02020202           | mov                 edx, 0x2020202
            //   21ce                 | and                 esi, ecx
            //   21d0                 | and                 eax, edx
            //   09fe                 | or                  esi, edi

        $sequence_9 = { 0f8255020000 8b4c241c 837cf9f800 7447 8b54f9f4 8b44f9fc 39c2 }
            // n = 7, score = 200
            //   0f8255020000         | jb                  0x25b
            //   8b4c241c             | mov                 ecx, dword ptr [esp + 0x1c]
            //   837cf9f800           | cmp                 dword ptr [ecx + edi*8 - 8], 0
            //   7447                 | je                  0x49
            //   8b54f9f4             | mov                 edx, dword ptr [ecx + edi*8 - 0xc]
            //   8b44f9fc             | mov                 eax, dword ptr [ecx + edi*8 - 4]
            //   39c2                 | cmp                 edx, eax

    condition:
        7 of them and filesize < 598016
}