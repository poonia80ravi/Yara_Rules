rule win_gup_proxy_auto {

    meta:
        author = "Felix Bilstein - yara-signator at cocacoding dot com"
        date = "2022-10-07"
        version = "1"
        description = "Detects win.gup_proxy."
        info = "autogenerated rule brought to you by yara-signator"
        tool = "yara-signator v0.6.0"
        signator_config = "callsandjumps;datarefs;binvalue"
        malpedia_reference = "https://malpedia.caad.fkie.fraunhofer.de/details/win.gup_proxy"
        malpedia_rule_date = "20221007"
        malpedia_hash = "597f9539014e3d0f350c069cd804aa71679486ae"
        malpedia_version = "20221010"
        malpedia_license = "CC BY-SA 4.0"
        malpedia_sharing = "TLP:WHITE"

    /* DISCLAIMER
     * The strings used in this rule have been automatically selected from the
     * disassembly of memory dumps and unpacked files, using YARA-Signator.
     * The code and documentation is published here:
     * https://github.com/fxb-cocacoding/yara-signator
     * As Malpedia is used as data source, please note that for a given
     * number of families, only single samples are documented.
     * This likely impacts the degree of generalization these rules will offer.
     * Take the described generation method also into consideration when you
     * apply the rules in your use cases and assign them confidence levels.
     */


    strings:
        $sequence_0 = { 8bc8 c1e908 8d8588feffff 6a04 888d89feffff 8bce 50 }
            // n = 7, score = 100
            //   8bc8                 | mov                 ecx, eax
            //   c1e908               | shr                 ecx, 8
            //   8d8588feffff         | lea                 eax, [ebp - 0x178]
            //   6a04                 | push                4
            //   888d89feffff         | mov                 byte ptr [ebp - 0x177], cl
            //   8bce                 | mov                 ecx, esi
            //   50                   | push                eax

        $sequence_1 = { ff15???????? 85c0 741b 53 ff15???????? 83c8ff 5f }
            // n = 7, score = 100
            //   ff15????????         |                     
            //   85c0                 | test                eax, eax
            //   741b                 | je                  0x1d
            //   53                   | push                ebx
            //   ff15????????         |                     
            //   83c8ff               | or                  eax, 0xffffffff
            //   5f                   | pop                 edi

        $sequence_2 = { 8bd8 895c2420 83fbff 743c b802000000 68???????? 6689442460 }
            // n = 7, score = 100
            //   8bd8                 | mov                 ebx, eax
            //   895c2420             | mov                 dword ptr [esp + 0x20], ebx
            //   83fbff               | cmp                 ebx, -1
            //   743c                 | je                  0x3e
            //   b802000000           | mov                 eax, 2
            //   68????????           |                     
            //   6689442460           | mov                 word ptr [esp + 0x60], ax

        $sequence_3 = { 660f6f05???????? f30f7f851cfdffff 660f6f05???????? f30f7f852cfdffff 660f6f05???????? f30f7f853cfdffff }
            // n = 6, score = 100
            //   660f6f05????????     |                     
            //   f30f7f851cfdffff     | movdqu              xmmword ptr [ebp - 0x2e4], xmm0
            //   660f6f05????????     |                     
            //   f30f7f852cfdffff     | movdqu              xmmword ptr [ebp - 0x2d4], xmm0
            //   660f6f05????????     |                     
            //   f30f7f853cfdffff     | movdqu              xmmword ptr [ebp - 0x2c4], xmm0

        $sequence_4 = { 0fb6420d c1e108 03c8 0fb6420c }
            // n = 4, score = 100
            //   0fb6420d             | movzx               eax, byte ptr [edx + 0xd]
            //   c1e108               | shl                 ecx, 8
            //   03c8                 | add                 ecx, eax
            //   0fb6420c             | movzx               eax, byte ptr [edx + 0xc]

        $sequence_5 = { f30f7f85acfcffff 660f6f05???????? f30f7f85bcfcffff 660f6f05???????? f30f7f85ccfcffff 660f6f05???????? }
            // n = 6, score = 100
            //   f30f7f85acfcffff     | movdqu              xmmword ptr [ebp - 0x354], xmm0
            //   660f6f05????????     |                     
            //   f30f7f85bcfcffff     | movdqu              xmmword ptr [ebp - 0x344], xmm0
            //   660f6f05????????     |                     
            //   f30f7f85ccfcffff     | movdqu              xmmword ptr [ebp - 0x334], xmm0
            //   660f6f05????????     |                     

        $sequence_6 = { ff36 ffd7 85c0 7575 8d85ecf6ffff }
            // n = 5, score = 100
            //   ff36                 | push                dword ptr [esi]
            //   ffd7                 | call                edi
            //   85c0                 | test                eax, eax
            //   7575                 | jne                 0x77
            //   8d85ecf6ffff         | lea                 eax, [ebp - 0x914]

        $sequence_7 = { 7508 6a11 e8???????? 59 ff34f5508d4100 ff15???????? }
            // n = 6, score = 100
            //   7508                 | jne                 0xa
            //   6a11                 | push                0x11
            //   e8????????           |                     
            //   59                   | pop                 ecx
            //   ff34f5508d4100       | push                dword ptr [esi*8 + 0x418d50]
            //   ff15????????         |                     

        $sequence_8 = { 7549 8d7a10 8bd3 8bcf }
            // n = 4, score = 100
            //   7549                 | jne                 0x4b
            //   8d7a10               | lea                 edi, [edx + 0x10]
            //   8bd3                 | mov                 edx, ebx
            //   8bcf                 | mov                 ecx, edi

        $sequence_9 = { 8bfa 8bf1 e8???????? 8b5f10 83c404 837f1410 }
            // n = 6, score = 100
            //   8bfa                 | mov                 edi, edx
            //   8bf1                 | mov                 esi, ecx
            //   e8????????           |                     
            //   8b5f10               | mov                 ebx, dword ptr [edi + 0x10]
            //   83c404               | add                 esp, 4
            //   837f1410             | cmp                 dword ptr [edi + 0x14], 0x10

    condition:
        7 of them and filesize < 247808
}