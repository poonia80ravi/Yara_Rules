rule win_winmm_auto {

    meta:
        author = "Felix Bilstein - yara-signator at cocacoding dot com"
        date = "2022-10-07"
        version = "1"
        description = "Detects win.winmm."
        info = "autogenerated rule brought to you by yara-signator"
        tool = "yara-signator v0.6.0"
        signator_config = "callsandjumps;datarefs;binvalue"
        malpedia_reference = "https://malpedia.caad.fkie.fraunhofer.de/details/win.winmm"
        malpedia_rule_date = "20221007"
        malpedia_hash = "597f9539014e3d0f350c069cd804aa71679486ae"
        malpedia_version = "20221010"
        malpedia_license = "CC BY-SA 4.0"
        malpedia_sharing = "TLP:WHITE"

    /* DISCLAIMER
     * The strings used in this rule have been automatically selected from the
     * disassembly of memory dumps and unpacked files, using YARA-Signator.
     * The code and documentation is published here:
     * https://github.com/fxb-cocacoding/yara-signator
     * As Malpedia is used as data source, please note that for a given
     * number of families, only single samples are documented.
     * This likely impacts the degree of generalization these rules will offer.
     * Take the described generation method also into consideration when you
     * apply the rules in your use cases and assign them confidence levels.
     */


    strings:
        $sequence_0 = { 83e810 7417 83e810 758a 8b03 83c304 }
            // n = 6, score = 200
            //   83e810               | sub                 eax, 0x10
            //   7417                 | je                  0x19
            //   83e810               | sub                 eax, 0x10
            //   758a                 | jne                 0xffffff8c
            //   8b03                 | mov                 eax, dword ptr [ebx]
            //   83c304               | add                 ebx, 4

        $sequence_1 = { 7416 eb23 83c304 6a20 }
            // n = 4, score = 200
            //   7416                 | je                  0x18
            //   eb23                 | jmp                 0x25
            //   83c304               | add                 ebx, 4
            //   6a20                 | push                0x20

        $sequence_2 = { 56 57 8b703c 03f0 56 e8???????? }
            // n = 6, score = 200
            //   56                   | push                esi
            //   57                   | push                edi
            //   8b703c               | mov                 esi, dword ptr [eax + 0x3c]
            //   03f0                 | add                 esi, eax
            //   56                   | push                esi
            //   e8????????           |                     

        $sequence_3 = { 83c308 bf80000000 8d8538010000 eb2d 83c308 bf80000000 }
            // n = 6, score = 200
            //   83c308               | add                 ebx, 8
            //   bf80000000           | mov                 edi, 0x80
            //   8d8538010000         | lea                 eax, [ebp + 0x138]
            //   eb2d                 | jmp                 0x2f
            //   83c308               | add                 ebx, 8
            //   bf80000000           | mov                 edi, 0x80

        $sequence_4 = { 0f84c2000000 83e811 0f84ee000000 83e80c 0f84e5000000 }
            // n = 5, score = 200
            //   0f84c2000000         | je                  0xc8
            //   83e811               | sub                 eax, 0x11
            //   0f84ee000000         | je                  0xf4
            //   83e80c               | sub                 eax, 0xc
            //   0f84e5000000         | je                  0xeb

        $sequence_5 = { 894608 8bc6 5e c9 c20400 56 }
            // n = 6, score = 200
            //   894608               | mov                 dword ptr [esi + 8], eax
            //   8bc6                 | mov                 eax, esi
            //   5e                   | pop                 esi
            //   c9                   | leave               
            //   c20400               | ret                 4
            //   56                   | push                esi

        $sequence_6 = { 85f6 7418 57 6a02 56 }
            // n = 5, score = 200
            //   85f6                 | test                esi, esi
            //   7418                 | je                  0x1a
            //   57                   | push                edi
            //   6a02                 | push                2
            //   56                   | push                esi

        $sequence_7 = { ff15???????? eb4c 2d73000100 7430 2dd0ff0000 7421 83e810 }
            // n = 7, score = 200
            //   ff15????????         |                     
            //   eb4c                 | jmp                 0x4e
            //   2d73000100           | sub                 eax, 0x10073
            //   7430                 | je                  0x32
            //   2dd0ff0000           | sub                 eax, 0xffd0
            //   7421                 | je                  0x23
            //   83e810               | sub                 eax, 0x10

        $sequence_8 = { 83c304 5f eb27 8b03 }
            // n = 4, score = 200
            //   83c304               | add                 ebx, 4
            //   5f                   | pop                 edi
            //   eb27                 | jmp                 0x29
            //   8b03                 | mov                 eax, dword ptr [ebx]

        $sequence_9 = { 0f8400010000 83e847 0f84c2000000 83e811 }
            // n = 4, score = 200
            //   0f8400010000         | je                  0x106
            //   83e847               | sub                 eax, 0x47
            //   0f84c2000000         | je                  0xc8
            //   83e811               | sub                 eax, 0x11

    condition:
        7 of them and filesize < 278528
}