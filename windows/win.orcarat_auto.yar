rule win_orcarat_auto {

    meta:
        author = "Felix Bilstein - yara-signator at cocacoding dot com"
        date = "2022-10-07"
        version = "1"
        description = "Detects win.orcarat."
        info = "autogenerated rule brought to you by yara-signator"
        tool = "yara-signator v0.6.0"
        signator_config = "callsandjumps;datarefs;binvalue"
        malpedia_reference = "https://malpedia.caad.fkie.fraunhofer.de/details/win.orcarat"
        malpedia_rule_date = "20221007"
        malpedia_hash = "597f9539014e3d0f350c069cd804aa71679486ae"
        malpedia_version = "20221010"
        malpedia_license = "CC BY-SA 4.0"
        malpedia_sharing = "TLP:WHITE"

    /* DISCLAIMER
     * The strings used in this rule have been automatically selected from the
     * disassembly of memory dumps and unpacked files, using YARA-Signator.
     * The code and documentation is published here:
     * https://github.com/fxb-cocacoding/yara-signator
     * As Malpedia is used as data source, please note that for a given
     * number of families, only single samples are documented.
     * This likely impacts the degree of generalization these rules will offer.
     * Take the described generation method also into consideration when you
     * apply the rules in your use cases and assign them confidence levels.
     */


    strings:
        $sequence_0 = { 56 8bf1 57 8bfa 83c9ff 33c0 }
            // n = 6, score = 200
            //   56                   | push                esi
            //   8bf1                 | mov                 esi, ecx
            //   57                   | push                edi
            //   8bfa                 | mov                 edi, edx
            //   83c9ff               | or                  ecx, 0xffffffff
            //   33c0                 | xor                 eax, eax

        $sequence_1 = { 7409 50 ffd6 89bbf4020000 8b83f8020000 3bc7 }
            // n = 6, score = 200
            //   7409                 | je                  0xb
            //   50                   | push                eax
            //   ffd6                 | call                esi
            //   89bbf4020000         | mov                 dword ptr [ebx + 0x2f4], edi
            //   8b83f8020000         | mov                 eax, dword ptr [ebx + 0x2f8]
            //   3bc7                 | cmp                 eax, edi

        $sequence_2 = { f3a5 8bc8 33c0 83e103 6a0a f3a4 bf???????? }
            // n = 7, score = 200
            //   f3a5                 | rep movsd           dword ptr es:[edi], dword ptr [esi]
            //   8bc8                 | mov                 ecx, eax
            //   33c0                 | xor                 eax, eax
            //   83e103               | and                 ecx, 3
            //   6a0a                 | push                0xa
            //   f3a4                 | rep movsb           byte ptr es:[edi], byte ptr [esi]
            //   bf????????           |                     

        $sequence_3 = { f68281b6400004 7403 40 ff01 ff01 40 }
            // n = 6, score = 200
            //   f68281b6400004       | test                byte ptr [edx + 0x40b681], 4
            //   7403                 | je                  5
            //   40                   | inc                 eax
            //   ff01                 | inc                 dword ptr [ecx]
            //   ff01                 | inc                 dword ptr [ecx]
            //   40                   | inc                 eax

        $sequence_4 = { 807c30ff3d 7505 c64430ff32 807c30fe3d 7413 807c30ff3d 750c }
            // n = 7, score = 200
            //   807c30ff3d           | cmp                 byte ptr [eax + esi - 1], 0x3d
            //   7505                 | jne                 7
            //   c64430ff32           | mov                 byte ptr [eax + esi - 1], 0x32
            //   807c30fe3d           | cmp                 byte ptr [eax + esi - 2], 0x3d
            //   7413                 | je                  0x15
            //   807c30ff3d           | cmp                 byte ptr [eax + esi - 1], 0x3d
            //   750c                 | jne                 0xe

        $sequence_5 = { 52 50 a1???????? c744241800080000 8bc8 c1e106 }
            // n = 6, score = 200
            //   52                   | push                edx
            //   50                   | push                eax
            //   a1????????           |                     
            //   c744241800080000     | mov                 dword ptr [esp + 0x18], 0x800
            //   8bc8                 | mov                 ecx, eax
            //   c1e106               | shl                 ecx, 6

        $sequence_6 = { f3a4 8dbc2430140000 83c9ff f2ae f7d1 8bf1 }
            // n = 6, score = 200
            //   f3a4                 | rep movsb           byte ptr es:[edi], byte ptr [esi]
            //   8dbc2430140000       | lea                 edi, [esp + 0x1430]
            //   83c9ff               | or                  ecx, 0xffffffff
            //   f2ae                 | repne scasb         al, byte ptr es:[edi]
            //   f7d1                 | not                 ecx
            //   8bf1                 | mov                 esi, ecx

        $sequence_7 = { 55 55 55 50 68???????? ff15???????? }
            // n = 6, score = 200
            //   55                   | push                ebp
            //   55                   | push                ebp
            //   55                   | push                ebp
            //   50                   | push                eax
            //   68????????           |                     
            //   ff15????????         |                     

        $sequence_8 = { ff15???????? 8d8db4020000 6a0a 51 50 }
            // n = 5, score = 200
            //   ff15????????         |                     
            //   8d8db4020000         | lea                 ecx, [ebp + 0x2b4]
            //   6a0a                 | push                0xa
            //   51                   | push                ecx
            //   50                   | push                eax

        $sequence_9 = { 51 833900 7414 8b511c 8d4108 }
            // n = 5, score = 200
            //   51                   | push                ecx
            //   833900               | cmp                 dword ptr [ecx], 0
            //   7414                 | je                  0x16
            //   8b511c               | mov                 edx, dword ptr [ecx + 0x1c]
            //   8d4108               | lea                 eax, [ecx + 8]

    condition:
        7 of them and filesize < 114688
}