rule win_metadatabin_auto {

    meta:
        author = "Felix Bilstein - yara-signator at cocacoding dot com"
        date = "2022-10-07"
        version = "1"
        description = "Detects win.metadatabin."
        info = "autogenerated rule brought to you by yara-signator"
        tool = "yara-signator v0.6.0"
        signator_config = "callsandjumps;datarefs;binvalue"
        malpedia_reference = "https://malpedia.caad.fkie.fraunhofer.de/details/win.metadatabin"
        malpedia_rule_date = "20221007"
        malpedia_hash = "597f9539014e3d0f350c069cd804aa71679486ae"
        malpedia_version = "20221010"
        malpedia_license = "CC BY-SA 4.0"
        malpedia_sharing = "TLP:WHITE"

    /* DISCLAIMER
     * The strings used in this rule have been automatically selected from the
     * disassembly of memory dumps and unpacked files, using YARA-Signator.
     * The code and documentation is published here:
     * https://github.com/fxb-cocacoding/yara-signator
     * As Malpedia is used as data source, please note that for a given
     * number of families, only single samples are documented.
     * This likely impacts the degree of generalization these rules will offer.
     * Take the described generation method also into consideration when you
     * apply the rules in your use cases and assign them confidence levels.
     */


    strings:
        $sequence_0 = { 89ce 0f85e2000000 83fa01 18c0 3cff 0f850d010000 e9???????? }
            // n = 7, score = 100
            //   89ce                 | mov                 esi, ecx
            //   0f85e2000000         | jne                 0xe8
            //   83fa01               | cmp                 edx, 1
            //   18c0                 | sbb                 al, al
            //   3cff                 | cmp                 al, 0xff
            //   0f850d010000         | jne                 0x113
            //   e9????????           |                     

        $sequence_1 = { 8b442424 11f1 8b742418 0f92c3 f7e7 8b7c242c 01c8 }
            // n = 7, score = 100
            //   8b442424             | mov                 eax, dword ptr [esp + 0x24]
            //   11f1                 | adc                 ecx, esi
            //   8b742418             | mov                 esi, dword ptr [esp + 0x18]
            //   0f92c3               | setb                bl
            //   f7e7                 | mul                 edi
            //   8b7c242c             | mov                 edi, dword ptr [esp + 0x2c]
            //   01c8                 | add                 eax, ecx

        $sequence_2 = { 56 81ec98000000 89c8 beb8ffffff c745ac00000000 0f1f8000000000 0fb64c3248 }
            // n = 7, score = 100
            //   56                   | push                esi
            //   81ec98000000         | sub                 esp, 0x98
            //   89c8                 | mov                 eax, ecx
            //   beb8ffffff           | mov                 esi, 0xffffffb8
            //   c745ac00000000       | mov                 dword ptr [ebp - 0x54], 0
            //   0f1f8000000000       | nop                 dword ptr [eax]
            //   0fb64c3248           | movzx               ecx, byte ptr [edx + esi + 0x48]

        $sequence_3 = { f20f1055cc f20f114f10 f20f104dd4 f20f114718 f20f1117 f20f114f08 0fb65708 }
            // n = 7, score = 100
            //   f20f1055cc           | movsd               xmm2, qword ptr [ebp - 0x34]
            //   f20f114f10           | movsd               qword ptr [edi + 0x10], xmm1
            //   f20f104dd4           | movsd               xmm1, qword ptr [ebp - 0x2c]
            //   f20f114718           | movsd               qword ptr [edi + 0x18], xmm0
            //   f20f1117             | movsd               qword ptr [edi], xmm2
            //   f20f114f08           | movsd               qword ptr [edi + 8], xmm1
            //   0fb65708             | movzx               edx, byte ptr [edi + 8]

        $sequence_4 = { e8???????? 83c404 0f0b 0f1f840000000000 55 89e5 50 }
            // n = 7, score = 100
            //   e8????????           |                     
            //   83c404               | add                 esp, 4
            //   0f0b                 | ud2                 
            //   0f1f840000000000     | nop                 dword ptr [eax + eax]
            //   55                   | push                ebp
            //   89e5                 | mov                 ebp, esp
            //   50                   | push                eax

        $sequence_5 = { 8b8c2420020000 89842490020000 0fb6c3 11c2 89942418020000 89c8 f7e6 }
            // n = 7, score = 100
            //   8b8c2420020000       | mov                 ecx, dword ptr [esp + 0x220]
            //   89842490020000       | mov                 dword ptr [esp + 0x290], eax
            //   0fb6c3               | movzx               eax, bl
            //   11c2                 | adc                 edx, eax
            //   89942418020000       | mov                 dword ptr [esp + 0x218], edx
            //   89c8                 | mov                 eax, ecx
            //   f7e6                 | mul                 esi

        $sequence_6 = { 89e5 8b4d08 8b450c 8b11 c60201 8b4904 8b5104 }
            // n = 7, score = 100
            //   89e5                 | mov                 ebp, esp
            //   8b4d08               | mov                 ecx, dword ptr [ebp + 8]
            //   8b450c               | mov                 eax, dword ptr [ebp + 0xc]
            //   8b11                 | mov                 edx, dword ptr [ecx]
            //   c60201               | mov                 byte ptr [edx], 1
            //   8b4904               | mov                 ecx, dword ptr [ecx + 4]
            //   8b5104               | mov                 edx, dword ptr [ecx + 4]

        $sequence_7 = { 8b1b 85db 7417 53 e8???????? e8???????? 53 }
            // n = 7, score = 100
            //   8b1b                 | mov                 ebx, dword ptr [ebx]
            //   85db                 | test                ebx, ebx
            //   7417                 | je                  0x19
            //   53                   | push                ebx
            //   e8????????           |                     
            //   e8????????           |                     
            //   53                   | push                ebx

        $sequence_8 = { f20f114634 f20f10442440 f20f11463c f20f10442448 f20f114644 8b442450 89464c }
            // n = 7, score = 100
            //   f20f114634           | movsd               qword ptr [esi + 0x34], xmm0
            //   f20f10442440         | movsd               xmm0, qword ptr [esp + 0x40]
            //   f20f11463c           | movsd               qword ptr [esi + 0x3c], xmm0
            //   f20f10442448         | movsd               xmm0, qword ptr [esp + 0x48]
            //   f20f114644           | movsd               qword ptr [esi + 0x44], xmm0
            //   8b442450             | mov                 eax, dword ptr [esp + 0x50]
            //   89464c               | mov                 dword ptr [esi + 0x4c], eax

        $sequence_9 = { 8b461c ff7618 ff500c 83c404 f0ff4ef8 7508 8d4df8 }
            // n = 7, score = 100
            //   8b461c               | mov                 eax, dword ptr [esi + 0x1c]
            //   ff7618               | push                dword ptr [esi + 0x18]
            //   ff500c               | call                dword ptr [eax + 0xc]
            //   83c404               | add                 esp, 4
            //   f0ff4ef8             | lock dec            dword ptr [esi - 8]
            //   7508                 | jne                 0xa
            //   8d4df8               | lea                 ecx, [ebp - 8]

    condition:
        7 of them and filesize < 1263616
}