rule win_oddjob_auto {

    meta:
        author = "Felix Bilstein - yara-signator at cocacoding dot com"
        date = "2022-10-07"
        version = "1"
        description = "Detects win.oddjob."
        info = "autogenerated rule brought to you by yara-signator"
        tool = "yara-signator v0.6.0"
        signator_config = "callsandjumps;datarefs;binvalue"
        malpedia_reference = "https://malpedia.caad.fkie.fraunhofer.de/details/win.oddjob"
        malpedia_rule_date = "20221007"
        malpedia_hash = "597f9539014e3d0f350c069cd804aa71679486ae"
        malpedia_version = "20221010"
        malpedia_license = "CC BY-SA 4.0"
        malpedia_sharing = "TLP:WHITE"

    /* DISCLAIMER
     * The strings used in this rule have been automatically selected from the
     * disassembly of memory dumps and unpacked files, using YARA-Signator.
     * The code and documentation is published here:
     * https://github.com/fxb-cocacoding/yara-signator
     * As Malpedia is used as data source, please note that for a given
     * number of families, only single samples are documented.
     * This likely impacts the degree of generalization these rules will offer.
     * Take the described generation method also into consideration when you
     * apply the rules in your use cases and assign them confidence levels.
     */


    strings:
        $sequence_0 = { c6851efaffff53 c6851ffaffff8b c68520faffff5c c68521faffff24 c68522faffff08 }
            // n = 5, score = 100
            //   c6851efaffff53       | mov                 byte ptr [ebp - 0x5e2], 0x53
            //   c6851ffaffff8b       | mov                 byte ptr [ebp - 0x5e1], 0x8b
            //   c68520faffff5c       | mov                 byte ptr [ebp - 0x5e0], 0x5c
            //   c68521faffff24       | mov                 byte ptr [ebp - 0x5df], 0x24
            //   c68522faffff08       | mov                 byte ptr [ebp - 0x5de], 8

        $sequence_1 = { 59 59 397df8 72a5 8b4d10 8b450c }
            // n = 6, score = 100
            //   59                   | pop                 ecx
            //   59                   | pop                 ecx
            //   397df8               | cmp                 dword ptr [ebp - 8], edi
            //   72a5                 | jb                  0xffffffa7
            //   8b4d10               | mov                 ecx, dword ptr [ebp + 0x10]
            //   8b450c               | mov                 eax, dword ptr [ebp + 0xc]

        $sequence_2 = { c685f7fcffff83 c685f8fcffff8a 889df9fcffff 889dfafcffff 889dfbfcffff c685fcfcffff5b c685fdfcffff53 }
            // n = 7, score = 100
            //   c685f7fcffff83       | mov                 byte ptr [ebp - 0x309], 0x83
            //   c685f8fcffff8a       | mov                 byte ptr [ebp - 0x308], 0x8a
            //   889df9fcffff         | mov                 byte ptr [ebp - 0x307], bl
            //   889dfafcffff         | mov                 byte ptr [ebp - 0x306], bl
            //   889dfbfcffff         | mov                 byte ptr [ebp - 0x305], bl
            //   c685fcfcffff5b       | mov                 byte ptr [ebp - 0x304], 0x5b
            //   c685fdfcffff53       | mov                 byte ptr [ebp - 0x303], 0x53

        $sequence_3 = { 89460c b8ffff0000 e9???????? 8b4d0c 83f9ff 741b }
            // n = 6, score = 100
            //   89460c               | mov                 dword ptr [esi + 0xc], eax
            //   b8ffff0000           | mov                 eax, 0xffff
            //   e9????????           |                     
            //   8b4d0c               | mov                 ecx, dword ptr [ebp + 0xc]
            //   83f9ff               | cmp                 ecx, -1
            //   741b                 | je                  0x1d

        $sequence_4 = { 2145fc 837dfc00 0f84d4000000 6a43 e8???????? 8bf0 59 }
            // n = 7, score = 100
            //   2145fc               | and                 dword ptr [ebp - 4], eax
            //   837dfc00             | cmp                 dword ptr [ebp - 4], 0
            //   0f84d4000000         | je                  0xda
            //   6a43                 | push                0x43
            //   e8????????           |                     
            //   8bf0                 | mov                 esi, eax
            //   59                   | pop                 ecx

        $sequence_5 = { 399d8894ffff 740c ffb58894ffff e8???????? 59 399d7894ffff 740c }
            // n = 7, score = 100
            //   399d8894ffff         | cmp                 dword ptr [ebp - 0x6b78], ebx
            //   740c                 | je                  0xe
            //   ffb58894ffff         | push                dword ptr [ebp - 0x6b78]
            //   e8????????           |                     
            //   59                   | pop                 ecx
            //   399d7894ffff         | cmp                 dword ptr [ebp - 0x6b88], ebx
            //   740c                 | je                  0xe

        $sequence_6 = { c68539ffffff75 c6853afffffffa c6853bffffff31 c6853cffffffc0 c6853dffffffb9 c6853effffff2c }
            // n = 6, score = 100
            //   c68539ffffff75       | mov                 byte ptr [ebp - 0xc7], 0x75
            //   c6853afffffffa       | mov                 byte ptr [ebp - 0xc6], 0xfa
            //   c6853bffffff31       | mov                 byte ptr [ebp - 0xc5], 0x31
            //   c6853cffffffc0       | mov                 byte ptr [ebp - 0xc4], 0xc0
            //   c6853dffffffb9       | mov                 byte ptr [ebp - 0xc3], 0xb9
            //   c6853effffff2c       | mov                 byte ptr [ebp - 0xc2], 0x2c

        $sequence_7 = { 889d89f9ffff 889d8af9ffff c6858bf9ffff6a c6858cf9ffff40 c6858df9ffff68 889d8ef9ffff c6858ff9ffff20 }
            // n = 7, score = 100
            //   889d89f9ffff         | mov                 byte ptr [ebp - 0x677], bl
            //   889d8af9ffff         | mov                 byte ptr [ebp - 0x676], bl
            //   c6858bf9ffff6a       | mov                 byte ptr [ebp - 0x675], 0x6a
            //   c6858cf9ffff40       | mov                 byte ptr [ebp - 0x674], 0x40
            //   c6858df9ffff68       | mov                 byte ptr [ebp - 0x673], 0x68
            //   889d8ef9ffff         | mov                 byte ptr [ebp - 0x672], bl
            //   c6858ff9ffff20       | mov                 byte ptr [ebp - 0x671], 0x20

        $sequence_8 = { c6856afcffff10 c6856bfcffff01 c6856cfcffffd3 c6856dfcffff89 c6856efcffffde c6856ffcffff8b c68570fcffff03 }
            // n = 7, score = 100
            //   c6856afcffff10       | mov                 byte ptr [ebp - 0x396], 0x10
            //   c6856bfcffff01       | mov                 byte ptr [ebp - 0x395], 1
            //   c6856cfcffffd3       | mov                 byte ptr [ebp - 0x394], 0xd3
            //   c6856dfcffff89       | mov                 byte ptr [ebp - 0x393], 0x89
            //   c6856efcffffde       | mov                 byte ptr [ebp - 0x392], 0xde
            //   c6856ffcffff8b       | mov                 byte ptr [ebp - 0x391], 0x8b
            //   c68570fcffff03       | mov                 byte ptr [ebp - 0x390], 3

        $sequence_9 = { 2bc2 d1f8 03c0 50 ffb5c4f7ffff ffb5c8f7ffff e8???????? }
            // n = 7, score = 100
            //   2bc2                 | sub                 eax, edx
            //   d1f8                 | sar                 eax, 1
            //   03c0                 | add                 eax, eax
            //   50                   | push                eax
            //   ffb5c4f7ffff         | push                dword ptr [ebp - 0x83c]
            //   ffb5c8f7ffff         | push                dword ptr [ebp - 0x838]
            //   e8????????           |                     

    condition:
        7 of them and filesize < 221184
}