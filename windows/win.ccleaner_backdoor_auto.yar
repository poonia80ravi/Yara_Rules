rule win_ccleaner_backdoor_auto {

    meta:
        author = "Felix Bilstein - yara-signator at cocacoding dot com"
        date = "2022-10-07"
        version = "1"
        description = "Detects win.ccleaner_backdoor."
        info = "autogenerated rule brought to you by yara-signator"
        tool = "yara-signator v0.6.0"
        signator_config = "callsandjumps;datarefs;binvalue"
        malpedia_reference = "https://malpedia.caad.fkie.fraunhofer.de/details/win.ccleaner_backdoor"
        malpedia_rule_date = "20221007"
        malpedia_hash = "597f9539014e3d0f350c069cd804aa71679486ae"
        malpedia_version = "20221010"
        malpedia_license = "CC BY-SA 4.0"
        malpedia_sharing = "TLP:WHITE"

    /* DISCLAIMER
     * The strings used in this rule have been automatically selected from the
     * disassembly of memory dumps and unpacked files, using YARA-Signator.
     * The code and documentation is published here:
     * https://github.com/fxb-cocacoding/yara-signator
     * As Malpedia is used as data source, please note that for a given
     * number of families, only single samples are documented.
     * This likely impacts the degree of generalization these rules will offer.
     * Take the described generation method also into consideration when you
     * apply the rules in your use cases and assign them confidence levels.
     */


    strings:
        $sequence_0 = { 750a b857000780 e9???????? e8???????? }
            // n = 4, score = 200
            //   750a                 | jne                 0xc
            //   b857000780           | mov                 eax, 0x80070057
            //   e9????????           |                     
            //   e8????????           |                     

        $sequence_1 = { ffd6 50 ff15???????? 8b3d???????? 59 ffd7 }
            // n = 6, score = 200
            //   ffd6                 | call                esi
            //   50                   | push                eax
            //   ff15????????         |                     
            //   8b3d????????         |                     
            //   59                   | pop                 ecx
            //   ffd7                 | call                edi

        $sequence_2 = { 03c6 4863d0 4c8d0c12 4c8d4718 }
            // n = 4, score = 100
            //   03c6                 | int3                
            //   4863d0               | dec                 eax
            //   4c8d0c12             | mov                 dword ptr [esp + 8], ebx
            //   4c8d4718             | push                edi

        $sequence_3 = { 03c6 85c0 7f09 488b0a 488b01 ff5008 488b4b28 }
            // n = 7, score = 100
            //   03c6                 | mov                 eax, esp
            //   85c0                 | add                 eax, eax
            //   7f09                 | mov                 dword ptr [ebx + 0x40], eax
            //   488b0a               | mov                 esi, dword ptr [ebx + 0x40]
            //   488b01               | inc                 ecx
            //   ff5008               | mov                 eax, esp
            //   488b4b28             | dec                 eax

        $sequence_4 = { 8802 48 03d5 48 83f902 0f86ccfdffff 41 }
            // n = 7, score = 100
            //   8802                 | mov                 byte ptr [edx], al
            //   48                   | dec                 eax
            //   03d5                 | add                 edx, ebp
            //   48                   | dec                 eax
            //   83f902               | cmp                 ecx, 2
            //   0f86ccfdffff         | jbe                 0xfffffdd2
            //   41                   | inc                 ecx

        $sequence_5 = { 8acb c0f904 80e103 c0e002 0ac8 880f }
            // n = 6, score = 100
            //   8acb                 | mov                 cl, bl
            //   c0f904               | sar                 cl, 4
            //   80e103               | and                 cl, 3
            //   c0e002               | shl                 al, 2
            //   0ac8                 | or                  cl, al
            //   880f                 | mov                 byte ptr [edi], cl

        $sequence_6 = { 03c0 894340 8b7340 418bc4 }
            // n = 4, score = 100
            //   03c0                 | add                 dword ptr [esi + 0xc], eax
            //   894340               | dec                 eax
            //   8b7340               | mov                 edi, dword ptr [edi]
            //   418bc4               | dec                 ecx

        $sequence_7 = { 50 ff15???????? 0fb745f0 0fb74df2 69c010270000 03c1 }
            // n = 6, score = 100
            //   50                   | push                eax
            //   ff15????????         |                     
            //   0fb745f0             | movzx               eax, word ptr [ebp - 0x10]
            //   0fb74df2             | movzx               ecx, word ptr [ebp - 0xe]
            //   69c010270000         | imul                eax, eax, 0x2710
            //   03c1                 | add                 eax, ecx

        $sequence_8 = { 01442418 03c8 8954242c 8b542470 }
            // n = 4, score = 100
            //   01442418             | dec                 eax
            //   03c8                 | mov                 edx, dword ptr [ebx + 0x48]
            //   8954242c             | add                 eax, esi
            //   8b542470             | test                eax, eax

        $sequence_9 = { 4c 8bca 0f82f9000000 41 8ac0 }
            // n = 5, score = 100
            //   4c                   | dec                 esp
            //   8bca                 | mov                 ecx, edx
            //   0f82f9000000         | jb                  0xff
            //   41                   | inc                 ecx
            //   8ac0                 | mov                 al, al

        $sequence_10 = { 727d 41 8a02 4c }
            // n = 4, score = 100
            //   727d                 | jb                  0x7f
            //   41                   | inc                 ecx
            //   8a02                 | mov                 al, byte ptr [edx]
            //   4c                   | dec                 esp

        $sequence_11 = { 00cc cc 4057 4883ec50 4533db }
            // n = 5, score = 100
            //   00cc                 | add                 ah, cl
            //   cc                   | int3                
            //   4057                 | inc                 eax
            //   4883ec50             | push                edi
            //   4533db               | dec                 eax

        $sequence_12 = { 03d5 8802 48 03d5 4c 3bcd }
            // n = 6, score = 100
            //   03d5                 | add                 edx, ebp
            //   8802                 | mov                 byte ptr [edx], al
            //   48                   | dec                 eax
            //   03d5                 | add                 edx, ebp
            //   4c                   | dec                 esp
            //   3bcd                 | cmp                 ecx, ebp

        $sequence_13 = { 01cc cc 48895c2408 57 }
            // n = 4, score = 100
            //   01cc                 | lock xadd           dword ptr [edx + 0x10], eax
            //   cc                   | add                 dword ptr [esi + 0xc], eax
            //   48895c2408           | dec                 eax
            //   57                   | mov                 edi, dword ptr [edi]

        $sequence_14 = { 013d???????? 8b04b5d8970210 0500080000 3bc8 }
            // n = 4, score = 100
            //   013d????????         |                     
            //   8b04b5d8970210       | lea                 ecx, [ebx + 0x18]
            //   0500080000           | add                 eax, esi
            //   3bc8                 | dec                 eax

        $sequence_15 = { ab 8d7de8 895de4 ab ab ab }
            // n = 6, score = 100
            //   ab                   | stosd               dword ptr es:[edi], eax
            //   8d7de8               | lea                 edi, [ebp - 0x18]
            //   895de4               | mov                 dword ptr [ebp - 0x1c], ebx
            //   ab                   | stosd               dword ptr es:[edi], eax
            //   ab                   | stosd               dword ptr es:[edi], eax
            //   ab                   | stosd               dword ptr es:[edi], eax

        $sequence_16 = { 013e 33c0 8b16 83c410 }
            // n = 4, score = 100
            //   013e                 | mov                 eax, dword ptr [ecx]
            //   33c0                 | call                dword ptr [eax + 8]
            //   8b16                 | dec                 eax
            //   83c410               | mov                 ecx, dword ptr [ebx + 0x28]

        $sequence_17 = { e8???????? 59 8d85c8feffff 59 68000000a0 6aff 50 }
            // n = 7, score = 100
            //   e8????????           |                     
            //   59                   | pop                 ecx
            //   8d85c8feffff         | lea                 eax, [ebp - 0x138]
            //   59                   | pop                 ecx
            //   68000000a0           | push                0xa0000000
            //   6aff                 | push                -1
            //   50                   | push                eax

        $sequence_18 = { c745f415000000 ffd3 6a08 68???????? 68???????? }
            // n = 5, score = 100
            //   c745f415000000       | mov                 dword ptr [ebp - 0xc], 0x15
            //   ffd3                 | call                ebx
            //   6a08                 | push                8
            //   68????????           |                     
            //   68????????           |                     

        $sequence_19 = { f7d8 1bc0 8d8de0feffff 40 ba00010000 }
            // n = 5, score = 100
            //   f7d8                 | neg                 eax
            //   1bc0                 | sbb                 eax, eax
            //   8d8de0feffff         | lea                 ecx, [ebp - 0x120]
            //   40                   | inc                 eax
            //   ba00010000           | mov                 edx, 0x100

        $sequence_20 = { 8a11 305103 8b480c 8b4904 8a5101 305102 }
            // n = 6, score = 100
            //   8a11                 | mov                 dl, byte ptr [ecx]
            //   305103               | xor                 byte ptr [ecx + 3], dl
            //   8b480c               | mov                 ecx, dword ptr [eax + 0xc]
            //   8b4904               | mov                 ecx, dword ptr [ecx + 4]
            //   8a5101               | mov                 dl, byte ptr [ecx + 1]
            //   305102               | xor                 byte ptr [ecx + 2], dl

        $sequence_21 = { 01442424 eb30 8b4508 897518 }
            // n = 4, score = 100
            //   01442424             | xor                 eax, eax
            //   eb30                 | pop                 edi
            //   8b4508               | pop                 esi
            //   897518               | pop                 ebp

        $sequence_22 = { 00cc cc 4883ec28 488b11 }
            // n = 4, score = 100
            //   00cc                 | add                 ah, cl
            //   cc                   | int3                
            //   4883ec28             | inc                 eax
            //   488b11               | push                edi

        $sequence_23 = { 01442454 03d1 294c2450 8b4c2410 }
            // n = 4, score = 100
            //   01442454             | cmp                 ecx, eax
            //   03d1                 | jae                 0x2d
            //   294c2450             | mov                 eax, dword ptr [esi*4 + 0x100297d8]
            //   8b4c2410             | add                 eax, 0x800

        $sequence_24 = { 012e 33c0 5f 5e 5d }
            // n = 5, score = 100
            //   012e                 | dec                 eax
            //   33c0                 | arpl                ax, dx
            //   5f                   | dec                 esp
            //   5e                   | lea                 ecx, [edx + edx]
            //   5d                   | dec                 esp

        $sequence_25 = { 48 63c8 41 8ac0 49 }
            // n = 5, score = 100
            //   48                   | dec                 eax
            //   63c8                 | arpl                ax, cx
            //   41                   | inc                 ecx
            //   8ac0                 | mov                 al, al
            //   49                   | dec                 ecx

        $sequence_26 = { 01461c 8b542424 85d2 7405 }
            // n = 4, score = 100
            //   01461c               | add                 dword ptr [esi], edi
            //   8b542424             | xor                 eax, eax
            //   85d2                 | mov                 edx, dword ptr [esi]
            //   7405                 | add                 esp, 0x10

        $sequence_27 = { 8d85e0feffff 6a18 50 c785e0feffff0647bf40 c785e4feffff7c2dc886 c785e8feffff1ae3f680 }
            // n = 6, score = 100
            //   8d85e0feffff         | lea                 eax, [ebp - 0x120]
            //   6a18                 | push                0x18
            //   50                   | push                eax
            //   c785e0feffff0647bf40     | mov    dword ptr [ebp - 0x120], 0x40bf4706
            //   c785e4feffff7c2dc886     | mov    dword ptr [ebp - 0x11c], 0x86c82d7c
            //   c785e8feffff1ae3f680     | mov    dword ptr [ebp - 0x118], 0x80f6e31a

        $sequence_28 = { 01460c 488b3f 493bfc 0f8554ffffff }
            // n = 4, score = 100
            //   01460c               | dec                 eax
            //   488b3f               | mov                 edx, dword ptr [ecx]
            //   493bfc               | dec                 eax
            //   0f8554ffffff         | sub                 edx, 0x18

        $sequence_29 = { 83e01f 752b eb06 4d 03c6 }
            // n = 5, score = 100
            //   83e01f               | and                 eax, 0x1f
            //   752b                 | jne                 0x2d
            //   eb06                 | jmp                 8
            //   4d                   | dec                 ebp
            //   03c6                 | add                 eax, esi

    condition:
        7 of them and filesize < 377856
}