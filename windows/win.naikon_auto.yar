rule win_naikon_auto {

    meta:
        author = "Felix Bilstein - yara-signator at cocacoding dot com"
        date = "2022-10-07"
        version = "1"
        description = "Detects win.naikon."
        info = "autogenerated rule brought to you by yara-signator"
        tool = "yara-signator v0.6.0"
        signator_config = "callsandjumps;datarefs;binvalue"
        malpedia_reference = "https://malpedia.caad.fkie.fraunhofer.de/details/win.naikon"
        malpedia_rule_date = "20221007"
        malpedia_hash = "597f9539014e3d0f350c069cd804aa71679486ae"
        malpedia_version = "20221010"
        malpedia_license = "CC BY-SA 4.0"
        malpedia_sharing = "TLP:WHITE"

    /* DISCLAIMER
     * The strings used in this rule have been automatically selected from the
     * disassembly of memory dumps and unpacked files, using YARA-Signator.
     * The code and documentation is published here:
     * https://github.com/fxb-cocacoding/yara-signator
     * As Malpedia is used as data source, please note that for a given
     * number of families, only single samples are documented.
     * This likely impacts the degree of generalization these rules will offer.
     * Take the described generation method also into consideration when you
     * apply the rules in your use cases and assign them confidence levels.
     */


    strings:
        $sequence_0 = { 8bce e8???????? 8b4608 8b0e 8a5508 881408 }
            // n = 6, score = 200
            //   8bce                 | mov                 ecx, esi
            //   e8????????           |                     
            //   8b4608               | mov                 eax, dword ptr [esi + 8]
            //   8b0e                 | mov                 ecx, dword ptr [esi]
            //   8a5508               | mov                 dl, byte ptr [ebp + 8]
            //   881408               | mov                 byte ptr [eax + ecx], dl

        $sequence_1 = { 8d45fc 50 56 8d45d0 56 50 8b4508 }
            // n = 7, score = 200
            //   8d45fc               | lea                 eax, [ebp - 4]
            //   50                   | push                eax
            //   56                   | push                esi
            //   8d45d0               | lea                 eax, [ebp - 0x30]
            //   56                   | push                esi
            //   50                   | push                eax
            //   8b4508               | mov                 eax, dword ptr [ebp + 8]

        $sequence_2 = { 7627 8b4508 808405dcf9ffff05 ff4508 8d8405dcf9ffff 8d85dcf9ffff 50 }
            // n = 7, score = 200
            //   7627                 | jbe                 0x29
            //   8b4508               | mov                 eax, dword ptr [ebp + 8]
            //   808405dcf9ffff05     | add                 byte ptr [ebp + eax - 0x624], 5
            //   ff4508               | inc                 dword ptr [ebp + 8]
            //   8d8405dcf9ffff       | lea                 eax, [ebp + eax - 0x624]
            //   8d85dcf9ffff         | lea                 eax, [ebp - 0x624]
            //   50                   | push                eax

        $sequence_3 = { 8b4d08 881c08 8d4405c9 50 e8???????? 59 }
            // n = 6, score = 200
            //   8b4d08               | mov                 ecx, dword ptr [ebp + 8]
            //   881c08               | mov                 byte ptr [eax + ecx], bl
            //   8d4405c9             | lea                 eax, [ebp + eax - 0x37]
            //   50                   | push                eax
            //   e8????????           |                     
            //   59                   | pop                 ecx

        $sequence_4 = { 66c745fe0100 e8???????? 83f8ff 0f95c0 5f 5e }
            // n = 6, score = 200
            //   66c745fe0100         | mov                 word ptr [ebp - 2], 1
            //   e8????????           |                     
            //   83f8ff               | cmp                 eax, -1
            //   0f95c0               | setne               al
            //   5f                   | pop                 edi
            //   5e                   | pop                 esi

        $sequence_5 = { c1f905 8d04c0 8b0c8d20320110 8a448104 83e040 c3 }
            // n = 6, score = 200
            //   c1f905               | sar                 ecx, 5
            //   8d04c0               | lea                 eax, [eax + eax*8]
            //   8b0c8d20320110       | mov                 ecx, dword ptr [ecx*4 + 0x10013220]
            //   8a448104             | mov                 al, byte ptr [ecx + eax*4 + 4]
            //   83e040               | and                 eax, 0x40
            //   c3                   | ret                 

        $sequence_6 = { 8d85e8fdffff 56 50 8d8718020000 50 e8???????? }
            // n = 6, score = 200
            //   8d85e8fdffff         | lea                 eax, [ebp - 0x218]
            //   56                   | push                esi
            //   50                   | push                eax
            //   8d8718020000         | lea                 eax, [edi + 0x218]
            //   50                   | push                eax
            //   e8????????           |                     

        $sequence_7 = { 68???????? eb15 3d80000000 6a0a }
            // n = 4, score = 200
            //   68????????           |                     
            //   eb15                 | jmp                 0x17
            //   3d80000000           | cmp                 eax, 0x80
            //   6a0a                 | push                0xa

        $sequence_8 = { 50 c745cc01010000 668975d0 ff15???????? 8d8598fdffff 68???????? 50 }
            // n = 7, score = 200
            //   50                   | push                eax
            //   c745cc01010000       | mov                 dword ptr [ebp - 0x34], 0x101
            //   668975d0             | mov                 word ptr [ebp - 0x30], si
            //   ff15????????         |                     
            //   8d8598fdffff         | lea                 eax, [ebp - 0x268]
            //   68????????           |                     
            //   50                   | push                eax

        $sequence_9 = { e8???????? 83c42c 5f 5e c3 55 8bec }
            // n = 7, score = 200
            //   e8????????           |                     
            //   83c42c               | add                 esp, 0x2c
            //   5f                   | pop                 edi
            //   5e                   | pop                 esi
            //   c3                   | ret                 
            //   55                   | push                ebp
            //   8bec                 | mov                 ebp, esp

    condition:
        7 of them and filesize < 188416
}