rule win_breach_rat_auto {

    meta:
        author = "Felix Bilstein - yara-signator at cocacoding dot com"
        date = "2022-10-07"
        version = "1"
        description = "Detects win.breach_rat."
        info = "autogenerated rule brought to you by yara-signator"
        tool = "yara-signator v0.6.0"
        signator_config = "callsandjumps;datarefs;binvalue"
        malpedia_reference = "https://malpedia.caad.fkie.fraunhofer.de/details/win.breach_rat"
        malpedia_rule_date = "20221007"
        malpedia_hash = "597f9539014e3d0f350c069cd804aa71679486ae"
        malpedia_version = "20221010"
        malpedia_license = "CC BY-SA 4.0"
        malpedia_sharing = "TLP:WHITE"

    /* DISCLAIMER
     * The strings used in this rule have been automatically selected from the
     * disassembly of memory dumps and unpacked files, using YARA-Signator.
     * The code and documentation is published here:
     * https://github.com/fxb-cocacoding/yara-signator
     * As Malpedia is used as data source, please note that for a given
     * number of families, only single samples are documented.
     * This likely impacts the degree of generalization these rules will offer.
     * Take the described generation method also into consideration when you
     * apply the rules in your use cases and assign them confidence levels.
     */


    strings:
        $sequence_0 = { 8b450c 8d4c2418 33db 3918 0f95c3 e8???????? 8bc3 }
            // n = 7, score = 200
            //   8b450c               | mov                 eax, dword ptr [ebp + 0xc]
            //   8d4c2418             | lea                 ecx, [esp + 0x18]
            //   33db                 | xor                 ebx, ebx
            //   3918                 | cmp                 dword ptr [eax], ebx
            //   0f95c3               | setne               bl
            //   e8????????           |                     
            //   8bc3                 | mov                 eax, ebx

        $sequence_1 = { 83e71f c1e706 8b049df88c4400 0fbe443804 83e001 750d e8???????? }
            // n = 7, score = 200
            //   83e71f               | and                 edi, 0x1f
            //   c1e706               | shl                 edi, 6
            //   8b049df88c4400       | mov                 eax, dword ptr [ebx*4 + 0x448cf8]
            //   0fbe443804           | movsx               eax, byte ptr [eax + edi + 4]
            //   83e001               | and                 eax, 1
            //   750d                 | jne                 0xf
            //   e8????????           |                     

        $sequence_2 = { 8d7f08 8b048d58eb4100 ffe0 f7c703000000 7515 }
            // n = 5, score = 200
            //   8d7f08               | lea                 edi, [edi + 8]
            //   8b048d58eb4100       | mov                 eax, dword ptr [ecx*4 + 0x41eb58]
            //   ffe0                 | jmp                 eax
            //   f7c703000000         | test                edi, 3
            //   7515                 | jne                 0x17

        $sequence_3 = { 33ff c745e80f000000 8975e4 c645d400 53 50 8d4dd4 }
            // n = 7, score = 200
            //   33ff                 | xor                 edi, edi
            //   c745e80f000000       | mov                 dword ptr [ebp - 0x18], 0xf
            //   8975e4               | mov                 dword ptr [ebp - 0x1c], esi
            //   c645d400             | mov                 byte ptr [ebp - 0x2c], 0
            //   53                   | push                ebx
            //   50                   | push                eax
            //   8d4dd4               | lea                 ecx, [ebp - 0x2c]

        $sequence_4 = { e8???????? 8d8d44f5ffff c745fcffffffff e8???????? 68???????? 8d8d14f5ffff e8???????? }
            // n = 7, score = 200
            //   e8????????           |                     
            //   8d8d44f5ffff         | lea                 ecx, [ebp - 0xabc]
            //   c745fcffffffff       | mov                 dword ptr [ebp - 4], 0xffffffff
            //   e8????????           |                     
            //   68????????           |                     
            //   8d8d14f5ffff         | lea                 ecx, [ebp - 0xaec]
            //   e8????????           |                     

        $sequence_5 = { 47 8b048df88c4400 4e 807d1300 8955e4 c64418050a 745a }
            // n = 7, score = 200
            //   47                   | inc                 edi
            //   8b048df88c4400       | mov                 eax, dword ptr [ecx*4 + 0x448cf8]
            //   4e                   | dec                 esi
            //   807d1300             | cmp                 byte ptr [ebp + 0x13], 0
            //   8955e4               | mov                 dword ptr [ebp - 0x1c], edx
            //   c64418050a           | mov                 byte ptr [eax + ebx + 5], 0xa
            //   745a                 | je                  0x5c

        $sequence_6 = { 85c0 75e2 c6470401 830fff 8bf7 2b349df88c4400 c1fe06 }
            // n = 7, score = 200
            //   85c0                 | test                eax, eax
            //   75e2                 | jne                 0xffffffe4
            //   c6470401             | mov                 byte ptr [edi + 4], 1
            //   830fff               | or                  dword ptr [edi], 0xffffffff
            //   8bf7                 | mov                 esi, edi
            //   2b349df88c4400       | sub                 esi, dword ptr [ebx*4 + 0x448cf8]
            //   c1fe06               | sar                 esi, 6

        $sequence_7 = { 745b 8b9d38ffffff 8bf7 3bfb 7428 837e1410 720a }
            // n = 7, score = 200
            //   745b                 | je                  0x5d
            //   8b9d38ffffff         | mov                 ebx, dword ptr [ebp - 0xc8]
            //   8bf7                 | mov                 esi, edi
            //   3bfb                 | cmp                 edi, ebx
            //   7428                 | je                  0x2a
            //   837e1410             | cmp                 dword ptr [esi + 0x14], 0x10
            //   720a                 | jb                  0xc

        $sequence_8 = { c645c000 c78520ffffff0f000000 c7851cffffff00000000 c6850cffffff00 e8???????? c645fc12 8d4dc0 }
            // n = 7, score = 200
            //   c645c000             | mov                 byte ptr [ebp - 0x40], 0
            //   c78520ffffff0f000000     | mov    dword ptr [ebp - 0xe0], 0xf
            //   c7851cffffff00000000     | mov    dword ptr [ebp - 0xe4], 0
            //   c6850cffffff00       | mov                 byte ptr [ebp - 0xf4], 0
            //   e8????????           |                     
            //   c645fc12             | mov                 byte ptr [ebp - 4], 0x12
            //   8d4dc0               | lea                 ecx, [ebp - 0x40]

        $sequence_9 = { 85c0 748a c74638ffffffff eb81 ff7640 c7463c01000000 e8???????? }
            // n = 7, score = 200
            //   85c0                 | test                eax, eax
            //   748a                 | je                  0xffffff8c
            //   c74638ffffffff       | mov                 dword ptr [esi + 0x38], 0xffffffff
            //   eb81                 | jmp                 0xffffff83
            //   ff7640               | push                dword ptr [esi + 0x40]
            //   c7463c01000000       | mov                 dword ptr [esi + 0x3c], 1
            //   e8????????           |                     

    condition:
        7 of them and filesize < 645120
}