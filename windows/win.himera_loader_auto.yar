rule win_himera_loader_auto {

    meta:
        author = "Felix Bilstein - yara-signator at cocacoding dot com"
        date = "2022-10-07"
        version = "1"
        description = "Detects win.himera_loader."
        info = "autogenerated rule brought to you by yara-signator"
        tool = "yara-signator v0.6.0"
        signator_config = "callsandjumps;datarefs;binvalue"
        malpedia_reference = "https://malpedia.caad.fkie.fraunhofer.de/details/win.himera_loader"
        malpedia_rule_date = "20221007"
        malpedia_hash = "597f9539014e3d0f350c069cd804aa71679486ae"
        malpedia_version = "20221010"
        malpedia_license = "CC BY-SA 4.0"
        malpedia_sharing = "TLP:WHITE"

    /* DISCLAIMER
     * The strings used in this rule have been automatically selected from the
     * disassembly of memory dumps and unpacked files, using YARA-Signator.
     * The code and documentation is published here:
     * https://github.com/fxb-cocacoding/yara-signator
     * As Malpedia is used as data source, please note that for a given
     * number of families, only single samples are documented.
     * This likely impacts the degree of generalization these rules will offer.
     * Take the described generation method also into consideration when you
     * apply the rules in your use cases and assign them confidence levels.
     */


    strings:
        $sequence_0 = { 6bc225 33c9 8b55f8 66890c02 8b45f8 }
            // n = 5, score = 200
            //   6bc225               | imul                eax, edx, 0x25
            //   33c9                 | xor                 ecx, ecx
            //   8b55f8               | mov                 edx, dword ptr [ebp - 8]
            //   66890c02             | mov                 word ptr [edx + eax], cx
            //   8b45f8               | mov                 eax, dword ptr [ebp - 8]

        $sequence_1 = { c645e541 c645e641 c645e742 c645e85d c645e900 c645ea4b c645eb56 }
            // n = 7, score = 200
            //   c645e541             | mov                 byte ptr [ebp - 0x1b], 0x41
            //   c645e641             | mov                 byte ptr [ebp - 0x1a], 0x41
            //   c645e742             | mov                 byte ptr [ebp - 0x19], 0x42
            //   c645e85d             | mov                 byte ptr [ebp - 0x18], 0x5d
            //   c645e900             | mov                 byte ptr [ebp - 0x17], 0
            //   c645ea4b             | mov                 byte ptr [ebp - 0x16], 0x4b
            //   c645eb56             | mov                 byte ptr [ebp - 0x15], 0x56

        $sequence_2 = { 8b4d08 0fb71401 52 e8???????? 83c408 8b4dfc 66894126 }
            // n = 7, score = 200
            //   8b4d08               | mov                 ecx, dword ptr [ebp + 8]
            //   0fb71401             | movzx               edx, word ptr [ecx + eax]
            //   52                   | push                edx
            //   e8????????           |                     
            //   83c408               | add                 esp, 8
            //   8b4dfc               | mov                 ecx, dword ptr [ebp - 4]
            //   66894126             | mov                 word ptr [ecx + 0x26], ax

        $sequence_3 = { 894dfc 837dfc1e 7316 8b55f8 0355fc 0fbe02 }
            // n = 6, score = 200
            //   894dfc               | mov                 dword ptr [ebp - 4], ecx
            //   837dfc1e             | cmp                 dword ptr [ebp - 4], 0x1e
            //   7316                 | jae                 0x18
            //   8b55f8               | mov                 edx, dword ptr [ebp - 8]
            //   0355fc               | add                 edx, dword ptr [ebp - 4]
            //   0fbe02               | movsx               eax, byte ptr [edx]

        $sequence_4 = { 8d45f4 64a300000000 894de0 c745dc0a000000 c645e440 c645e55a }
            // n = 6, score = 200
            //   8d45f4               | lea                 eax, [ebp - 0xc]
            //   64a300000000         | mov                 dword ptr fs:[0], eax
            //   894de0               | mov                 dword ptr [ebp - 0x20], ecx
            //   c745dc0a000000       | mov                 dword ptr [ebp - 0x24], 0xa
            //   c645e440             | mov                 byte ptr [ebp - 0x1c], 0x40
            //   c645e55a             | mov                 byte ptr [ebp - 0x1b], 0x5a

        $sequence_5 = { 50 ff15???????? 8b8d10faffff 51 ff15???????? 8b950cfaffff 52 }
            // n = 7, score = 200
            //   50                   | push                eax
            //   ff15????????         |                     
            //   8b8d10faffff         | mov                 ecx, dword ptr [ebp - 0x5f0]
            //   51                   | push                ecx
            //   ff15????????         |                     
            //   8b950cfaffff         | mov                 edx, dword ptr [ebp - 0x5f4]
            //   52                   | push                edx

        $sequence_6 = { c745e4483f4200 eb19 c745e4503f4200 eb10 c745e4583f4200 eb07 }
            // n = 6, score = 200
            //   c745e4483f4200       | mov                 dword ptr [ebp - 0x1c], 0x423f48
            //   eb19                 | jmp                 0x1b
            //   c745e4503f4200       | mov                 dword ptr [ebp - 0x1c], 0x423f50
            //   eb10                 | jmp                 0x12
            //   c745e4583f4200       | mov                 dword ptr [ebp - 0x1c], 0x423f58
            //   eb07                 | jmp                 9

        $sequence_7 = { c645ea4b c645eb56 c645ec4b c645ed2e }
            // n = 4, score = 200
            //   c645ea4b             | mov                 byte ptr [ebp - 0x16], 0x4b
            //   c645eb56             | mov                 byte ptr [ebp - 0x15], 0x56
            //   c645ec4b             | mov                 byte ptr [ebp - 0x14], 0x4b
            //   c645ed2e             | mov                 byte ptr [ebp - 0x13], 0x2e

        $sequence_8 = { 837dfc49 7318 8b4d08 e8???????? 8b4df8 034dfc 8b55fc }
            // n = 7, score = 200
            //   837dfc49             | cmp                 dword ptr [ebp - 4], 0x49
            //   7318                 | jae                 0x1a
            //   8b4d08               | mov                 ecx, dword ptr [ebp + 8]
            //   e8????????           |                     
            //   8b4df8               | mov                 ecx, dword ptr [ebp - 8]
            //   034dfc               | add                 ecx, dword ptr [ebp - 4]
            //   8b55fc               | mov                 edx, dword ptr [ebp - 4]

        $sequence_9 = { 8b4df4 8b048500a14200 8b5df0 33ff }
            // n = 4, score = 200
            //   8b4df4               | mov                 ecx, dword ptr [ebp - 0xc]
            //   8b048500a14200       | mov                 eax, dword ptr [eax*4 + 0x42a100]
            //   8b5df0               | mov                 ebx, dword ptr [ebp - 0x10]
            //   33ff                 | xor                 edi, edi

    condition:
        7 of them and filesize < 385024
}