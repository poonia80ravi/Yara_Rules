rule win_cadelspy_auto {

    meta:
        author = "Felix Bilstein - yara-signator at cocacoding dot com"
        date = "2022-10-07"
        version = "1"
        description = "Detects win.cadelspy."
        info = "autogenerated rule brought to you by yara-signator"
        tool = "yara-signator v0.6.0"
        signator_config = "callsandjumps;datarefs;binvalue"
        malpedia_reference = "https://malpedia.caad.fkie.fraunhofer.de/details/win.cadelspy"
        malpedia_rule_date = "20221007"
        malpedia_hash = "597f9539014e3d0f350c069cd804aa71679486ae"
        malpedia_version = "20221010"
        malpedia_license = "CC BY-SA 4.0"
        malpedia_sharing = "TLP:WHITE"

    /* DISCLAIMER
     * The strings used in this rule have been automatically selected from the
     * disassembly of memory dumps and unpacked files, using YARA-Signator.
     * The code and documentation is published here:
     * https://github.com/fxb-cocacoding/yara-signator
     * As Malpedia is used as data source, please note that for a given
     * number of families, only single samples are documented.
     * This likely impacts the degree of generalization these rules will offer.
     * Take the described generation method also into consideration when you
     * apply the rules in your use cases and assign them confidence levels.
     */


    strings:
        $sequence_0 = { 8d542424 89742424 e8???????? 33c0 bf06020000 }
            // n = 5, score = 100
            //   8d542424             | lea                 edx, [esp + 0x24]
            //   89742424             | mov                 dword ptr [esp + 0x24], esi
            //   e8????????           |                     
            //   33c0                 | xor                 eax, eax
            //   bf06020000           | mov                 edi, 0x206

        $sequence_1 = { 770d 50 ff15???????? 8b442428 eb03 83c8ff 8b8c245c020000 }
            // n = 7, score = 100
            //   770d                 | ja                  0xf
            //   50                   | push                eax
            //   ff15????????         |                     
            //   8b442428             | mov                 eax, dword ptr [esp + 0x28]
            //   eb03                 | jmp                 5
            //   83c8ff               | or                  eax, 0xffffffff
            //   8b8c245c020000       | mov                 ecx, dword ptr [esp + 0x25c]

        $sequence_2 = { 33c0 40 eb5b be???????? 8d856c030000 }
            // n = 5, score = 100
            //   33c0                 | xor                 eax, eax
            //   40                   | inc                 eax
            //   eb5b                 | jmp                 0x5d
            //   be????????           |                     
            //   8d856c030000         | lea                 eax, [ebp + 0x36c]

        $sequence_3 = { 85c0 7504 89742414 81c7c8000000 4b 75e2 39742414 }
            // n = 7, score = 100
            //   85c0                 | test                eax, eax
            //   7504                 | jne                 6
            //   89742414             | mov                 dword ptr [esp + 0x14], esi
            //   81c7c8000000         | add                 edi, 0xc8
            //   4b                   | dec                 ebx
            //   75e2                 | jne                 0xffffffe4
            //   39742414             | cmp                 dword ptr [esp + 0x14], esi

        $sequence_4 = { 50 899da0fdffff e8???????? 6807020000 8d85a5fdffff }
            // n = 5, score = 100
            //   50                   | push                eax
            //   899da0fdffff         | mov                 dword ptr [ebp - 0x260], ebx
            //   e8????????           |                     
            //   6807020000           | push                0x207
            //   8d85a5fdffff         | lea                 eax, [ebp - 0x25b]

        $sequence_5 = { 53 8d75fc b904010000 e8???????? 5e }
            // n = 5, score = 100
            //   53                   | push                ebx
            //   8d75fc               | lea                 esi, [ebp - 4]
            //   b904010000           | mov                 ecx, 0x104
            //   e8????????           |                     
            //   5e                   | pop                 esi

        $sequence_6 = { 40 80b9403a011000 74e8 8a13 0fb6ca 0fbe89403a0110 }
            // n = 6, score = 100
            //   40                   | inc                 eax
            //   80b9403a011000       | cmp                 byte ptr [ecx + 0x10013a40], 0
            //   74e8                 | je                  0xffffffea
            //   8a13                 | mov                 dl, byte ptr [ebx]
            //   0fb6ca               | movzx               ecx, dl
            //   0fbe89403a0110       | movsx               ecx, byte ptr [ecx + 0x10013a40]

        $sequence_7 = { 33c0 eb03 0fb6c0 660fb64c3d85 c1e008 6603c8 47 }
            // n = 7, score = 100
            //   33c0                 | xor                 eax, eax
            //   eb03                 | jmp                 5
            //   0fb6c0               | movzx               eax, al
            //   660fb64c3d85         | movzx               cx, byte ptr [ebp + edi - 0x7b]
            //   c1e008               | shl                 eax, 8
            //   6603c8               | add                 cx, ax
            //   47                   | inc                 edi

        $sequence_8 = { 740c 68???????? 8bdf e8???????? 8d8574050000 }
            // n = 5, score = 100
            //   740c                 | je                  0xe
            //   68????????           |                     
            //   8bdf                 | mov                 ebx, edi
            //   e8????????           |                     
            //   8d8574050000         | lea                 eax, [ebp + 0x574]

        $sequence_9 = { 8d4d08 51 68???????? 50 50 894508 ff15???????? }
            // n = 7, score = 100
            //   8d4d08               | lea                 ecx, [ebp + 8]
            //   51                   | push                ecx
            //   68????????           |                     
            //   50                   | push                eax
            //   50                   | push                eax
            //   894508               | mov                 dword ptr [ebp + 8], eax
            //   ff15????????         |                     

    condition:
        7 of them and filesize < 204800
}