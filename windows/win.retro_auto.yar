rule win_retro_auto {

    meta:
        author = "Felix Bilstein - yara-signator at cocacoding dot com"
        date = "2022-10-07"
        version = "1"
        description = "Detects win.retro."
        info = "autogenerated rule brought to you by yara-signator"
        tool = "yara-signator v0.6.0"
        signator_config = "callsandjumps;datarefs;binvalue"
        malpedia_reference = "https://malpedia.caad.fkie.fraunhofer.de/details/win.retro"
        malpedia_rule_date = "20221007"
        malpedia_hash = "597f9539014e3d0f350c069cd804aa71679486ae"
        malpedia_version = "20221010"
        malpedia_license = "CC BY-SA 4.0"
        malpedia_sharing = "TLP:WHITE"

    /* DISCLAIMER
     * The strings used in this rule have been automatically selected from the
     * disassembly of memory dumps and unpacked files, using YARA-Signator.
     * The code and documentation is published here:
     * https://github.com/fxb-cocacoding/yara-signator
     * As Malpedia is used as data source, please note that for a given
     * number of families, only single samples are documented.
     * This likely impacts the degree of generalization these rules will offer.
     * Take the described generation method also into consideration when you
     * apply the rules in your use cases and assign them confidence levels.
     */


    strings:
        $sequence_0 = { 4b8d549ff4 4c8d351f1ffeff 448b5208 448b4a04 448b02 8b4afc 418bc2 }
            // n = 7, score = 200
            //   4b8d549ff4           | jne                 0x461
            //   4c8d351f1ffeff       | mov                 ecx, 8
            //   448b5208             | inc                 esp
            //   448b4a04             | movzx               ebx, word ptr [edx]
            //   448b02               | dec                 eax
            //   8b4afc               | mov                 dword ptr [esp + 0x10], ebx
            //   418bc2               | mov                 ebx, 0xfffe

        $sequence_1 = { f30f104804 4883e908 4883c008 48ffca f30f5840f8 f30f584908 f3420f594400f4 }
            // n = 7, score = 200
            //   f30f104804           | mov                 eax, dword ptr [esp + 0x110]
            //   4883e908             | inc                 ebp
            //   4883c008             | xor                 ecx, ecx
            //   48ffca               | dec                 edx
            //   f30f5840f8           | lea                 edx, [eax + eax*4 + 0x80]
            //   f30f584908           | dec                 ebp
            //   f3420f594400f4       | arpl                ax, cx

        $sequence_2 = { 8b4644 85c0 7e34 83c004 660f6ec1 }
            // n = 5, score = 200
            //   8b4644               | inc                 esp
            //   85c0                 | lea                 eax, [edx - 0x45]
            //   7e34                 | sub                 ebx, 8
            //   83c004               | cmp                 ebx, 8
            //   660f6ec1             | dec                 eax

        $sequence_3 = { ffc7 f20f5ac8 f30f114bfc 483bde 7cd7 f20f103d???????? bfbafeffff }
            // n = 7, score = 200
            //   ffc7                 | mov                 eax, dword ptr [edx + eax*4 + 0x5404]
            //   f20f5ac8             | lea                 ecx, [eax + eax*2 - 1]
            //   f30f114bfc           | cmp                 edx, ecx
            //   483bde               | cmp                 ecx, 0x1f40
            //   7cd7                 | mov                 eax, 0x15
            //   f20f103d????????     |                     
            //   bfbafeffff           | inc                 ecx

        $sequence_4 = { 48636c2458 4533c9 4883f904 0f8c34010000 488d79fc 488bc5 498bf2 }
            // n = 7, score = 200
            //   48636c2458           | mulps               xmm4, xmm3
            //   4533c9               | inc                 ecx
            //   4883f904             | mulps               xmm0, xmm3
            //   0f8c34010000         | inc                 ecx
            //   488d79fc             | mulps               xmm1, xmm4
            //   488bc5               | mulss               xmm3, xmm2
            //   498bf2               | inc                 esp

        $sequence_5 = { 4c8b642468 4883c420 415f 415e 415d 5d 5b }
            // n = 7, score = 200
            //   4c8b642468           | mov                 ebx, dword ptr [esp + 0x140]
            //   4883c420             | xor                 edi, edi
            //   415f                 | dec                 eax
            //   415e                 | mov                 eax, dword ptr [esp + 0x128]
            //   415d                 | inc                 esp
            //   5d                   | mov                 esp, dword ptr [esp + 0x2c]
            //   5b                   | dec                 eax

        $sequence_6 = { f3410f5cdf f30f117a60 f30f10bc2408010000 f30f114250 f30f5ce0 f30f104254 }
            // n = 6, score = 200
            //   f3410f5cdf           | xor                 al, 0x3a
            //   f30f117a60           | add                 byte ptr [eax], al
            //   f30f10bc2408010000     | mov    dword ptr [esp + 0x34], 0
            //   f30f114250           | mov                 dword ptr [esp + 0x30], 0
            //   f30f5ce0             | mov                 dword ptr [esp + 0x60], 0
            //   f30f104254           | mov                 eax, dword ptr [esp + 0xb8]

        $sequence_7 = { ffc8 83c8f8 ffc0 85c0 0f45d8 2bb9f4d50000 2bfb }
            // n = 7, score = 200
            //   ffc8                 | cmp                 ecx, 0x1c3e
            //   83c8f8               | inc                 ecx
            //   ffc0                 | cmovle              eax, ebx
            //   85c0                 | cmp                 ecx, 0x152c
            //   0f45d8               | cmp                 ecx, 0x2ee0
            //   2bb9f4d50000         | je                  0x437
            //   2bfb                 | cmp                 ecx, 0x3e80

        $sequence_8 = { f30f1080c4550100 410f2fc0 7604 f30f59e8 418d4424ff 4863c8 483bcd }
            // n = 7, score = 200
            //   f30f1080c4550100     | dec                 esp
            //   410f2fc0             | mov                 dword ptr [esp + 0x20], ebp
            //   7604                 | add                 ebx, eax
            //   f30f59e8             | dec                 ebp
            //   418d4424ff           | mov                 ecx, esp
            //   4863c8               | inc                 esp
            //   483bcd               | mov                 eax, edi

        $sequence_9 = { f20f112424 f20f59ca f20f59c2 f20f5c2dd713fcff f20f59da f20f580d9b14fcff f20f58056314fcff }
            // n = 7, score = 200
            //   f20f112424           | mov                 ecx, esi
            //   f20f59ca             | dec                 eax
            //   f20f59c2             | add                 edi, 0x90
            //   f20f5c2dd713fcff     | dec                 eax
            //   f20f59da             | add                 esi, 0x90
            //   f20f580d9b14fcff     | dec                 eax
            //   f20f58056314fcff     | add                 ebp, 8

    condition:
        7 of them and filesize < 1409024
}