rule win_crosswalk_auto {

    meta:
        author = "Felix Bilstein - yara-signator at cocacoding dot com"
        date = "2022-10-07"
        version = "1"
        description = "Detects win.crosswalk."
        info = "autogenerated rule brought to you by yara-signator"
        tool = "yara-signator v0.6.0"
        signator_config = "callsandjumps;datarefs;binvalue"
        malpedia_reference = "https://malpedia.caad.fkie.fraunhofer.de/details/win.crosswalk"
        malpedia_rule_date = "20221007"
        malpedia_hash = "597f9539014e3d0f350c069cd804aa71679486ae"
        malpedia_version = "20221010"
        malpedia_license = "CC BY-SA 4.0"
        malpedia_sharing = "TLP:WHITE"

    /* DISCLAIMER
     * The strings used in this rule have been automatically selected from the
     * disassembly of memory dumps and unpacked files, using YARA-Signator.
     * The code and documentation is published here:
     * https://github.com/fxb-cocacoding/yara-signator
     * As Malpedia is used as data source, please note that for a given
     * number of families, only single samples are documented.
     * This likely impacts the degree of generalization these rules will offer.
     * Take the described generation method also into consideration when you
     * apply the rules in your use cases and assign them confidence levels.
     */


    strings:
        $sequence_0 = { 4883ec28 4885c9 7402 ffd1 b801000000 }
            // n = 5, score = 1300
            //   4883ec28             | ror                 edx, cl
            //   4885c9               | add                 edx, eax
            //   7402                 | inc                 ecx
            //   ffd1                 | sub                 edi, 1
            //   b801000000           | dec                 eax

        $sequence_1 = { 4c8bc6 33d2 410fbe00 49ffc0 }
            // n = 4, score = 1300
            //   4c8bc6               | inc                 ecx
            //   33d2                 | movsx               eax, byte ptr [eax]
            //   410fbe00             | dec                 ecx
            //   49ffc0               | inc                 eax

        $sequence_2 = { 458bc6 33d2 488bc8 e8???????? 4533c9 4533c0 33d2 }
            // n = 7, score = 1300
            //   458bc6               | sub                 esp, 0x28
            //   33d2                 | dec                 eax
            //   488bc8               | test                ecx, ecx
            //   e8????????           |                     
            //   4533c9               | je                  7
            //   4533c0               | call                ecx
            //   33d2                 | mov                 eax, 1

        $sequence_3 = { 418bc0 f7e9 03d1 c1fa0b }
            // n = 4, score = 1300
            //   418bc0               | inc                 ecx
            //   f7e9                 | mov                 eax, eax
            //   03d1                 | imul                ecx
            //   c1fa0b               | add                 edx, ecx

        $sequence_4 = { 458d7ee0 418bd7 ff15???????? 4821742420 }
            // n = 4, score = 1300
            //   458d7ee0             | inc                 ebp
            //   418bd7               | xor                 ecx, ecx
            //   ff15????????         |                     
            //   4821742420           | inc                 ebp

        $sequence_5 = { 410fbe00 49ffc0 d3ca 03d0 4183ef01 }
            // n = 5, score = 1300
            //   410fbe00             | sar                 edx, 0xb
            //   49ffc0               | inc                 ecx
            //   d3ca                 | movsx               eax, byte ptr [eax]
            //   03d0                 | dec                 ecx
            //   4183ef01             | inc                 eax

        $sequence_6 = { c1fa0b 8bc2 c1e81f 03d0 69c2890e0000 3bc8 }
            // n = 6, score = 1300
            //   c1fa0b               | xor                 eax, eax
            //   8bc2                 | inc                 ebp
            //   c1e81f               | lea                 edi, [esi - 0x20]
            //   03d0                 | inc                 ecx
            //   69c2890e0000         | mov                 edx, edi
            //   3bc8                 | dec                 eax

        $sequence_7 = { 33f6 8d6e20 8bcd e8???????? }
            // n = 4, score = 1300
            //   33f6                 | inc                 ebp
            //   8d6e20               | xor                 ecx, ecx
            //   8bcd                 | inc                 ebp
            //   e8????????           |                     

        $sequence_8 = { 8945f8 8b4508 56 be???????? c745ec24234100 57 8d3c85fcffffff }
            // n = 7, score = 200
            //   8945f8               | mov                 dword ptr [ebp - 8], eax
            //   8b4508               | mov                 eax, dword ptr [ebp + 8]
            //   56                   | push                esi
            //   be????????           |                     
            //   c745ec24234100       | mov                 dword ptr [ebp - 0x14], 0x412324
            //   57                   | push                edi
            //   8d3c85fcffffff       | lea                 edi, [eax*4 - 4]

        $sequence_9 = { 6bc030 03048d808e4100 50 ff15???????? 5d c3 8bff }
            // n = 7, score = 200
            //   6bc030               | imul                eax, eax, 0x30
            //   03048d808e4100       | add                 eax, dword ptr [ecx*4 + 0x418e80]
            //   50                   | push                eax
            //   ff15????????         |                     
            //   5d                   | pop                 ebp
            //   c3                   | ret                 
            //   8bff                 | mov                 edi, edi

        $sequence_10 = { 83e13f 6bc930 53 8b5d10 8b0485808e4100 56 8b7508 }
            // n = 7, score = 200
            //   83e13f               | and                 ecx, 0x3f
            //   6bc930               | imul                ecx, ecx, 0x30
            //   53                   | push                ebx
            //   8b5d10               | mov                 ebx, dword ptr [ebp + 0x10]
            //   8b0485808e4100       | mov                 eax, dword ptr [eax*4 + 0x418e80]
            //   56                   | push                esi
            //   8b7508               | mov                 esi, dword ptr [ebp + 8]

        $sequence_11 = { 5d c3 3b0d???????? f27502 f2c3 f2e991020000 55 }
            // n = 7, score = 200
            //   5d                   | pop                 ebp
            //   c3                   | ret                 
            //   3b0d????????         |                     
            //   f27502               | bnd jne             5
            //   f2c3                 | bnd ret             
            //   f2e991020000         | bnd jmp             0x297
            //   55                   | push                ebp

        $sequence_12 = { 8b7dd0 8b45e4 8b4de8 8b0485808e4100 f644082840 }
            // n = 5, score = 200
            //   8b7dd0               | mov                 edi, dword ptr [ebp - 0x30]
            //   8b45e4               | mov                 eax, dword ptr [ebp - 0x1c]
            //   8b4de8               | mov                 ecx, dword ptr [ebp - 0x18]
            //   8b0485808e4100       | mov                 eax, dword ptr [eax*4 + 0x418e80]
            //   f644082840           | test                byte ptr [eax + ecx + 0x28], 0x40

        $sequence_13 = { 8b0485808e4100 8b4de0 f644082801 7515 }
            // n = 4, score = 200
            //   8b0485808e4100       | mov                 eax, dword ptr [eax*4 + 0x418e80]
            //   8b4de0               | mov                 ecx, dword ptr [ebp - 0x20]
            //   f644082801           | test                byte ptr [eax + ecx + 0x28], 1
            //   7515                 | jne                 0x17

        $sequence_14 = { 8b0495808e4100 f644082801 7414 8d4508 }
            // n = 4, score = 200
            //   8b0495808e4100       | mov                 eax, dword ptr [edx*4 + 0x418e80]
            //   f644082801           | test                byte ptr [eax + ecx + 0x28], 1
            //   7414                 | je                  0x16
            //   8d4508               | lea                 eax, [ebp + 8]

        $sequence_15 = { 81fa00010000 7313 8a87f4814100 08441619 42 }
            // n = 5, score = 200
            //   81fa00010000         | cmp                 edx, 0x100
            //   7313                 | jae                 0x15
            //   8a87f4814100         | mov                 al, byte ptr [edi + 0x4181f4]
            //   08441619             | or                  byte ptr [esi + edx + 0x19], al
            //   42                   | inc                 edx

    condition:
        7 of them and filesize < 286720
}