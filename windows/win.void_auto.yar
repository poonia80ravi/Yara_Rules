rule win_void_auto {

    meta:
        author = "Felix Bilstein - yara-signator at cocacoding dot com"
        date = "2022-10-07"
        version = "1"
        description = "Detects win.void."
        info = "autogenerated rule brought to you by yara-signator"
        tool = "yara-signator v0.6.0"
        signator_config = "callsandjumps;datarefs;binvalue"
        malpedia_reference = "https://malpedia.caad.fkie.fraunhofer.de/details/win.void"
        malpedia_rule_date = "20221007"
        malpedia_hash = "597f9539014e3d0f350c069cd804aa71679486ae"
        malpedia_version = "20221010"
        malpedia_license = "CC BY-SA 4.0"
        malpedia_sharing = "TLP:WHITE"

    /* DISCLAIMER
     * The strings used in this rule have been automatically selected from the
     * disassembly of memory dumps and unpacked files, using YARA-Signator.
     * The code and documentation is published here:
     * https://github.com/fxb-cocacoding/yara-signator
     * As Malpedia is used as data source, please note that for a given
     * number of families, only single samples are documented.
     * This likely impacts the degree of generalization these rules will offer.
     * Take the described generation method also into consideration when you
     * apply the rules in your use cases and assign them confidence levels.
     */


    strings:
        $sequence_0 = { c1c105 33c2 c1cf02 81c1a1ebd96e 034c2440 03c1 03e8 }
            // n = 7, score = 200
            //   c1c105               | rol                 ecx, 5
            //   33c2                 | xor                 eax, edx
            //   c1cf02               | ror                 edi, 2
            //   81c1a1ebd96e         | add                 ecx, 0x6ed9eba1
            //   034c2440             | add                 ecx, dword ptr [esp + 0x40]
            //   03c1                 | add                 eax, ecx
            //   03e8                 | add                 ebp, eax

        $sequence_1 = { f6c308 740b 8d4dd0 83e3f7 e8???????? f6c304 740b }
            // n = 7, score = 200
            //   f6c308               | test                bl, 8
            //   740b                 | je                  0xd
            //   8d4dd0               | lea                 ecx, [ebp - 0x30]
            //   83e3f7               | and                 ebx, 0xfffffff7
            //   e8????????           |                     
            //   f6c304               | test                bl, 4
            //   740b                 | je                  0xd

        $sequence_2 = { 8d85e4fcffff f20f1106 3985d0fcffff 7433 85c9 752f }
            // n = 6, score = 200
            //   8d85e4fcffff         | lea                 eax, [ebp - 0x31c]
            //   f20f1106             | movsd               qword ptr [esi], xmm0
            //   3985d0fcffff         | cmp                 dword ptr [ebp - 0x330], eax
            //   7433                 | je                  0x35
            //   85c9                 | test                ecx, ecx
            //   752f                 | jne                 0x31

        $sequence_3 = { 8d4dd8 e9???????? 8d4dcc e9???????? 8b542408 8d420c 8b4acc }
            // n = 7, score = 200
            //   8d4dd8               | lea                 ecx, [ebp - 0x28]
            //   e9????????           |                     
            //   8d4dcc               | lea                 ecx, [ebp - 0x34]
            //   e9????????           |                     
            //   8b542408             | mov                 edx, dword ptr [esp + 8]
            //   8d420c               | lea                 eax, [edx + 0xc]
            //   8b4acc               | mov                 ecx, dword ptr [edx - 0x34]

        $sequence_4 = { 64a300000000 8bf9 8b7508 8b4510 8b4d14 c745e8ffffffff c745ec00000000 }
            // n = 7, score = 200
            //   64a300000000         | mov                 dword ptr fs:[0], eax
            //   8bf9                 | mov                 edi, ecx
            //   8b7508               | mov                 esi, dword ptr [ebp + 8]
            //   8b4510               | mov                 eax, dword ptr [ebp + 0x10]
            //   8b4d14               | mov                 ecx, dword ptr [ebp + 0x14]
            //   c745e8ffffffff       | mov                 dword ptr [ebp - 0x18], 0xffffffff
            //   c745ec00000000       | mov                 dword ptr [ebp - 0x14], 0

        $sequence_5 = { 8945e4 81e3f0000000 8b45dc 03d9 c1e804 81e7f0000000 }
            // n = 6, score = 200
            //   8945e4               | mov                 dword ptr [ebp - 0x1c], eax
            //   81e3f0000000         | and                 ebx, 0xf0
            //   8b45dc               | mov                 eax, dword ptr [ebp - 0x24]
            //   03d9                 | add                 ebx, ecx
            //   c1e804               | shr                 eax, 4
            //   81e7f0000000         | and                 edi, 0xf0

        $sequence_6 = { 85db 7405 83fb10 7515 bb10000000 c645a300 8bce }
            // n = 7, score = 200
            //   85db                 | test                ebx, ebx
            //   7405                 | je                  7
            //   83fb10               | cmp                 ebx, 0x10
            //   7515                 | jne                 0x17
            //   bb10000000           | mov                 ebx, 0x10
            //   c645a300             | mov                 byte ptr [ebp - 0x5d], 0
            //   8bce                 | mov                 ecx, esi

        $sequence_7 = { eb08 c70600000000 8ac8 c6460401 3a4dec 0f8527030000 c60365 }
            // n = 7, score = 200
            //   eb08                 | jmp                 0xa
            //   c70600000000         | mov                 dword ptr [esi], 0
            //   8ac8                 | mov                 cl, al
            //   c6460401             | mov                 byte ptr [esi + 4], 1
            //   3a4dec               | cmp                 cl, byte ptr [ebp - 0x14]
            //   0f8527030000         | jne                 0x32d
            //   c60365               | mov                 byte ptr [ebx], 0x65

        $sequence_8 = { 8d4d30 e9???????? c3 8b4564 83e004 0f840c000000 }
            // n = 6, score = 200
            //   8d4d30               | lea                 ecx, [ebp + 0x30]
            //   e9????????           |                     
            //   c3                   | ret                 
            //   8b4564               | mov                 eax, dword ptr [ebp + 0x64]
            //   83e004               | and                 eax, 4
            //   0f840c000000         | je                  0x12

        $sequence_9 = { 03d1 03542410 03c2 89442410 8b442424 8bc8 8bf0 }
            // n = 7, score = 200
            //   03d1                 | add                 edx, ecx
            //   03542410             | add                 edx, dword ptr [esp + 0x10]
            //   03c2                 | add                 eax, edx
            //   89442410             | mov                 dword ptr [esp + 0x10], eax
            //   8b442424             | mov                 eax, dword ptr [esp + 0x24]
            //   8bc8                 | mov                 ecx, eax
            //   8bf0                 | mov                 esi, eax

    condition:
        7 of them and filesize < 2744320
}