rule win_shadowhammer_auto {

    meta:
        author = "Felix Bilstein - yara-signator at cocacoding dot com"
        date = "2022-10-07"
        version = "1"
        description = "Detects win.shadowhammer."
        info = "autogenerated rule brought to you by yara-signator"
        tool = "yara-signator v0.6.0"
        signator_config = "callsandjumps;datarefs;binvalue"
        malpedia_reference = "https://malpedia.caad.fkie.fraunhofer.de/details/win.shadowhammer"
        malpedia_rule_date = "20221007"
        malpedia_hash = "597f9539014e3d0f350c069cd804aa71679486ae"
        malpedia_version = "20221010"
        malpedia_license = "CC BY-SA 4.0"
        malpedia_sharing = "TLP:WHITE"

    /* DISCLAIMER
     * The strings used in this rule have been automatically selected from the
     * disassembly of memory dumps and unpacked files, using YARA-Signator.
     * The code and documentation is published here:
     * https://github.com/fxb-cocacoding/yara-signator
     * As Malpedia is used as data source, please note that for a given
     * number of families, only single samples are documented.
     * This likely impacts the degree of generalization these rules will offer.
     * Take the described generation method also into consideration when you
     * apply the rules in your use cases and assign them confidence levels.
     */


    strings:
        $sequence_0 = { 8bff 55 8bec 833d????????00 7419 68b0a84000 }
            // n = 6, score = 100
            //   8bff                 | mov                 edi, edi
            //   55                   | push                ebp
            //   8bec                 | mov                 ebp, esp
            //   833d????????00       |                     
            //   7419                 | je                  0x1b
            //   68b0a84000           | push                0x40a8b0

        $sequence_1 = { bf04010000 33db 57 66894590 }
            // n = 4, score = 100
            //   bf04010000           | mov                 edi, 0x104
            //   33db                 | xor                 ebx, ebx
            //   57                   | push                edi
            //   66894590             | mov                 word ptr [ebp - 0x70], ax

        $sequence_2 = { 8d8540ffffff 50 8d45b4 50 8d45d4 50 }
            // n = 6, score = 100
            //   8d8540ffffff         | lea                 eax, [ebp - 0xc0]
            //   50                   | push                eax
            //   8d45b4               | lea                 eax, [ebp - 0x4c]
            //   50                   | push                eax
            //   8d45d4               | lea                 eax, [ebp - 0x2c]
            //   50                   | push                eax

        $sequence_3 = { 8b4508 6bdb2c 035d0c 6a2c 53 ff7518 ff501c }
            // n = 7, score = 100
            //   8b4508               | mov                 eax, dword ptr [ebp + 8]
            //   6bdb2c               | imul                ebx, ebx, 0x2c
            //   035d0c               | add                 ebx, dword ptr [ebp + 0xc]
            //   6a2c                 | push                0x2c
            //   53                   | push                ebx
            //   ff7518               | push                dword ptr [ebp + 0x18]
            //   ff501c               | call                dword ptr [eax + 0x1c]

        $sequence_4 = { c78520feffffb389a7d7 c78524feffffda2433bd 33c0 8dbd28feffff ab }
            // n = 5, score = 100
            //   c78520feffffb389a7d7     | mov    dword ptr [ebp - 0x1e0], 0xd7a789b3
            //   c78524feffffda2433bd     | mov    dword ptr [ebp - 0x1dc], 0xbd3324da
            //   33c0                 | xor                 eax, eax
            //   8dbd28feffff         | lea                 edi, [ebp - 0x1d8]
            //   ab                   | stosd               dword ptr es:[edi], eax

        $sequence_5 = { 6a2e 66894588 58 6a32 }
            // n = 4, score = 100
            //   6a2e                 | push                0x2e
            //   66894588             | mov                 word ptr [ebp - 0x78], ax
            //   58                   | pop                 eax
            //   6a32                 | push                0x32

        $sequence_6 = { 59 6a44 5f 6a58 668945b0 }
            // n = 5, score = 100
            //   59                   | pop                 ecx
            //   6a44                 | push                0x44
            //   5f                   | pop                 edi
            //   6a58                 | push                0x58
            //   668945b0             | mov                 word ptr [ebp - 0x50], ax

        $sequence_7 = { 6800804000 ff15???????? 833d????????00 7508 6a01 e8???????? }
            // n = 6, score = 100
            //   6800804000           | push                0x408000
            //   ff15????????         |                     
            //   833d????????00       |                     
            //   7508                 | jne                 0xa
            //   6a01                 | push                1
            //   e8????????           |                     

        $sequence_8 = { 8d4588 50 ff5634 6a06 }
            // n = 4, score = 100
            //   8d4588               | lea                 eax, [ebp - 0x78]
            //   50                   | push                eax
            //   ff5634               | call                dword ptr [esi + 0x34]
            //   6a06                 | push                6

        $sequence_9 = { b801000000 c3 53 51 bb109b4000 }
            // n = 5, score = 100
            //   b801000000           | mov                 eax, 1
            //   c3                   | ret                 
            //   53                   | push                ebx
            //   51                   | push                ecx
            //   bb109b4000           | mov                 ebx, 0x409b10

    condition:
        7 of them and filesize < 49152
}