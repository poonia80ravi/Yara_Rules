rule win_mocton_auto {

    meta:
        author = "Felix Bilstein - yara-signator at cocacoding dot com"
        date = "2022-10-07"
        version = "1"
        description = "Detects win.mocton."
        info = "autogenerated rule brought to you by yara-signator"
        tool = "yara-signator v0.6.0"
        signator_config = "callsandjumps;datarefs;binvalue"
        malpedia_reference = "https://malpedia.caad.fkie.fraunhofer.de/details/win.mocton"
        malpedia_rule_date = "20221007"
        malpedia_hash = "597f9539014e3d0f350c069cd804aa71679486ae"
        malpedia_version = "20221010"
        malpedia_license = "CC BY-SA 4.0"
        malpedia_sharing = "TLP:WHITE"

    /* DISCLAIMER
     * The strings used in this rule have been automatically selected from the
     * disassembly of memory dumps and unpacked files, using YARA-Signator.
     * The code and documentation is published here:
     * https://github.com/fxb-cocacoding/yara-signator
     * As Malpedia is used as data source, please note that for a given
     * number of families, only single samples are documented.
     * This likely impacts the degree of generalization these rules will offer.
     * Take the described generation method also into consideration when you
     * apply the rules in your use cases and assign them confidence levels.
     */


    strings:
        $sequence_0 = { 8b5dfc 8b75fc 2bc1 03c2 c1fb05 83e61f 8d1c9d004d4400 }
            // n = 7, score = 100
            //   8b5dfc               | mov                 ebx, dword ptr [ebp - 4]
            //   8b75fc               | mov                 esi, dword ptr [ebp - 4]
            //   2bc1                 | sub                 eax, ecx
            //   03c2                 | add                 eax, edx
            //   c1fb05               | sar                 ebx, 5
            //   83e61f               | and                 esi, 0x1f
            //   8d1c9d004d4400       | lea                 ebx, [ebx*4 + 0x444d00]

        $sequence_1 = { b90dad974b 2b8dc0e9ffff 33d2 81f963064523 0f9ec2 81f2b87eaf76 0b95c8e9ffff }
            // n = 7, score = 100
            //   b90dad974b           | mov                 ecx, 0x4b97ad0d
            //   2b8dc0e9ffff         | sub                 ecx, dword ptr [ebp - 0x1640]
            //   33d2                 | xor                 edx, edx
            //   81f963064523         | cmp                 ecx, 0x23450663
            //   0f9ec2               | setle               dl
            //   81f2b87eaf76         | xor                 edx, 0x76af7eb8
            //   0b95c8e9ffff         | or                  edx, dword ptr [ebp - 0x1638]

        $sequence_2 = { 8b45f4 25ac34e431 8945f4 8b4df4 8b55f4 8b45f4 83c001 }
            // n = 7, score = 100
            //   8b45f4               | mov                 eax, dword ptr [ebp - 0xc]
            //   25ac34e431           | and                 eax, 0x31e434ac
            //   8945f4               | mov                 dword ptr [ebp - 0xc], eax
            //   8b4df4               | mov                 ecx, dword ptr [ebp - 0xc]
            //   8b55f4               | mov                 edx, dword ptr [ebp - 0xc]
            //   8b45f4               | mov                 eax, dword ptr [ebp - 0xc]
            //   83c001               | add                 eax, 1

        $sequence_3 = { 0bc2 741e b913c7eb75 2b8d98e9ffff 81c16c189413 0faf8d98e9ffff 898d98e9ffff }
            // n = 7, score = 100
            //   0bc2                 | or                  eax, edx
            //   741e                 | je                  0x20
            //   b913c7eb75           | mov                 ecx, 0x75ebc713
            //   2b8d98e9ffff         | sub                 ecx, dword ptr [ebp - 0x1668]
            //   81c16c189413         | add                 ecx, 0x1394186c
            //   0faf8d98e9ffff       | imul                ecx, dword ptr [ebp - 0x1668]
            //   898d98e9ffff         | mov                 dword ptr [ebp - 0x1668], ecx

        $sequence_4 = { 8b55e8 2bd1 81ca570cf445 8b45e8 2bc2 8945e8 eb69 }
            // n = 7, score = 100
            //   8b55e8               | mov                 edx, dword ptr [ebp - 0x18]
            //   2bd1                 | sub                 edx, ecx
            //   81ca570cf445         | or                  edx, 0x45f40c57
            //   8b45e8               | mov                 eax, dword ptr [ebp - 0x18]
            //   2bc2                 | sub                 eax, edx
            //   8945e8               | mov                 dword ptr [ebp - 0x18], eax
            //   eb69                 | jmp                 0x6b

        $sequence_5 = { 8945d8 8b5508 52 e8???????? 83c404 50 }
            // n = 6, score = 100
            //   8945d8               | mov                 dword ptr [ebp - 0x28], eax
            //   8b5508               | mov                 edx, dword ptr [ebp + 8]
            //   52                   | push                edx
            //   e8????????           |                     
            //   83c404               | add                 esp, 4
            //   50                   | push                eax

        $sequence_6 = { 83c201 8955e0 8b45e0 2345e0 0b45e0 0345e0 8945e0 }
            // n = 7, score = 100
            //   83c201               | add                 edx, 1
            //   8955e0               | mov                 dword ptr [ebp - 0x20], edx
            //   8b45e0               | mov                 eax, dword ptr [ebp - 0x20]
            //   2345e0               | and                 eax, dword ptr [ebp - 0x20]
            //   0b45e0               | or                  eax, dword ptr [ebp - 0x20]
            //   0345e0               | add                 eax, dword ptr [ebp - 0x20]
            //   8945e0               | mov                 dword ptr [ebp - 0x20], eax

        $sequence_7 = { 81bdc8fbffffa1a684c6 7f1d 8b85d4fbffff 0dfd1b9936 0faf85e0fbffff 8985e0fbffff e9???????? }
            // n = 7, score = 100
            //   81bdc8fbffffa1a684c6     | cmp    dword ptr [ebp - 0x438], 0xc684a6a1
            //   7f1d                 | jg                  0x1f
            //   8b85d4fbffff         | mov                 eax, dword ptr [ebp - 0x42c]
            //   0dfd1b9936           | or                  eax, 0x36991bfd
            //   0faf85e0fbffff       | imul                eax, dword ptr [ebp - 0x420]
            //   8985e0fbffff         | mov                 dword ptr [ebp - 0x420], eax
            //   e9????????           |                     

        $sequence_8 = { 7412 8b4dc4 81c10cf4d214 234dc4 234dc4 894dc4 8b550c }
            // n = 7, score = 100
            //   7412                 | je                  0x14
            //   8b4dc4               | mov                 ecx, dword ptr [ebp - 0x3c]
            //   81c10cf4d214         | add                 ecx, 0x14d2f40c
            //   234dc4               | and                 ecx, dword ptr [ebp - 0x3c]
            //   234dc4               | and                 ecx, dword ptr [ebp - 0x3c]
            //   894dc4               | mov                 dword ptr [ebp - 0x3c], ecx
            //   8b550c               | mov                 edx, dword ptr [ebp + 0xc]

        $sequence_9 = { 7f1b 8b4dec 81e99f694e10 7410 8b55ec 81f2dc0c275a 0faf55ec }
            // n = 7, score = 100
            //   7f1b                 | jg                  0x1d
            //   8b4dec               | mov                 ecx, dword ptr [ebp - 0x14]
            //   81e99f694e10         | sub                 ecx, 0x104e699f
            //   7410                 | je                  0x12
            //   8b55ec               | mov                 edx, dword ptr [ebp - 0x14]
            //   81f2dc0c275a         | xor                 edx, 0x5a270cdc
            //   0faf55ec             | imul                edx, dword ptr [ebp - 0x14]

    condition:
        7 of them and filesize < 573440
}