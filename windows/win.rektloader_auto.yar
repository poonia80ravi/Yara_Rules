rule win_rektloader_auto {

    meta:
        author = "Felix Bilstein - yara-signator at cocacoding dot com"
        date = "2022-10-07"
        version = "1"
        description = "Detects win.rektloader."
        info = "autogenerated rule brought to you by yara-signator"
        tool = "yara-signator v0.6.0"
        signator_config = "callsandjumps;datarefs;binvalue"
        malpedia_reference = "https://malpedia.caad.fkie.fraunhofer.de/details/win.rektloader"
        malpedia_rule_date = "20221007"
        malpedia_hash = "597f9539014e3d0f350c069cd804aa71679486ae"
        malpedia_version = "20221010"
        malpedia_license = "CC BY-SA 4.0"
        malpedia_sharing = "TLP:WHITE"

    /* DISCLAIMER
     * The strings used in this rule have been automatically selected from the
     * disassembly of memory dumps and unpacked files, using YARA-Signator.
     * The code and documentation is published here:
     * https://github.com/fxb-cocacoding/yara-signator
     * As Malpedia is used as data source, please note that for a given
     * number of families, only single samples are documented.
     * This likely impacts the degree of generalization these rules will offer.
     * Take the described generation method also into consideration when you
     * apply the rules in your use cases and assign them confidence levels.
     */


    strings:
        $sequence_0 = { 50 8d15b4994100 e8???????? 58 5a 5f 8b4dfc }
            // n = 7, score = 100
            //   50                   | push                eax
            //   8d15b4994100         | lea                 edx, [0x4199b4]
            //   e8????????           |                     
            //   58                   | pop                 eax
            //   5a                   | pop                 edx
            //   5f                   | pop                 edi
            //   8b4dfc               | mov                 ecx, dword ptr [ebp - 4]

        $sequence_1 = { 68cc010000 68???????? 68???????? 68???????? e8???????? 83c414 b816000000 }
            // n = 7, score = 100
            //   68cc010000           | push                0x1cc
            //   68????????           |                     
            //   68????????           |                     
            //   68????????           |                     
            //   e8????????           |                     
            //   83c414               | add                 esp, 0x14
            //   b816000000           | mov                 eax, 0x16

        $sequence_2 = { 837de810 7249 8b4df4 8b5104 8955cc 0fb64510 50 }
            // n = 7, score = 100
            //   837de810             | cmp                 dword ptr [ebp - 0x18], 0x10
            //   7249                 | jb                  0x4b
            //   8b4df4               | mov                 ecx, dword ptr [ebp - 0xc]
            //   8b5104               | mov                 edx, dword ptr [ecx + 4]
            //   8955cc               | mov                 dword ptr [ebp - 0x34], edx
            //   0fb64510             | movzx               eax, byte ptr [ebp + 0x10]
            //   50                   | push                eax

        $sequence_3 = { 51 0fb755f4 52 e8???????? 83c408 0fb6c0 85c0 }
            // n = 7, score = 100
            //   51                   | push                ecx
            //   0fb755f4             | movzx               edx, word ptr [ebp - 0xc]
            //   52                   | push                edx
            //   e8????????           |                     
            //   83c408               | add                 esp, 8
            //   0fb6c0               | movzx               eax, al
            //   85c0                 | test                eax, eax

        $sequence_4 = { 51 e8???????? 83c404 8ad8 8b4dd4 e8???????? 8818 }
            // n = 7, score = 100
            //   51                   | push                ecx
            //   e8????????           |                     
            //   83c404               | add                 esp, 4
            //   8ad8                 | mov                 bl, al
            //   8b4dd4               | mov                 ecx, dword ptr [ebp - 0x2c]
            //   e8????????           |                     
            //   8818                 | mov                 byte ptr [eax], bl

        $sequence_5 = { 8b5508 83e23f 6bc238 8b0c8d08ab5600 0fb6540128 83e220 7412 }
            // n = 7, score = 100
            //   8b5508               | mov                 edx, dword ptr [ebp + 8]
            //   83e23f               | and                 edx, 0x3f
            //   6bc238               | imul                eax, edx, 0x38
            //   8b0c8d08ab5600       | mov                 ecx, dword ptr [ecx*4 + 0x56ab08]
            //   0fb6540128           | movzx               edx, byte ptr [ecx + eax + 0x28]
            //   83e220               | and                 edx, 0x20
            //   7412                 | je                  0x14

        $sequence_6 = { 8b4d80 51 8b4d10 e8???????? eb20 b9???????? e8???????? }
            // n = 7, score = 100
            //   8b4d80               | mov                 ecx, dword ptr [ebp - 0x80]
            //   51                   | push                ecx
            //   8b4d10               | mov                 ecx, dword ptr [ebp + 0x10]
            //   e8????????           |                     
            //   eb20                 | jmp                 0x22
            //   b9????????           |                     
            //   e8????????           |                     

        $sequence_7 = { 837d9800 7422 8b4d98 51 8d4dc4 e8???????? 0fbe10 }
            // n = 7, score = 100
            //   837d9800             | cmp                 dword ptr [ebp - 0x68], 0
            //   7422                 | je                  0x24
            //   8b4d98               | mov                 ecx, dword ptr [ebp - 0x68]
            //   51                   | push                ecx
            //   8d4dc4               | lea                 ecx, [ebp - 0x3c]
            //   e8????????           |                     
            //   0fbe10               | movsx               edx, byte ptr [eax]

        $sequence_8 = { 8b08 2b4df8 894df0 837df008 7208 837df027 7702 }
            // n = 7, score = 100
            //   8b08                 | mov                 ecx, dword ptr [eax]
            //   2b4df8               | sub                 ecx, dword ptr [ebp - 8]
            //   894df0               | mov                 dword ptr [ebp - 0x10], ecx
            //   837df008             | cmp                 dword ptr [ebp - 0x10], 8
            //   7208                 | jb                  0xa
            //   837df027             | cmp                 dword ptr [ebp - 0x10], 0x27
            //   7702                 | ja                  4

        $sequence_9 = { 8d45f4 64a300000000 c745b400000000 837d0800 0f8497000000 8b4508 833800 }
            // n = 7, score = 100
            //   8d45f4               | lea                 eax, [ebp - 0xc]
            //   64a300000000         | mov                 dword ptr fs:[0], eax
            //   c745b400000000       | mov                 dword ptr [ebp - 0x4c], 0
            //   837d0800             | cmp                 dword ptr [ebp + 8], 0
            //   0f8497000000         | je                  0x9d
            //   8b4508               | mov                 eax, dword ptr [ebp + 8]
            //   833800               | cmp                 dword ptr [eax], 0

    condition:
        7 of them and filesize < 3080192
}