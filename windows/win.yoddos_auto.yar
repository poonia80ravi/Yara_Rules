rule win_yoddos_auto {

    meta:
        author = "Felix Bilstein - yara-signator at cocacoding dot com"
        date = "2022-10-07"
        version = "1"
        description = "Detects win.yoddos."
        info = "autogenerated rule brought to you by yara-signator"
        tool = "yara-signator v0.6.0"
        signator_config = "callsandjumps;datarefs;binvalue"
        malpedia_reference = "https://malpedia.caad.fkie.fraunhofer.de/details/win.yoddos"
        malpedia_rule_date = "20221007"
        malpedia_hash = "597f9539014e3d0f350c069cd804aa71679486ae"
        malpedia_version = "20221010"
        malpedia_license = "CC BY-SA 4.0"
        malpedia_sharing = "TLP:WHITE"

    /* DISCLAIMER
     * The strings used in this rule have been automatically selected from the
     * disassembly of memory dumps and unpacked files, using YARA-Signator.
     * The code and documentation is published here:
     * https://github.com/fxb-cocacoding/yara-signator
     * As Malpedia is used as data source, please note that for a given
     * number of families, only single samples are documented.
     * This likely impacts the degree of generalization these rules will offer.
     * Take the described generation method also into consideration when you
     * apply the rules in your use cases and assign them confidence levels.
     */


    strings:
        $sequence_0 = { ff55f0 47 3bbd04ffffff 7ce4 e9???????? ff35???????? }
            // n = 6, score = 100
            //   ff55f0               | call                dword ptr [ebp - 0x10]
            //   47                   | inc                 edi
            //   3bbd04ffffff         | cmp                 edi, dword ptr [ebp - 0xfc]
            //   7ce4                 | jl                  0xffffffe6
            //   e9????????           |                     
            //   ff35????????         |                     

        $sequence_1 = { ff15???????? ff15???????? c3 55 8bec 81ecfc000000 53 }
            // n = 7, score = 100
            //   ff15????????         |                     
            //   ff15????????         |                     
            //   c3                   | ret                 
            //   55                   | push                ebp
            //   8bec                 | mov                 ebp, esp
            //   81ecfc000000         | sub                 esp, 0xfc
            //   53                   | push                ebx

        $sequence_2 = { 399dc0fcffff 740c ffb5c0fcffff ff15???????? b863000000 }
            // n = 5, score = 100
            //   399dc0fcffff         | cmp                 dword ptr [ebp - 0x340], ebx
            //   740c                 | je                  0xe
            //   ffb5c0fcffff         | push                dword ptr [ebp - 0x340]
            //   ff15????????         |                     
            //   b863000000           | mov                 eax, 0x63

        $sequence_3 = { 837e1000 c706???????? 7405 e8???????? 837e2000 7407 8bce }
            // n = 7, score = 100
            //   837e1000             | cmp                 dword ptr [esi + 0x10], 0
            //   c706????????         |                     
            //   7405                 | je                  7
            //   e8????????           |                     
            //   837e2000             | cmp                 dword ptr [esi + 0x20], 0
            //   7407                 | je                  9
            //   8bce                 | mov                 ecx, esi

        $sequence_4 = { c645e845 c645e94c c645ea33 c645eb32 c645ec2e c645ed64 }
            // n = 6, score = 100
            //   c645e845             | mov                 byte ptr [ebp - 0x18], 0x45
            //   c645e94c             | mov                 byte ptr [ebp - 0x17], 0x4c
            //   c645ea33             | mov                 byte ptr [ebp - 0x16], 0x33
            //   c645eb32             | mov                 byte ptr [ebp - 0x15], 0x32
            //   c645ec2e             | mov                 byte ptr [ebp - 0x14], 0x2e
            //   c645ed64             | mov                 byte ptr [ebp - 0x13], 0x64

        $sequence_5 = { c685fdfeffff6f c685fefeffff6d 889dfffeffff 899dd0fdffff aa 889d24f9ffff 6a40 }
            // n = 7, score = 100
            //   c685fdfeffff6f       | mov                 byte ptr [ebp - 0x103], 0x6f
            //   c685fefeffff6d       | mov                 byte ptr [ebp - 0x102], 0x6d
            //   889dfffeffff         | mov                 byte ptr [ebp - 0x101], bl
            //   899dd0fdffff         | mov                 dword ptr [ebp - 0x230], ebx
            //   aa                   | stosb               byte ptr es:[edi], al
            //   889d24f9ffff         | mov                 byte ptr [ebp - 0x6dc], bl
            //   6a40                 | push                0x40

        $sequence_6 = { 8d8584fcffff 56 50 8d45f0 50 }
            // n = 5, score = 100
            //   8d8584fcffff         | lea                 eax, [ebp - 0x37c]
            //   56                   | push                esi
            //   50                   | push                eax
            //   8d45f0               | lea                 eax, [ebp - 0x10]
            //   50                   | push                eax

        $sequence_7 = { 8d8540fcffff 6a04 50 8d8540f5ffff 50 }
            // n = 5, score = 100
            //   8d8540fcffff         | lea                 eax, [ebp - 0x3c0]
            //   6a04                 | push                4
            //   50                   | push                eax
            //   8d8540f5ffff         | lea                 eax, [ebp - 0xac0]
            //   50                   | push                eax

        $sequence_8 = { c645e76b c645e834 c645e934 c645ea2e c645eb63 c645ec6e 885ded }
            // n = 7, score = 100
            //   c645e76b             | mov                 byte ptr [ebp - 0x19], 0x6b
            //   c645e834             | mov                 byte ptr [ebp - 0x18], 0x34
            //   c645e934             | mov                 byte ptr [ebp - 0x17], 0x34
            //   c645ea2e             | mov                 byte ptr [ebp - 0x16], 0x2e
            //   c645eb63             | mov                 byte ptr [ebp - 0x15], 0x63
            //   c645ec6e             | mov                 byte ptr [ebp - 0x14], 0x6e
            //   885ded               | mov                 byte ptr [ebp - 0x13], bl

        $sequence_9 = { 6802020000 ff15???????? 6a18 33c0 59 8dbd04feffff }
            // n = 6, score = 100
            //   6802020000           | push                0x202
            //   ff15????????         |                     
            //   6a18                 | push                0x18
            //   33c0                 | xor                 eax, eax
            //   59                   | pop                 ecx
            //   8dbd04feffff         | lea                 edi, [ebp - 0x1fc]

    condition:
        7 of them and filesize < 557056
}