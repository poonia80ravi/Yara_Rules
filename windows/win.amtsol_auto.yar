rule win_amtsol_auto {

    meta:
        author = "Felix Bilstein - yara-signator at cocacoding dot com"
        date = "2022-10-07"
        version = "1"
        description = "Detects win.amtsol."
        info = "autogenerated rule brought to you by yara-signator"
        tool = "yara-signator v0.6.0"
        signator_config = "callsandjumps;datarefs;binvalue"
        malpedia_reference = "https://malpedia.caad.fkie.fraunhofer.de/details/win.amtsol"
        malpedia_rule_date = "20221007"
        malpedia_hash = "597f9539014e3d0f350c069cd804aa71679486ae"
        malpedia_version = "20221010"
        malpedia_license = "CC BY-SA 4.0"
        malpedia_sharing = "TLP:WHITE"

    /* DISCLAIMER
     * The strings used in this rule have been automatically selected from the
     * disassembly of memory dumps and unpacked files, using YARA-Signator.
     * The code and documentation is published here:
     * https://github.com/fxb-cocacoding/yara-signator
     * As Malpedia is used as data source, please note that for a given
     * number of families, only single samples are documented.
     * This likely impacts the degree of generalization these rules will offer.
     * Take the described generation method also into consideration when you
     * apply the rules in your use cases and assign them confidence levels.
     */


    strings:
        $sequence_0 = { 03549848 8bde c1eb08 23d9 33949848080000 8bde 23d9 }
            // n = 7, score = 100
            //   03549848             | add                 edx, dword ptr [eax + ebx*4 + 0x48]
            //   8bde                 | mov                 ebx, esi
            //   c1eb08               | shr                 ebx, 8
            //   23d9                 | and                 ebx, ecx
            //   33949848080000       | xor                 edx, dword ptr [eax + ebx*4 + 0x848]
            //   8bde                 | mov                 ebx, esi
            //   23d9                 | and                 ebx, ecx

        $sequence_1 = { 59 33c0 59 40 e9???????? 56 e8???????? }
            // n = 7, score = 100
            //   59                   | pop                 ecx
            //   33c0                 | xor                 eax, eax
            //   59                   | pop                 ecx
            //   40                   | inc                 eax
            //   e9????????           |                     
            //   56                   | push                esi
            //   e8????????           |                     

        $sequence_2 = { ab ab ab 8d8558ffffff 50 ff758c }
            // n = 6, score = 100
            //   ab                   | stosd               dword ptr es:[edi], eax
            //   ab                   | stosd               dword ptr es:[edi], eax
            //   ab                   | stosd               dword ptr es:[edi], eax
            //   8d8558ffffff         | lea                 eax, [ebp - 0xa8]
            //   50                   | push                eax
            //   ff758c               | push                dword ptr [ebp - 0x74]

        $sequence_3 = { 56 8b74240c 56 e8???????? 59 a3???????? 85c0 }
            // n = 7, score = 100
            //   56                   | push                esi
            //   8b74240c             | mov                 esi, dword ptr [esp + 0xc]
            //   56                   | push                esi
            //   e8????????           |                     
            //   59                   | pop                 ecx
            //   a3????????           |                     
            //   85c0                 | test                eax, eax

        $sequence_4 = { 23d9 33bc9848080000 8bde 23d9 03bc98480c0000 337810 }
            // n = 6, score = 100
            //   23d9                 | and                 ebx, ecx
            //   33bc9848080000       | xor                 edi, dword ptr [eax + ebx*4 + 0x848]
            //   8bde                 | mov                 ebx, esi
            //   23d9                 | and                 ebx, ecx
            //   03bc98480c0000       | add                 edi, dword ptr [eax + ebx*4 + 0xc48]
            //   337810               | xor                 edi, dword ptr [eax + 0x10]

        $sequence_5 = { 746c d945e4 e8???????? a3???????? 8d45ec }
            // n = 5, score = 100
            //   746c                 | je                  0x6e
            //   d945e4               | fld                 dword ptr [ebp - 0x1c]
            //   e8????????           |                     
            //   a3????????           |                     
            //   8d45ec               | lea                 eax, [ebp - 0x14]

        $sequence_6 = { 50 c645f423 c645f52d c645f639 c645f70a c645f800 }
            // n = 6, score = 100
            //   50                   | push                eax
            //   c645f423             | mov                 byte ptr [ebp - 0xc], 0x23
            //   c645f52d             | mov                 byte ptr [ebp - 0xb], 0x2d
            //   c645f639             | mov                 byte ptr [ebp - 0xa], 0x39
            //   c645f70a             | mov                 byte ptr [ebp - 9], 0xa
            //   c645f800             | mov                 byte ptr [ebp - 8], 0

        $sequence_7 = { 8d840191d386eb 6a15 50 e8???????? 8b55f8 0317 035f0c }
            // n = 7, score = 100
            //   8d840191d386eb       | lea                 eax, [ecx + eax - 0x14792c6f]
            //   6a15                 | push                0x15
            //   50                   | push                eax
            //   e8????????           |                     
            //   8b55f8               | mov                 edx, dword ptr [ebp - 8]
            //   0317                 | add                 edx, dword ptr [edi]
            //   035f0c               | add                 ebx, dword ptr [edi + 0xc]

        $sequence_8 = { c6455768 c6455820 c6455943 c6455a68 c6455b65 c6455c63 c6455d6b }
            // n = 7, score = 100
            //   c6455768             | mov                 byte ptr [ebp + 0x57], 0x68
            //   c6455820             | mov                 byte ptr [ebp + 0x58], 0x20
            //   c6455943             | mov                 byte ptr [ebp + 0x59], 0x43
            //   c6455a68             | mov                 byte ptr [ebp + 0x5a], 0x68
            //   c6455b65             | mov                 byte ptr [ebp + 0x5b], 0x65
            //   c6455c63             | mov                 byte ptr [ebp + 0x5c], 0x63
            //   c6455d6b             | mov                 byte ptr [ebp + 0x5d], 0x6b

        $sequence_9 = { 7c22 3b05???????? 731a 8bc8 83e01f c1f905 8b0c8d20564200 }
            // n = 7, score = 100
            //   7c22                 | jl                  0x24
            //   3b05????????         |                     
            //   731a                 | jae                 0x1c
            //   8bc8                 | mov                 ecx, eax
            //   83e01f               | and                 eax, 0x1f
            //   c1f905               | sar                 ecx, 5
            //   8b0c8d20564200       | mov                 ecx, dword ptr [ecx*4 + 0x425620]

    condition:
        7 of them and filesize < 335872
}