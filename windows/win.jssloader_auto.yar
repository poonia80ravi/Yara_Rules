rule win_jssloader_auto {

    meta:
        author = "Felix Bilstein - yara-signator at cocacoding dot com"
        date = "2022-10-07"
        version = "1"
        description = "Detects win.jssloader."
        info = "autogenerated rule brought to you by yara-signator"
        tool = "yara-signator v0.6.0"
        signator_config = "callsandjumps;datarefs;binvalue"
        malpedia_reference = "https://malpedia.caad.fkie.fraunhofer.de/details/win.jssloader"
        malpedia_rule_date = "20221007"
        malpedia_hash = "597f9539014e3d0f350c069cd804aa71679486ae"
        malpedia_version = "20221010"
        malpedia_license = "CC BY-SA 4.0"
        malpedia_sharing = "TLP:WHITE"

    /* DISCLAIMER
     * The strings used in this rule have been automatically selected from the
     * disassembly of memory dumps and unpacked files, using YARA-Signator.
     * The code and documentation is published here:
     * https://github.com/fxb-cocacoding/yara-signator
     * As Malpedia is used as data source, please note that for a given
     * number of families, only single samples are documented.
     * This likely impacts the degree of generalization these rules will offer.
     * Take the described generation method also into consideration when you
     * apply the rules in your use cases and assign them confidence levels.
     */


    strings:
        $sequence_0 = { 7315 8079010a 750f 41 eb0c 0fb6c0 0fbe80c0024400 }
            // n = 7, score = 200
            //   7315                 | jae                 0x17
            //   8079010a             | cmp                 byte ptr [ecx + 1], 0xa
            //   750f                 | jne                 0x11
            //   41                   | inc                 ecx
            //   eb0c                 | jmp                 0xe
            //   0fb6c0               | movzx               eax, al
            //   0fbe80c0024400       | movsx               eax, byte ptr [eax + 0x4402c0]

        $sequence_1 = { 8d8dd8feffff e8???????? 8b4508 33db c645fc02 895dd0 }
            // n = 6, score = 200
            //   8d8dd8feffff         | lea                 ecx, [ebp - 0x128]
            //   e8????????           |                     
            //   8b4508               | mov                 eax, dword ptr [ebp + 8]
            //   33db                 | xor                 ebx, ebx
            //   c645fc02             | mov                 byte ptr [ebp - 4], 2
            //   895dd0               | mov                 dword ptr [ebp - 0x30], ebx

        $sequence_2 = { e8???????? 8bf0 898508ffffff 83c408 85f6 752c }
            // n = 6, score = 200
            //   e8????????           |                     
            //   8bf0                 | mov                 esi, eax
            //   898508ffffff         | mov                 dword ptr [ebp - 0xf8], eax
            //   83c408               | add                 esp, 8
            //   85f6                 | test                esi, esi
            //   752c                 | jne                 0x2e

        $sequence_3 = { 5e 8be5 5d c20800 83f808 751e 6a04 }
            // n = 7, score = 200
            //   5e                   | pop                 esi
            //   8be5                 | mov                 esp, ebp
            //   5d                   | pop                 ebp
            //   c20800               | ret                 8
            //   83f808               | cmp                 eax, 8
            //   751e                 | jne                 0x20
            //   6a04                 | push                4

        $sequence_4 = { c645fc0f 8b45d4 83f810 722b 8d4801 8bc7 81f900100000 }
            // n = 7, score = 200
            //   c645fc0f             | mov                 byte ptr [ebp - 4], 0xf
            //   8b45d4               | mov                 eax, dword ptr [ebp - 0x2c]
            //   83f810               | cmp                 eax, 0x10
            //   722b                 | jb                  0x2d
            //   8d4801               | lea                 ecx, [eax + 1]
            //   8bc7                 | mov                 eax, edi
            //   81f900100000         | cmp                 ecx, 0x1000

        $sequence_5 = { 0fbe4c1f01 83e10f c1ea06 c1e102 0bd1 0fb68a48bb4300 884802 }
            // n = 7, score = 200
            //   0fbe4c1f01           | movsx               ecx, byte ptr [edi + ebx + 1]
            //   83e10f               | and                 ecx, 0xf
            //   c1ea06               | shr                 edx, 6
            //   c1e102               | shl                 ecx, 2
            //   0bd1                 | or                  edx, ecx
            //   0fb68a48bb4300       | movzx               ecx, byte ptr [edx + 0x43bb48]
            //   884802               | mov                 byte ptr [eax + 2], cl

        $sequence_6 = { ff15???????? 85c0 0f8476020000 89b510ffffff 3975e0 0f8667020000 33ff }
            // n = 7, score = 200
            //   ff15????????         |                     
            //   85c0                 | test                eax, eax
            //   0f8476020000         | je                  0x27c
            //   89b510ffffff         | mov                 dword ptr [ebp - 0xf0], esi
            //   3975e0               | cmp                 dword ptr [ebp - 0x20], esi
            //   0f8667020000         | jbe                 0x26d
            //   33ff                 | xor                 edi, edi

        $sequence_7 = { 83c223 2bc1 83c0fc 83f81f 0f87c4030000 52 51 }
            // n = 7, score = 200
            //   83c223               | add                 edx, 0x23
            //   2bc1                 | sub                 eax, ecx
            //   83c0fc               | add                 eax, -4
            //   83f81f               | cmp                 eax, 0x1f
            //   0f87c4030000         | ja                  0x3ca
            //   52                   | push                edx
            //   51                   | push                ecx

        $sequence_8 = { 68???????? c645bc00 ff75bc 6a01 e8???????? 8bc8 c745e800000000 }
            // n = 7, score = 200
            //   68????????           |                     
            //   c645bc00             | mov                 byte ptr [ebp - 0x44], 0
            //   ff75bc               | push                dword ptr [ebp - 0x44]
            //   6a01                 | push                1
            //   e8????????           |                     
            //   8bc8                 | mov                 ecx, eax
            //   c745e800000000       | mov                 dword ptr [ebp - 0x18], 0

        $sequence_9 = { 83c303 83e13f 0fb68948bb4300 884803 83c004 3b5dec }
            // n = 6, score = 200
            //   83c303               | add                 ebx, 3
            //   83e13f               | and                 ecx, 0x3f
            //   0fb68948bb4300       | movzx               ecx, byte ptr [ecx + 0x43bb48]
            //   884803               | mov                 byte ptr [eax + 3], cl
            //   83c004               | add                 eax, 4
            //   3b5dec               | cmp                 ebx, dword ptr [ebp - 0x14]

    condition:
        7 of them and filesize < 581632
}