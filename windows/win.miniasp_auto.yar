rule win_miniasp_auto {

    meta:
        author = "Felix Bilstein - yara-signator at cocacoding dot com"
        date = "2022-10-07"
        version = "1"
        description = "Detects win.miniasp."
        info = "autogenerated rule brought to you by yara-signator"
        tool = "yara-signator v0.6.0"
        signator_config = "callsandjumps;datarefs;binvalue"
        malpedia_reference = "https://malpedia.caad.fkie.fraunhofer.de/details/win.miniasp"
        malpedia_rule_date = "20221007"
        malpedia_hash = "597f9539014e3d0f350c069cd804aa71679486ae"
        malpedia_version = "20221010"
        malpedia_license = "CC BY-SA 4.0"
        malpedia_sharing = "TLP:WHITE"

    /* DISCLAIMER
     * The strings used in this rule have been automatically selected from the
     * disassembly of memory dumps and unpacked files, using YARA-Signator.
     * The code and documentation is published here:
     * https://github.com/fxb-cocacoding/yara-signator
     * As Malpedia is used as data source, please note that for a given
     * number of families, only single samples are documented.
     * This likely impacts the degree of generalization these rules will offer.
     * Take the described generation method also into consideration when you
     * apply the rules in your use cases and assign them confidence levels.
     */


    strings:
        $sequence_0 = { 8b45c0 898550ffffff 8b8550ffffff 40 89854cffffff 8b8550ffffff }
            // n = 6, score = 100
            //   8b45c0               | mov                 eax, dword ptr [ebp - 0x40]
            //   898550ffffff         | mov                 dword ptr [ebp - 0xb0], eax
            //   8b8550ffffff         | mov                 eax, dword ptr [ebp - 0xb0]
            //   40                   | inc                 eax
            //   89854cffffff         | mov                 dword ptr [ebp - 0xb4], eax
            //   8b8550ffffff         | mov                 eax, dword ptr [ebp - 0xb0]

        $sequence_1 = { ff8518dfffff 80bd17dfffff00 75e2 8bbd18dfffff 8bb520dfffff 8b851cdfffff 8bc8 }
            // n = 7, score = 100
            //   ff8518dfffff         | inc                 dword ptr [ebp - 0x20e8]
            //   80bd17dfffff00       | cmp                 byte ptr [ebp - 0x20e9], 0
            //   75e2                 | jne                 0xffffffe4
            //   8bbd18dfffff         | mov                 edi, dword ptr [ebp - 0x20e8]
            //   8bb520dfffff         | mov                 esi, dword ptr [ebp - 0x20e0]
            //   8b851cdfffff         | mov                 eax, dword ptr [ebp - 0x20e4]
            //   8bc8                 | mov                 ecx, eax

        $sequence_2 = { 50 e8???????? e9???????? 8b45ec 8945b4 ff75b4 }
            // n = 6, score = 100
            //   50                   | push                eax
            //   e8????????           |                     
            //   e9????????           |                     
            //   8b45ec               | mov                 eax, dword ptr [ebp - 0x14]
            //   8945b4               | mov                 dword ptr [ebp - 0x4c], eax
            //   ff75b4               | push                dword ptr [ebp - 0x4c]

        $sequence_3 = { 7506 8365ec00 eb42 8b45f8 894584 8b45ec 894580 }
            // n = 7, score = 100
            //   7506                 | jne                 8
            //   8365ec00             | and                 dword ptr [ebp - 0x14], 0
            //   eb42                 | jmp                 0x44
            //   8b45f8               | mov                 eax, dword ptr [ebp - 8]
            //   894584               | mov                 dword ptr [ebp - 0x7c], eax
            //   8b45ec               | mov                 eax, dword ptr [ebp - 0x14]
            //   894580               | mov                 dword ptr [ebp - 0x80], eax

        $sequence_4 = { 8b4594 8a4001 884593 ff4594 807d9300 75ee }
            // n = 6, score = 100
            //   8b4594               | mov                 eax, dword ptr [ebp - 0x6c]
            //   8a4001               | mov                 al, byte ptr [eax + 1]
            //   884593               | mov                 byte ptr [ebp - 0x6d], al
            //   ff4594               | inc                 dword ptr [ebp - 0x6c]
            //   807d9300             | cmp                 byte ptr [ebp - 0x6d], 0
            //   75ee                 | jne                 0xfffffff0

        $sequence_5 = { ff15???????? 85c0 751b c785dcfbffffccd34000 68???????? 8d85dcfbffff 50 }
            // n = 7, score = 100
            //   ff15????????         |                     
            //   85c0                 | test                eax, eax
            //   751b                 | jne                 0x1d
            //   c785dcfbffffccd34000     | mov    dword ptr [ebp - 0x424], 0x40d3cc
            //   68????????           |                     
            //   8d85dcfbffff         | lea                 eax, [ebp - 0x424]
            //   50                   | push                eax

        $sequence_6 = { 0fb6c0 85c0 7420 68???????? 8b45bc ffb0a8000000 e8???????? }
            // n = 7, score = 100
            //   0fb6c0               | movzx               eax, al
            //   85c0                 | test                eax, eax
            //   7420                 | je                  0x22
            //   68????????           |                     
            //   8b45bc               | mov                 eax, dword ptr [ebp - 0x44]
            //   ffb0a8000000         | push                dword ptr [eax + 0xa8]
            //   e8????????           |                     

        $sequence_7 = { 8b4508 0345f0 0fbe4001 83f861 7c12 8b4508 0345f0 }
            // n = 7, score = 100
            //   8b4508               | mov                 eax, dword ptr [ebp + 8]
            //   0345f0               | add                 eax, dword ptr [ebp - 0x10]
            //   0fbe4001             | movsx               eax, byte ptr [eax + 1]
            //   83f861               | cmp                 eax, 0x61
            //   7c12                 | jl                  0x14
            //   8b4508               | mov                 eax, dword ptr [ebp + 8]
            //   0345f0               | add                 eax, dword ptr [ebp - 0x10]

        $sequence_8 = { 83c40c 8b45fc 8945f0 ff75f0 e8???????? 59 c645fb00 }
            // n = 7, score = 100
            //   83c40c               | add                 esp, 0xc
            //   8b45fc               | mov                 eax, dword ptr [ebp - 4]
            //   8945f0               | mov                 dword ptr [ebp - 0x10], eax
            //   ff75f0               | push                dword ptr [ebp - 0x10]
            //   e8????????           |                     
            //   59                   | pop                 ecx
            //   c645fb00             | mov                 byte ptr [ebp - 5], 0

        $sequence_9 = { 894d98 8d45a0 50 e8???????? }
            // n = 4, score = 100
            //   894d98               | mov                 dword ptr [ebp - 0x68], ecx
            //   8d45a0               | lea                 eax, [ebp - 0x60]
            //   50                   | push                eax
            //   e8????????           |                     

    condition:
        7 of them and filesize < 139264
}