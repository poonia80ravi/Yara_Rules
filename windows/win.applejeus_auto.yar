rule win_applejeus_auto {

    meta:
        author = "Felix Bilstein - yara-signator at cocacoding dot com"
        date = "2022-10-07"
        version = "1"
        description = "Detects win.applejeus."
        info = "autogenerated rule brought to you by yara-signator"
        tool = "yara-signator v0.6.0"
        signator_config = "callsandjumps;datarefs;binvalue"
        malpedia_reference = "https://malpedia.caad.fkie.fraunhofer.de/details/win.applejeus"
        malpedia_rule_date = "20221007"
        malpedia_hash = "597f9539014e3d0f350c069cd804aa71679486ae"
        malpedia_version = "20221010"
        malpedia_license = "CC BY-SA 4.0"
        malpedia_sharing = "TLP:WHITE"

    /* DISCLAIMER
     * The strings used in this rule have been automatically selected from the
     * disassembly of memory dumps and unpacked files, using YARA-Signator.
     * The code and documentation is published here:
     * https://github.com/fxb-cocacoding/yara-signator
     * As Malpedia is used as data source, please note that for a given
     * number of families, only single samples are documented.
     * This likely impacts the degree of generalization these rules will offer.
     * Take the described generation method also into consideration when you
     * apply the rules in your use cases and assign them confidence levels.
     */


    strings:
        $sequence_0 = { 0fb7c0 83c0f8 6689844df4ecffff 41 83f909 72e4 b865000000 }
            // n = 7, score = 100
            //   0fb7c0               | movzx               eax, ax
            //   83c0f8               | add                 eax, -8
            //   6689844df4ecffff     | mov                 word ptr [ebp + ecx*2 - 0x130c], ax
            //   41                   | inc                 ecx
            //   83f909               | cmp                 ecx, 9
            //   72e4                 | jb                  0xffffffe6
            //   b865000000           | mov                 eax, 0x65

        $sequence_1 = { 8d45e8 8b75f4 50 81c6fb020000 6a00 2b4dec }
            // n = 6, score = 100
            //   8d45e8               | lea                 eax, [ebp - 0x18]
            //   8b75f4               | mov                 esi, dword ptr [ebp - 0xc]
            //   50                   | push                eax
            //   81c6fb020000         | add                 esi, 0x2fb
            //   6a00                 | push                0
            //   2b4dec               | sub                 ecx, dword ptr [ebp - 0x14]

        $sequence_2 = { 85c0 740b 6a04 50 e8???????? 83c408 8b4710 }
            // n = 7, score = 100
            //   85c0                 | test                eax, eax
            //   740b                 | je                  0xd
            //   6a04                 | push                4
            //   50                   | push                eax
            //   e8????????           |                     
            //   83c408               | add                 esp, 8
            //   8b4710               | mov                 eax, dword ptr [edi + 0x10]

        $sequence_3 = { 888553ffffff 8b854cffffff 0404 83f041 888554ffffff 8b854cffffff 0405 }
            // n = 7, score = 100
            //   888553ffffff         | mov                 byte ptr [ebp - 0xad], al
            //   8b854cffffff         | mov                 eax, dword ptr [ebp - 0xb4]
            //   0404                 | add                 al, 4
            //   83f041               | xor                 eax, 0x41
            //   888554ffffff         | mov                 byte ptr [ebp - 0xac], al
            //   8b854cffffff         | mov                 eax, dword ptr [ebp - 0xb4]
            //   0405                 | add                 al, 5

        $sequence_4 = { 8b45dc 8b4010 8b00 8b4df4 64890d00000000 59 5f }
            // n = 7, score = 100
            //   8b45dc               | mov                 eax, dword ptr [ebp - 0x24]
            //   8b4010               | mov                 eax, dword ptr [eax + 0x10]
            //   8b00                 | mov                 eax, dword ptr [eax]
            //   8b4df4               | mov                 ecx, dword ptr [ebp - 0xc]
            //   64890d00000000       | mov                 dword ptr fs:[0], ecx
            //   59                   | pop                 ecx
            //   5f                   | pop                 edi

        $sequence_5 = { 66660f1f840000000000 8a8415f0f5ffff 0fbe8decf5ffff 0fbec0 33c1 888415f0f5ffff }
            // n = 6, score = 100
            //   66660f1f840000000000     | nop    word ptr [eax + eax]
            //   8a8415f0f5ffff       | mov                 al, byte ptr [ebp + edx - 0xa10]
            //   0fbe8decf5ffff       | movsx               ecx, byte ptr [ebp - 0xa14]
            //   0fbec0               | movsx               eax, al
            //   33c1                 | xor                 eax, ecx
            //   888415f0f5ffff       | mov                 byte ptr [ebp + edx - 0xa10], al

        $sequence_6 = { c745a400000000 c745a4b3040000 8b55a4 8b4f08 81f2490f0000 c745a421070000 81f2fa0b0000 }
            // n = 7, score = 100
            //   c745a400000000       | mov                 dword ptr [ebp - 0x5c], 0
            //   c745a4b3040000       | mov                 dword ptr [ebp - 0x5c], 0x4b3
            //   8b55a4               | mov                 edx, dword ptr [ebp - 0x5c]
            //   8b4f08               | mov                 ecx, dword ptr [edi + 8]
            //   81f2490f0000         | xor                 edx, 0xf49
            //   c745a421070000       | mov                 dword ptr [ebp - 0x5c], 0x721
            //   81f2fa0b0000         | xor                 edx, 0xbfa

        $sequence_7 = { 6a00 51 8b04857cff4600 ffd0 8b75e4 83c410 0bf0 }
            // n = 7, score = 100
            //   6a00                 | push                0
            //   51                   | push                ecx
            //   8b04857cff4600       | mov                 eax, dword ptr [eax*4 + 0x46ff7c]
            //   ffd0                 | call                eax
            //   8b75e4               | mov                 esi, dword ptr [ebp - 0x1c]
            //   83c410               | add                 esp, 0x10
            //   0bf0                 | or                  esi, eax

        $sequence_8 = { 8945e0 8945d0 c700???????? 897804 897008 e8???????? f30f7e45c0 }
            // n = 7, score = 100
            //   8945e0               | mov                 dword ptr [ebp - 0x20], eax
            //   8945d0               | mov                 dword ptr [ebp - 0x30], eax
            //   c700????????         |                     
            //   897804               | mov                 dword ptr [eax + 4], edi
            //   897008               | mov                 dword ptr [eax + 8], esi
            //   e8????????           |                     
            //   f30f7e45c0           | movq                xmm0, qword ptr [ebp - 0x40]

        $sequence_9 = { 8d8568ffffff 50 c78568ffffff20434200 c7856cffffff00000000 895580 897584 897d88 }
            // n = 7, score = 100
            //   8d8568ffffff         | lea                 eax, [ebp - 0x98]
            //   50                   | push                eax
            //   c78568ffffff20434200     | mov    dword ptr [ebp - 0x98], 0x424320
            //   c7856cffffff00000000     | mov    dword ptr [ebp - 0x94], 0
            //   895580               | mov                 dword ptr [ebp - 0x80], edx
            //   897584               | mov                 dword ptr [ebp - 0x7c], esi
            //   897d88               | mov                 dword ptr [ebp - 0x78], edi

    condition:
        7 of them and filesize < 1245184
}