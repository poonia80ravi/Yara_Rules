rule win_exaramel_auto {

    meta:
        author = "Felix Bilstein - yara-signator at cocacoding dot com"
        date = "2022-10-07"
        version = "1"
        description = "Detects win.exaramel."
        info = "autogenerated rule brought to you by yara-signator"
        tool = "yara-signator v0.6.0"
        signator_config = "callsandjumps;datarefs;binvalue"
        malpedia_reference = "https://malpedia.caad.fkie.fraunhofer.de/details/win.exaramel"
        malpedia_rule_date = "20221007"
        malpedia_hash = "597f9539014e3d0f350c069cd804aa71679486ae"
        malpedia_version = "20221010"
        malpedia_license = "CC BY-SA 4.0"
        malpedia_sharing = "TLP:WHITE"

    /* DISCLAIMER
     * The strings used in this rule have been automatically selected from the
     * disassembly of memory dumps and unpacked files, using YARA-Signator.
     * The code and documentation is published here:
     * https://github.com/fxb-cocacoding/yara-signator
     * As Malpedia is used as data source, please note that for a given
     * number of families, only single samples are documented.
     * This likely impacts the degree of generalization these rules will offer.
     * Take the described generation method also into consideration when you
     * apply the rules in your use cases and assign them confidence levels.
     */


    strings:
        $sequence_0 = { 3d04010000 7763 85c0 745f 8d85f4fdffff 50 }
            // n = 6, score = 100
            //   3d04010000           | cmp                 eax, 0x104
            //   7763                 | ja                  0x65
            //   85c0                 | test                eax, eax
            //   745f                 | je                  0x61
            //   8d85f4fdffff         | lea                 eax, [ebp - 0x20c]
            //   50                   | push                eax

        $sequence_1 = { 5d c3 56 8d45e8 50 8d45f8 }
            // n = 6, score = 100
            //   5d                   | pop                 ebp
            //   c3                   | ret                 
            //   56                   | push                esi
            //   8d45e8               | lea                 eax, [ebp - 0x18]
            //   50                   | push                eax
            //   8d45f8               | lea                 eax, [ebp - 8]

        $sequence_2 = { 33c0 8d3c9d78db4100 f00fb10f 8bc8 85c9 740b 8d4101 }
            // n = 7, score = 100
            //   33c0                 | xor                 eax, eax
            //   8d3c9d78db4100       | lea                 edi, [ebx*4 + 0x41db78]
            //   f00fb10f             | lock cmpxchg        dword ptr [edi], ecx
            //   8bc8                 | mov                 ecx, eax
            //   85c9                 | test                ecx, ecx
            //   740b                 | je                  0xd
            //   8d4101               | lea                 eax, [ecx + 1]

        $sequence_3 = { 898590f7ffff 8d85ecfbffff 57 50 }
            // n = 4, score = 100
            //   898590f7ffff         | mov                 dword ptr [ebp - 0x870], eax
            //   8d85ecfbffff         | lea                 eax, [ebp - 0x414]
            //   57                   | push                edi
            //   50                   | push                eax

        $sequence_4 = { 6a04 50 e8???????? 83c410 8d85f4fdffff 6a00 6a00 }
            // n = 7, score = 100
            //   6a04                 | push                4
            //   50                   | push                eax
            //   e8????????           |                     
            //   83c410               | add                 esp, 0x10
            //   8d85f4fdffff         | lea                 eax, [ebp - 0x20c]
            //   6a00                 | push                0
            //   6a00                 | push                0

        $sequence_5 = { 8b049560dd4100 f644082801 7414 8d4508 8945fc 8d45fc 50 }
            // n = 7, score = 100
            //   8b049560dd4100       | mov                 eax, dword ptr [edx*4 + 0x41dd60]
            //   f644082801           | test                byte ptr [eax + ecx + 0x28], 1
            //   7414                 | je                  0x16
            //   8d4508               | lea                 eax, [ebp + 8]
            //   8945fc               | mov                 dword ptr [ebp - 4], eax
            //   8d45fc               | lea                 eax, [ebp - 4]
            //   50                   | push                eax

        $sequence_6 = { ff15???????? 85c0 740b 891e 33f6 5b 5f }
            // n = 7, score = 100
            //   ff15????????         |                     
            //   85c0                 | test                eax, eax
            //   740b                 | je                  0xd
            //   891e                 | mov                 dword ptr [esi], ebx
            //   33f6                 | xor                 esi, esi
            //   5b                   | pop                 ebx
            //   5f                   | pop                 edi

        $sequence_7 = { a1???????? 33c5 8945fc 8b4514 f30f7e450c 56 8b7518 }
            // n = 7, score = 100
            //   a1????????           |                     
            //   33c5                 | xor                 eax, ebp
            //   8945fc               | mov                 dword ptr [ebp - 4], eax
            //   8b4514               | mov                 eax, dword ptr [ebp + 0x14]
            //   f30f7e450c           | movq                xmm0, qword ptr [ebp + 0xc]
            //   56                   | push                esi
            //   8b7518               | mov                 esi, dword ptr [ebp + 0x18]

        $sequence_8 = { 6a00 6a01 6800000080 894dc0 8b4d10 50 894dc4 }
            // n = 7, score = 100
            //   6a00                 | push                0
            //   6a01                 | push                1
            //   6800000080           | push                0x80000000
            //   894dc0               | mov                 dword ptr [ebp - 0x40], ecx
            //   8b4d10               | mov                 ecx, dword ptr [ebp + 0x10]
            //   50                   | push                eax
            //   894dc4               | mov                 dword ptr [ebp - 0x3c], ecx

        $sequence_9 = { ffb5f0fdffff ff15???????? 50 e8???????? 68???????? 8d85f4fdffff 50 }
            // n = 7, score = 100
            //   ffb5f0fdffff         | push                dword ptr [ebp - 0x210]
            //   ff15????????         |                     
            //   50                   | push                eax
            //   e8????????           |                     
            //   68????????           |                     
            //   8d85f4fdffff         | lea                 eax, [ebp - 0x20c]
            //   50                   | push                eax

    condition:
        7 of them and filesize < 294912
}