rule win_alma_communicator_auto {

    meta:
        author = "Felix Bilstein - yara-signator at cocacoding dot com"
        date = "2022-10-07"
        version = "1"
        description = "Detects win.alma_communicator."
        info = "autogenerated rule brought to you by yara-signator"
        tool = "yara-signator v0.6.0"
        signator_config = "callsandjumps;datarefs;binvalue"
        malpedia_reference = "https://malpedia.caad.fkie.fraunhofer.de/details/win.alma_communicator"
        malpedia_rule_date = "20221007"
        malpedia_hash = "597f9539014e3d0f350c069cd804aa71679486ae"
        malpedia_version = "20221010"
        malpedia_license = "CC BY-SA 4.0"
        malpedia_sharing = "TLP:WHITE"

    /* DISCLAIMER
     * The strings used in this rule have been automatically selected from the
     * disassembly of memory dumps and unpacked files, using YARA-Signator.
     * The code and documentation is published here:
     * https://github.com/fxb-cocacoding/yara-signator
     * As Malpedia is used as data source, please note that for a given
     * number of families, only single samples are documented.
     * This likely impacts the degree of generalization these rules will offer.
     * Take the described generation method also into consideration when you
     * apply the rules in your use cases and assign them confidence levels.
     */


    strings:
        $sequence_0 = { 83e103 f3a4 8dbd44f4ffff 4f }
            // n = 4, score = 100
            //   83e103               | and                 ecx, 3
            //   f3a4                 | rep movsb           byte ptr es:[edi], byte ptr [esi]
            //   8dbd44f4ffff         | lea                 edi, [ebp - 0xbbc]
            //   4f                   | dec                 edi

        $sequence_1 = { 8d5101 8a01 41 84c0 75f9 2bca 83c1f4 }
            // n = 7, score = 100
            //   8d5101               | lea                 edx, [ecx + 1]
            //   8a01                 | mov                 al, byte ptr [ecx]
            //   41                   | inc                 ecx
            //   84c0                 | test                al, al
            //   75f9                 | jne                 0xfffffffb
            //   2bca                 | sub                 ecx, edx
            //   83c1f4               | add                 ecx, -0xc

        $sequence_2 = { 899548f7ffff 8bd9 56 ba???????? e8???????? 33f6 }
            // n = 6, score = 100
            //   899548f7ffff         | mov                 dword ptr [ebp - 0x8b8], edx
            //   8bd9                 | mov                 ebx, ecx
            //   56                   | push                esi
            //   ba????????           |                     
            //   e8????????           |                     
            //   33f6                 | xor                 esi, esi

        $sequence_3 = { e8???????? ff7608 8845f5 e8???????? ff760c 8845f6 e8???????? }
            // n = 7, score = 100
            //   e8????????           |                     
            //   ff7608               | push                dword ptr [esi + 8]
            //   8845f5               | mov                 byte ptr [ebp - 0xb], al
            //   e8????????           |                     
            //   ff760c               | push                dword ptr [esi + 0xc]
            //   8845f6               | mov                 byte ptr [ebp - 0xa], al
            //   e8????????           |                     

        $sequence_4 = { 8365fc00 8b049df08f4100 8b4de0 f644082801 7515 e8???????? c70009000000 }
            // n = 7, score = 100
            //   8365fc00             | and                 dword ptr [ebp - 4], 0
            //   8b049df08f4100       | mov                 eax, dword ptr [ebx*4 + 0x418ff0]
            //   8b4de0               | mov                 ecx, dword ptr [ebp - 0x20]
            //   f644082801           | test                byte ptr [eax + ecx + 0x28], 1
            //   7515                 | jne                 0x17
            //   e8????????           |                     
            //   c70009000000         | mov                 dword ptr [eax], 9

        $sequence_5 = { 59 8b8dd0ebffff 33d2 e8???????? 6a01 ffb5d0ebffff }
            // n = 6, score = 100
            //   59                   | pop                 ecx
            //   8b8dd0ebffff         | mov                 ecx, dword ptr [ebp - 0x1430]
            //   33d2                 | xor                 edx, edx
            //   e8????????           |                     
            //   6a01                 | push                1
            //   ffb5d0ebffff         | push                dword ptr [ebp - 0x1430]

        $sequence_6 = { 66890c17 8d5202 6685c9 75f1 50 e8???????? }
            // n = 6, score = 100
            //   66890c17             | mov                 word ptr [edi + edx], cx
            //   8d5202               | lea                 edx, [edx + 2]
            //   6685c9               | test                cx, cx
            //   75f1                 | jne                 0xfffffff3
            //   50                   | push                eax
            //   e8????????           |                     

        $sequence_7 = { 740e ff34b7 e8???????? 46 59 3bf3 }
            // n = 6, score = 100
            //   740e                 | je                  0x10
            //   ff34b7               | push                dword ptr [edi + esi*4]
            //   e8????????           |                     
            //   46                   | inc                 esi
            //   59                   | pop                 ecx
            //   3bf3                 | cmp                 esi, ebx

        $sequence_8 = { 6bc930 8b0485f08f4100 f644082801 7406 8b440818 }
            // n = 5, score = 100
            //   6bc930               | imul                ecx, ecx, 0x30
            //   8b0485f08f4100       | mov                 eax, dword ptr [eax*4 + 0x418ff0]
            //   f644082801           | test                byte ptr [eax + ecx + 0x28], 1
            //   7406                 | je                  8
            //   8b440818             | mov                 eax, dword ptr [eax + ecx + 0x18]

        $sequence_9 = { 84c0 7536 8b4e08 803939 }
            // n = 4, score = 100
            //   84c0                 | test                al, al
            //   7536                 | jne                 0x38
            //   8b4e08               | mov                 ecx, dword ptr [esi + 8]
            //   803939               | cmp                 byte ptr [ecx], 0x39

    condition:
        7 of them and filesize < 245760
}