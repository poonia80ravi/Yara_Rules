rule win_xpan_auto {

    meta:
        author = "Felix Bilstein - yara-signator at cocacoding dot com"
        date = "2022-10-07"
        version = "1"
        description = "Detects win.xpan."
        info = "autogenerated rule brought to you by yara-signator"
        tool = "yara-signator v0.6.0"
        signator_config = "callsandjumps;datarefs;binvalue"
        malpedia_reference = "https://malpedia.caad.fkie.fraunhofer.de/details/win.xpan"
        malpedia_rule_date = "20221007"
        malpedia_hash = "597f9539014e3d0f350c069cd804aa71679486ae"
        malpedia_version = "20221010"
        malpedia_license = "CC BY-SA 4.0"
        malpedia_sharing = "TLP:WHITE"

    /* DISCLAIMER
     * The strings used in this rule have been automatically selected from the
     * disassembly of memory dumps and unpacked files, using YARA-Signator.
     * The code and documentation is published here:
     * https://github.com/fxb-cocacoding/yara-signator
     * As Malpedia is used as data source, please note that for a given
     * number of families, only single samples are documented.
     * This likely impacts the degree of generalization these rules will offer.
     * Take the described generation method also into consideration when you
     * apply the rules in your use cases and assign them confidence levels.
     */


    strings:
        $sequence_0 = { 8b13 89c1 8945e4 29d1 01f9 7423 }
            // n = 6, score = 400
            //   8b13                 | mov                 edx, dword ptr [ebx]
            //   89c1                 | mov                 ecx, eax
            //   8945e4               | mov                 dword ptr [ebp - 0x1c], eax
            //   29d1                 | sub                 ecx, edx
            //   01f9                 | add                 ecx, edi
            //   7423                 | je                  0x25

        $sequence_1 = { e9???????? 807db100 0f85cd070000 8b45c0 c645b300 31f6 31ff }
            // n = 7, score = 400
            //   e9????????           |                     
            //   807db100             | cmp                 byte ptr [ebp - 0x4f], 0
            //   0f85cd070000         | jne                 0x7d3
            //   8b45c0               | mov                 eax, dword ptr [ebp - 0x40]
            //   c645b300             | mov                 byte ptr [ebp - 0x4d], 0
            //   31f6                 | xor                 esi, esi
            //   31ff                 | xor                 edi, edi

        $sequence_2 = { e9???????? 31c9 ba57000780 31db e9???????? 8b6c2440 31db }
            // n = 7, score = 400
            //   e9????????           |                     
            //   31c9                 | xor                 ecx, ecx
            //   ba57000780           | mov                 edx, 0x80070057
            //   31db                 | xor                 ebx, ebx
            //   e9????????           |                     
            //   8b6c2440             | mov                 ebp, dword ptr [esp + 0x40]
            //   31db                 | xor                 ebx, ebx

        $sequence_3 = { 8845df 8b03 8d7e01 3945e0 0f84be000000 8b5308 39d7 }
            // n = 7, score = 400
            //   8845df               | mov                 byte ptr [ebp - 0x21], al
            //   8b03                 | mov                 eax, dword ptr [ebx]
            //   8d7e01               | lea                 edi, [esi + 1]
            //   3945e0               | cmp                 dword ptr [ebp - 0x20], eax
            //   0f84be000000         | je                  0xc4
            //   8b5308               | mov                 edx, dword ptr [ebx + 8]
            //   39d7                 | cmp                 edi, edx

        $sequence_4 = { e9???????? c645c900 c645ca01 e9???????? 8d7510 8d4d08 893424 }
            // n = 7, score = 400
            //   e9????????           |                     
            //   c645c900             | mov                 byte ptr [ebp - 0x37], 0
            //   c645ca01             | mov                 byte ptr [ebp - 0x36], 1
            //   e9????????           |                     
            //   8d7510               | lea                 esi, [ebp + 0x10]
            //   8d4d08               | lea                 ecx, [ebp + 8]
            //   893424               | mov                 dword ptr [esp], esi

        $sequence_5 = { 0f844f030000 66397324 0f8414020000 0fb64dc0 8b45a8 8b55b8 8d7600 }
            // n = 7, score = 400
            //   0f844f030000         | je                  0x355
            //   66397324             | cmp                 word ptr [ebx + 0x24], si
            //   0f8414020000         | je                  0x21a
            //   0fb64dc0             | movzx               ecx, byte ptr [ebp - 0x40]
            //   8b45a8               | mov                 eax, dword ptr [ebp - 0x58]
            //   8b55b8               | mov                 edx, dword ptr [ebp - 0x48]
            //   8d7600               | lea                 esi, [esi]

        $sequence_6 = { 85ff 0f8496000000 85d2 b8???????? 0f44d0 8db600000000 85f6 }
            // n = 7, score = 400
            //   85ff                 | test                edi, edi
            //   0f8496000000         | je                  0x9c
            //   85d2                 | test                edx, edx
            //   b8????????           |                     
            //   0f44d0               | cmove               edx, eax
            //   8db600000000         | lea                 esi, [esi]
            //   85f6                 | test                esi, esi

        $sequence_7 = { 85c0 0f94c0 3a45a3 0f876bffffff 807da200 0f8561ffffff 807dc000 }
            // n = 7, score = 400
            //   85c0                 | test                eax, eax
            //   0f94c0               | sete                al
            //   3a45a3               | cmp                 al, byte ptr [ebp - 0x5d]
            //   0f876bffffff         | ja                  0xffffff71
            //   807da200             | cmp                 byte ptr [ebp - 0x5e], 0
            //   0f8561ffffff         | jne                 0xffffff67
            //   807dc000             | cmp                 byte ptr [ebp - 0x40], 0

        $sequence_8 = { 31c0 66f7c200ff 7557 6685d2 8d6e12 7447 8d5e04 }
            // n = 7, score = 400
            //   31c0                 | xor                 eax, eax
            //   66f7c200ff           | test                dx, 0xff00
            //   7557                 | jne                 0x59
            //   6685d2               | test                dx, dx
            //   8d6e12               | lea                 ebp, [esi + 0x12]
            //   7447                 | je                  0x49
            //   8d5e04               | lea                 ebx, [esi + 4]

        $sequence_9 = { 0f8452feffff 803800 0f8449feffff 85f6 89d8 0f45c6 83fe01 }
            // n = 7, score = 400
            //   0f8452feffff         | je                  0xfffffe58
            //   803800               | cmp                 byte ptr [eax], 0
            //   0f8449feffff         | je                  0xfffffe4f
            //   85f6                 | test                esi, esi
            //   89d8                 | mov                 eax, ebx
            //   0f45c6               | cmovne              eax, esi
            //   83fe01               | cmp                 esi, 1

    condition:
        7 of them and filesize < 3235840
}