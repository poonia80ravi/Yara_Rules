rule win_coredn_auto {

    meta:
        author = "Felix Bilstein - yara-signator at cocacoding dot com"
        date = "2022-10-07"
        version = "1"
        description = "Detects win.coredn."
        info = "autogenerated rule brought to you by yara-signator"
        tool = "yara-signator v0.6.0"
        signator_config = "callsandjumps;datarefs;binvalue"
        malpedia_reference = "https://malpedia.caad.fkie.fraunhofer.de/details/win.coredn"
        malpedia_rule_date = "20221007"
        malpedia_hash = "597f9539014e3d0f350c069cd804aa71679486ae"
        malpedia_version = "20221010"
        malpedia_license = "CC BY-SA 4.0"
        malpedia_sharing = "TLP:WHITE"

    /* DISCLAIMER
     * The strings used in this rule have been automatically selected from the
     * disassembly of memory dumps and unpacked files, using YARA-Signator.
     * The code and documentation is published here:
     * https://github.com/fxb-cocacoding/yara-signator
     * As Malpedia is used as data source, please note that for a given
     * number of families, only single samples are documented.
     * This likely impacts the degree of generalization these rules will offer.
     * Take the described generation method also into consideration when you
     * apply the rules in your use cases and assign them confidence levels.
     */


    strings:
        $sequence_0 = { 56 8d45fc 8bf1 50 e8???????? 85c0 }
            // n = 6, score = 600
            //   56                   | push                esi
            //   8d45fc               | lea                 eax, [ebp - 4]
            //   8bf1                 | mov                 esi, ecx
            //   50                   | push                eax
            //   e8????????           |                     
            //   85c0                 | test                eax, eax

        $sequence_1 = { 8bec 51 56 8bf1 8b16 85d2 }
            // n = 6, score = 400
            //   8bec                 | mov                 ebp, esp
            //   51                   | push                ecx
            //   56                   | push                esi
            //   8bf1                 | mov                 esi, ecx
            //   8b16                 | mov                 edx, dword ptr [esi]
            //   85d2                 | test                edx, edx

        $sequence_2 = { 6a01 50 e8???????? 83c408 8b442418 85c0 }
            // n = 6, score = 400
            //   6a01                 | push                1
            //   50                   | push                eax
            //   e8????????           |                     
            //   83c408               | add                 esp, 8
            //   8b442418             | mov                 eax, dword ptr [esp + 0x18]
            //   85c0                 | test                eax, eax

        $sequence_3 = { 5d c20400 c60100 33c0 5e }
            // n = 5, score = 400
            //   5d                   | pop                 ebp
            //   c20400               | ret                 4
            //   c60100               | mov                 byte ptr [ecx], 0
            //   33c0                 | xor                 eax, eax
            //   5e                   | pop                 esi

        $sequence_4 = { b857000780 85c0 784f 53 }
            // n = 4, score = 400
            //   b857000780           | mov                 eax, 0x80070057
            //   85c0                 | test                eax, eax
            //   784f                 | js                  0x51
            //   53                   | push                ebx

        $sequence_5 = { 49 bb7a000780 5f 5e 8bc3 c60100 5b }
            // n = 7, score = 400
            //   49                   | dec                 ecx
            //   bb7a000780           | mov                 ebx, 0x8007007a
            //   5f                   | pop                 edi
            //   5e                   | pop                 esi
            //   8bc3                 | mov                 eax, ebx
            //   c60100               | mov                 byte ptr [ecx], 0
            //   5b                   | pop                 ebx

        $sequence_6 = { 2bf1 6690 8d82fafeff7f 85c0 741c 8a040e }
            // n = 6, score = 400
            //   2bf1                 | sub                 esi, ecx
            //   6690                 | nop                 
            //   8d82fafeff7f         | lea                 eax, [edx + 0x7ffffefa]
            //   85c0                 | test                eax, eax
            //   741c                 | je                  0x1e
            //   8a040e               | mov                 al, byte ptr [esi + ecx]

        $sequence_7 = { 75e7 8851ff b87a000780 5e }
            // n = 4, score = 400
            //   75e7                 | jne                 0xffffffe9
            //   8851ff               | mov                 byte ptr [ecx - 1], dl
            //   b87a000780           | mov                 eax, 0x8007007a
            //   5e                   | pop                 esi

        $sequence_8 = { 5e 5d c20400 85d2 750d 8851ff }
            // n = 6, score = 400
            //   5e                   | pop                 esi
            //   5d                   | pop                 ebp
            //   c20400               | ret                 4
            //   85d2                 | test                edx, edx
            //   750d                 | jne                 0xf
            //   8851ff               | mov                 byte ptr [ecx - 1], dl

        $sequence_9 = { 85d2 7423 8a1c06 84db }
            // n = 4, score = 400
            //   85d2                 | test                edx, edx
            //   7423                 | je                  0x25
            //   8a1c06               | mov                 bl, byte ptr [esi + eax]
            //   84db                 | test                bl, bl

        $sequence_10 = { 75ca 8b4608 5b 5f 5e }
            // n = 5, score = 400
            //   75ca                 | jne                 0xffffffcc
            //   8b4608               | mov                 eax, dword ptr [esi + 8]
            //   5b                   | pop                 ebx
            //   5f                   | pop                 edi
            //   5e                   | pop                 esi

        $sequence_11 = { 6a02 50 e8???????? 83c408 53 8bce e8???????? }
            // n = 7, score = 400
            //   6a02                 | push                2
            //   50                   | push                eax
            //   e8????????           |                     
            //   83c408               | add                 esp, 8
            //   53                   | push                ebx
            //   8bce                 | mov                 ecx, esi
            //   e8????????           |                     

        $sequence_12 = { 03d1 2bf0 85d2 7423 }
            // n = 4, score = 400
            //   03d1                 | add                 edx, ecx
            //   2bf0                 | sub                 esi, eax
            //   85d2                 | test                edx, edx
            //   7423                 | je                  0x25

        $sequence_13 = { e8???????? 83c408 57 8b3e }
            // n = 4, score = 400
            //   e8????????           |                     
            //   83c408               | add                 esp, 8
            //   57                   | push                edi
            //   8b3e                 | mov                 edi, dword ptr [esi]

        $sequence_14 = { 84c0 75f9 2bca 7444 }
            // n = 4, score = 400
            //   84c0                 | test                al, al
            //   75f9                 | jne                 0xfffffffb
            //   2bca                 | sub                 ecx, edx
            //   7444                 | je                  0x46

        $sequence_15 = { 8a040e 84c0 7415 8801 41 83ea01 75e7 }
            // n = 7, score = 400
            //   8a040e               | mov                 al, byte ptr [esi + ecx]
            //   84c0                 | test                al, al
            //   7415                 | je                  0x17
            //   8801                 | mov                 byte ptr [ecx], al
            //   41                   | inc                 ecx
            //   83ea01               | sub                 edx, 1
            //   75e7                 | jne                 0xffffffe9

    condition:
        7 of them and filesize < 385024
}