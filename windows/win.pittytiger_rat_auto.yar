rule win_pittytiger_rat_auto {

    meta:
        author = "Felix Bilstein - yara-signator at cocacoding dot com"
        date = "2022-10-07"
        version = "1"
        description = "Detects win.pittytiger_rat."
        info = "autogenerated rule brought to you by yara-signator"
        tool = "yara-signator v0.6.0"
        signator_config = "callsandjumps;datarefs;binvalue"
        malpedia_reference = "https://malpedia.caad.fkie.fraunhofer.de/details/win.pittytiger_rat"
        malpedia_rule_date = "20221007"
        malpedia_hash = "597f9539014e3d0f350c069cd804aa71679486ae"
        malpedia_version = "20221010"
        malpedia_license = "CC BY-SA 4.0"
        malpedia_sharing = "TLP:WHITE"

    /* DISCLAIMER
     * The strings used in this rule have been automatically selected from the
     * disassembly of memory dumps and unpacked files, using YARA-Signator.
     * The code and documentation is published here:
     * https://github.com/fxb-cocacoding/yara-signator
     * As Malpedia is used as data source, please note that for a given
     * number of families, only single samples are documented.
     * This likely impacts the degree of generalization these rules will offer.
     * Take the described generation method also into consideration when you
     * apply the rules in your use cases and assign them confidence levels.
     */


    strings:
        $sequence_0 = { 6a00 50 8975fc e8???????? 83c40c 8d85d0fdffff }
            // n = 6, score = 100
            //   6a00                 | push                0
            //   50                   | push                eax
            //   8975fc               | mov                 dword ptr [ebp - 4], esi
            //   e8????????           |                     
            //   83c40c               | add                 esp, 0xc
            //   8d85d0fdffff         | lea                 eax, [ebp - 0x230]

        $sequence_1 = { ab ab c745ac44000000 c745d801000000 668975dc ff15???????? 8b3d???????? }
            // n = 7, score = 100
            //   ab                   | stosd               dword ptr es:[edi], eax
            //   ab                   | stosd               dword ptr es:[edi], eax
            //   c745ac44000000       | mov                 dword ptr [ebp - 0x54], 0x44
            //   c745d801000000       | mov                 dword ptr [ebp - 0x28], 1
            //   668975dc             | mov                 word ptr [ebp - 0x24], si
            //   ff15????????         |                     
            //   8b3d????????         |                     

        $sequence_2 = { ff15???????? ff75f4 6a40 ffd6 3bc3 8945fc }
            // n = 6, score = 100
            //   ff15????????         |                     
            //   ff75f4               | push                dword ptr [ebp - 0xc]
            //   6a40                 | push                0x40
            //   ffd6                 | call                esi
            //   3bc3                 | cmp                 eax, ebx
            //   8945fc               | mov                 dword ptr [ebp - 4], eax

        $sequence_3 = { 8885ccefffff b9ff030000 33c0 8dbdcdefffff 68???????? ff750c }
            // n = 6, score = 100
            //   8885ccefffff         | mov                 byte ptr [ebp - 0x1034], al
            //   b9ff030000           | mov                 ecx, 0x3ff
            //   33c0                 | xor                 eax, eax
            //   8dbdcdefffff         | lea                 edi, [ebp - 0x1033]
            //   68????????           |                     
            //   ff750c               | push                dword ptr [ebp + 0xc]

        $sequence_4 = { ff15???????? 6a01 58 eb5d }
            // n = 4, score = 100
            //   ff15????????         |                     
            //   6a01                 | push                1
            //   58                   | pop                 eax
            //   eb5d                 | jmp                 0x5f

        $sequence_5 = { 8d459c 53 50 53 ff15???????? e9???????? }
            // n = 6, score = 100
            //   8d459c               | lea                 eax, [ebp - 0x64]
            //   53                   | push                ebx
            //   50                   | push                eax
            //   53                   | push                ebx
            //   ff15????????         |                     
            //   e9????????           |                     

        $sequence_6 = { 50 ffd6 8d85d0eaffff 50 ff750c }
            // n = 5, score = 100
            //   50                   | push                eax
            //   ffd6                 | call                esi
            //   8d85d0eaffff         | lea                 eax, [ebp - 0x1530]
            //   50                   | push                eax
            //   ff750c               | push                dword ptr [ebp + 0xc]

        $sequence_7 = { 885dc5 ffd6 3bc3 a3???????? 0f84bffdffff }
            // n = 5, score = 100
            //   885dc5               | mov                 byte ptr [ebp - 0x3b], bl
            //   ffd6                 | call                esi
            //   3bc3                 | cmp                 eax, ebx
            //   a3????????           |                     
            //   0f84bffdffff         | je                  0xfffffdc5

        $sequence_8 = { 8d85e4feffff 50 ff750c ff7508 e8???????? 8b4604 8945ec }
            // n = 7, score = 100
            //   8d85e4feffff         | lea                 eax, [ebp - 0x11c]
            //   50                   | push                eax
            //   ff750c               | push                dword ptr [ebp + 0xc]
            //   ff7508               | push                dword ptr [ebp + 8]
            //   e8????????           |                     
            //   8b4604               | mov                 eax, dword ptr [esi + 4]
            //   8945ec               | mov                 dword ptr [ebp - 0x14], eax

        $sequence_9 = { e8???????? 83c440 8d86b0010000 50 8d85f8fbffff 68???????? }
            // n = 6, score = 100
            //   e8????????           |                     
            //   83c440               | add                 esp, 0x40
            //   8d86b0010000         | lea                 eax, [esi + 0x1b0]
            //   50                   | push                eax
            //   8d85f8fbffff         | lea                 eax, [ebp - 0x408]
            //   68????????           |                     

    condition:
        7 of them and filesize < 2162688
}