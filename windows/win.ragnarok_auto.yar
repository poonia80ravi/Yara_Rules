rule win_ragnarok_auto {

    meta:
        author = "Felix Bilstein - yara-signator at cocacoding dot com"
        date = "2022-10-07"
        version = "1"
        description = "Detects win.ragnarok."
        info = "autogenerated rule brought to you by yara-signator"
        tool = "yara-signator v0.6.0"
        signator_config = "callsandjumps;datarefs;binvalue"
        malpedia_reference = "https://malpedia.caad.fkie.fraunhofer.de/details/win.ragnarok"
        malpedia_rule_date = "20221007"
        malpedia_hash = "597f9539014e3d0f350c069cd804aa71679486ae"
        malpedia_version = "20221010"
        malpedia_license = "CC BY-SA 4.0"
        malpedia_sharing = "TLP:WHITE"

    /* DISCLAIMER
     * The strings used in this rule have been automatically selected from the
     * disassembly of memory dumps and unpacked files, using YARA-Signator.
     * The code and documentation is published here:
     * https://github.com/fxb-cocacoding/yara-signator
     * As Malpedia is used as data source, please note that for a given
     * number of families, only single samples are documented.
     * This likely impacts the degree of generalization these rules will offer.
     * Take the described generation method also into consideration when you
     * apply the rules in your use cases and assign them confidence levels.
     */


    strings:
        $sequence_0 = { 895070 33d3 0fb6ca 8955f8 895074 0fb699104b4300 c1e308 }
            // n = 7, score = 200
            //   895070               | mov                 dword ptr [eax + 0x70], edx
            //   33d3                 | xor                 edx, ebx
            //   0fb6ca               | movzx               ecx, dl
            //   8955f8               | mov                 dword ptr [ebp - 8], edx
            //   895074               | mov                 dword ptr [eax + 0x74], edx
            //   0fb699104b4300       | movzx               ebx, byte ptr [ecx + 0x434b10]
            //   c1e308               | shl                 ebx, 8

        $sequence_1 = { 8a0c02 8d4001 3048ff 83ee01 75f2 ff7508 57 }
            // n = 7, score = 200
            //   8a0c02               | mov                 cl, byte ptr [edx + eax]
            //   8d4001               | lea                 eax, [eax + 1]
            //   3048ff               | xor                 byte ptr [eax - 1], cl
            //   83ee01               | sub                 esi, 1
            //   75f2                 | jne                 0xfffffff4
            //   ff7508               | push                dword ptr [ebp + 8]
            //   57                   | push                edi

        $sequence_2 = { 85ff 7409 57 e8???????? 83c404 8b0e }
            // n = 6, score = 200
            //   85ff                 | test                edi, edi
            //   7409                 | je                  0xb
            //   57                   | push                edi
            //   e8????????           |                     
            //   83c404               | add                 esp, 4
            //   8b0e                 | mov                 ecx, dword ptr [esi]

        $sequence_3 = { e8???????? 83c40c 8d43ff 8a4801 8d4001 84c9 75f6 }
            // n = 7, score = 200
            //   e8????????           |                     
            //   83c40c               | add                 esp, 0xc
            //   8d43ff               | lea                 eax, [ebx - 1]
            //   8a4801               | mov                 cl, byte ptr [eax + 1]
            //   8d4001               | lea                 eax, [eax + 1]
            //   84c9                 | test                cl, cl
            //   75f6                 | jne                 0xfffffff8

        $sequence_4 = { 33d9 8b4df4 0fb6c9 c1e308 0fb689105c4300 33d9 8bca }
            // n = 7, score = 200
            //   33d9                 | xor                 ebx, ecx
            //   8b4df4               | mov                 ecx, dword ptr [ebp - 0xc]
            //   0fb6c9               | movzx               ecx, cl
            //   c1e308               | shl                 ebx, 8
            //   0fb689105c4300       | movzx               ecx, byte ptr [ecx + 0x435c10]
            //   33d9                 | xor                 ebx, ecx
            //   8bca                 | mov                 ecx, edx

        $sequence_5 = { 8bcb c1e918 33148d10694300 8955fc }
            // n = 4, score = 200
            //   8bcb                 | mov                 ecx, ebx
            //   c1e918               | shr                 ecx, 0x18
            //   33148d10694300       | xor                 edx, dword ptr [ecx*4 + 0x436910]
            //   8955fc               | mov                 dword ptr [ebp - 4], edx

        $sequence_6 = { 8bca c1e908 0fb6c9 c1e308 0fb689104b4300 33d9 0fb6ca }
            // n = 7, score = 200
            //   8bca                 | mov                 ecx, edx
            //   c1e908               | shr                 ecx, 8
            //   0fb6c9               | movzx               ecx, cl
            //   c1e308               | shl                 ebx, 8
            //   0fb689104b4300       | movzx               ecx, byte ptr [ecx + 0x434b10]
            //   33d9                 | xor                 ebx, ecx
            //   0fb6ca               | movzx               ecx, dl

        $sequence_7 = { c1c00b 03c1 81c1f33e706d 89459c 8b45a4 f7d0 }
            // n = 6, score = 200
            //   c1c00b               | rol                 eax, 0xb
            //   03c1                 | add                 eax, ecx
            //   81c1f33e706d         | add                 ecx, 0x6d703ef3
            //   89459c               | mov                 dword ptr [ebp - 0x64], eax
            //   8b45a4               | mov                 eax, dword ptr [ebp - 0x5c]
            //   f7d0                 | not                 eax

        $sequence_8 = { 0fb689104b4300 33f9 337de8 333d???????? 897d10 897870 33fa }
            // n = 7, score = 200
            //   0fb689104b4300       | movzx               ecx, byte ptr [ecx + 0x434b10]
            //   33f9                 | xor                 edi, ecx
            //   337de8               | xor                 edi, dword ptr [ebp - 0x18]
            //   333d????????         |                     
            //   897d10               | mov                 dword ptr [ebp + 0x10], edi
            //   897870               | mov                 dword ptr [eax + 0x70], edi
            //   33fa                 | xor                 edi, edx

        $sequence_9 = { 0fbe8040434300 40 8945cc 2bc1 8945d0 3bc7 0f8f0b020000 }
            // n = 7, score = 200
            //   0fbe8040434300       | movsx               eax, byte ptr [eax + 0x434340]
            //   40                   | inc                 eax
            //   8945cc               | mov                 dword ptr [ebp - 0x34], eax
            //   2bc1                 | sub                 eax, ecx
            //   8945d0               | mov                 dword ptr [ebp - 0x30], eax
            //   3bc7                 | cmp                 eax, edi
            //   0f8f0b020000         | jg                  0x211

    condition:
        7 of them and filesize < 483328
}