rule win_hesperbot_auto {

    meta:
        author = "Felix Bilstein - yara-signator at cocacoding dot com"
        date = "2022-10-07"
        version = "1"
        description = "Detects win.hesperbot."
        info = "autogenerated rule brought to you by yara-signator"
        tool = "yara-signator v0.6.0"
        signator_config = "callsandjumps;datarefs;binvalue"
        malpedia_reference = "https://malpedia.caad.fkie.fraunhofer.de/details/win.hesperbot"
        malpedia_rule_date = "20221007"
        malpedia_hash = "597f9539014e3d0f350c069cd804aa71679486ae"
        malpedia_version = "20221010"
        malpedia_license = "CC BY-SA 4.0"
        malpedia_sharing = "TLP:WHITE"

    /* DISCLAIMER
     * The strings used in this rule have been automatically selected from the
     * disassembly of memory dumps and unpacked files, using YARA-Signator.
     * The code and documentation is published here:
     * https://github.com/fxb-cocacoding/yara-signator
     * As Malpedia is used as data source, please note that for a given
     * number of families, only single samples are documented.
     * This likely impacts the degree of generalization these rules will offer.
     * Take the described generation method also into consideration when you
     * apply the rules in your use cases and assign them confidence levels.
     */


    strings:
        $sequence_0 = { 5e c9 c3 55 8bec 8b4508 a801 }
            // n = 7, score = 500
            //   5e                   | pop                 esi
            //   c9                   | leave               
            //   c3                   | ret                 
            //   55                   | push                ebp
            //   8bec                 | mov                 ebp, esp
            //   8b4508               | mov                 eax, dword ptr [ebp + 8]
            //   a801                 | test                al, 1

        $sequence_1 = { 337c242c 0bf5 33ce 8b742428 33742420 }
            // n = 5, score = 500
            //   337c242c             | xor                 edi, dword ptr [esp + 0x2c]
            //   0bf5                 | or                  esi, ebp
            //   33ce                 | xor                 ecx, esi
            //   8b742428             | mov                 esi, dword ptr [esp + 0x28]
            //   33742420             | xor                 esi, dword ptr [esp + 0x20]

        $sequence_2 = { 8b433c 56 8b741850 57 }
            // n = 4, score = 500
            //   8b433c               | mov                 eax, dword ptr [ebx + 0x3c]
            //   56                   | push                esi
            //   8b741850             | mov                 esi, dword ptr [eax + ebx + 0x50]
            //   57                   | push                edi

        $sequence_3 = { c3 55 8bec 51 51 8365fc00 6a10 }
            // n = 7, score = 500
            //   c3                   | ret                 
            //   55                   | push                ebp
            //   8bec                 | mov                 ebp, esp
            //   51                   | push                ecx
            //   51                   | push                ecx
            //   8365fc00             | and                 dword ptr [ebp - 4], 0
            //   6a10                 | push                0x10

        $sequence_4 = { 33c0 c3 56 ff742410 8b742410 e8???????? }
            // n = 6, score = 500
            //   33c0                 | xor                 eax, eax
            //   c3                   | ret                 
            //   56                   | push                esi
            //   ff742410             | push                dword ptr [esp + 0x10]
            //   8b742410             | mov                 esi, dword ptr [esp + 0x10]
            //   e8????????           |                     

        $sequence_5 = { 57 45 e8???????? 59 85c0 750d 57 }
            // n = 7, score = 500
            //   57                   | push                edi
            //   45                   | inc                 ebp
            //   e8????????           |                     
            //   59                   | pop                 ecx
            //   85c0                 | test                eax, eax
            //   750d                 | jne                 0xf
            //   57                   | push                edi

        $sequence_6 = { 8b4c2424 0bde 891401 895c0104 83c008 ff4c2414 }
            // n = 6, score = 500
            //   8b4c2424             | mov                 ecx, dword ptr [esp + 0x24]
            //   0bde                 | or                  ebx, esi
            //   891401               | mov                 dword ptr [ecx + eax], edx
            //   895c0104             | mov                 dword ptr [ecx + eax + 4], ebx
            //   83c008               | add                 eax, 8
            //   ff4c2414             | dec                 dword ptr [esp + 0x14]

        $sequence_7 = { 8d45fc 50 ff7508 ffd6 85c0 7409 837dfc00 }
            // n = 7, score = 500
            //   8d45fc               | lea                 eax, [ebp - 4]
            //   50                   | push                eax
            //   ff7508               | push                dword ptr [ebp + 8]
            //   ffd6                 | call                esi
            //   85c0                 | test                eax, eax
            //   7409                 | je                  0xb
            //   837dfc00             | cmp                 dword ptr [ebp - 4], 0

        $sequence_8 = { ff15???????? 5d 5f 8b442404 5b 59 c3 }
            // n = 7, score = 500
            //   ff15????????         |                     
            //   5d                   | pop                 ebp
            //   5f                   | pop                 edi
            //   8b442404             | mov                 eax, dword ptr [esp + 4]
            //   5b                   | pop                 ebx
            //   59                   | pop                 ecx
            //   c3                   | ret                 

        $sequence_9 = { 33db 8bc3 5b c3 55 8bec }
            // n = 6, score = 500
            //   33db                 | xor                 ebx, ebx
            //   8bc3                 | mov                 eax, ebx
            //   5b                   | pop                 ebx
            //   c3                   | ret                 
            //   55                   | push                ebp
            //   8bec                 | mov                 ebp, esp

    condition:
        7 of them and filesize < 188416
}