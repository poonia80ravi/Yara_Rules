rule win_kazuar_auto {

    meta:
        author = "Felix Bilstein - yara-signator at cocacoding dot com"
        date = "2022-10-07"
        version = "1"
        description = "Detects win.kazuar."
        info = "autogenerated rule brought to you by yara-signator"
        tool = "yara-signator v0.6.0"
        signator_config = "callsandjumps;datarefs;binvalue"
        malpedia_reference = "https://malpedia.caad.fkie.fraunhofer.de/details/win.kazuar"
        malpedia_rule_date = "20221007"
        malpedia_hash = "597f9539014e3d0f350c069cd804aa71679486ae"
        malpedia_version = "20221010"
        malpedia_license = "CC BY-SA 4.0"
        malpedia_sharing = "TLP:WHITE"

    /* DISCLAIMER
     * The strings used in this rule have been automatically selected from the
     * disassembly of memory dumps and unpacked files, using YARA-Signator.
     * The code and documentation is published here:
     * https://github.com/fxb-cocacoding/yara-signator
     * As Malpedia is used as data source, please note that for a given
     * number of families, only single samples are documented.
     * This likely impacts the degree of generalization these rules will offer.
     * Take the described generation method also into consideration when you
     * apply the rules in your use cases and assign them confidence levels.
     */


    strings:
        $sequence_0 = { 8d3c08 89c3 8955e8 31f6 }
            // n = 4, score = 300
            //   8d3c08               | sub                 esp, 0x10
            //   89c3                 | mov                 dword ptr [esp + 0xc], eax
            //   8955e8               | lea                 eax, [ebp - 0x10]
            //   31f6                 | mov                 dword ptr [esp + 8], eax

        $sequence_1 = { 4883ec28 e8???????? 31d2 4885c0 }
            // n = 4, score = 300
            //   4883ec28             | add                 ebp, ebx
            //   e8????????           |                     
            //   31d2                 | inc                 ecx
            //   4885c0               | cmp                 esp, ebx

        $sequence_2 = { 8d55e0 897c2404 890424 89542408 }
            // n = 4, score = 300
            //   8d55e0               | test                eax, eax
            //   897c2404             | mov                 dword ptr [esp + 0x10], edx
            //   890424               | call                ecx
            //   89542408             | sub                 esp, 0x18

        $sequence_3 = { 85c0 740a 81ea00204000 01d0 eb02 31c0 5d }
            // n = 7, score = 300
            //   85c0                 | movsx               eax, byte ptr [edx - 1]
            //   740a                 | test                al, al
            //   81ea00204000         | je                  0x93
            //   01d0                 | movsx               eax, al
            //   eb02                 | xor                 eax, ebx
            //   31c0                 | xor                 ebx, ebx
            //   5d                   | dec                 eax

        $sequence_4 = { 4139dc 7633 8b4c9d00 4c01d9 7425 e8???????? 39f8 }
            // n = 7, score = 300
            //   4139dc               | mov                 ebp, esp
            //   7633                 | push                edi
            //   8b4c9d00             | push                esi
            //   4c01d9               | push                ebx
            //   7425                 | sub                 esp, 0xc
            //   e8????????           |                     
            //   39f8                 | test                eax, eax

        $sequence_5 = { 4881ec30010000 41b804010000 488d5c242c 4889da }
            // n = 4, score = 300
            //   4881ec30010000       | je                  0x9a
            //   41b804010000         | inc                 edx
            //   488d5c242c           | jmp                 0x81
            //   4889da               | xor                 eax, eax

        $sequence_6 = { 488b5b18 488b5b30 31c0 4885db 7428 4989db 498b4b40 }
            // n = 7, score = 300
            //   488b5b18             | mov                 dword ptr [ebp - 0xc], 0
            //   488b5b30             | mov                 dword ptr [esp], edx
            //   31c0                 | call                eax
            //   4885db               | push                eax
            //   7428                 | leave               
            //   4989db               | lea                 esi, [ebp - 0x24]
            //   498b4b40             | mov                 edi, eax

        $sequence_7 = { 498d1493 8b0402 4c01d8 eb07 48ffc3 ebc8 31c0 }
            // n = 7, score = 300
            //   498d1493             | dec                 eax
            //   8b0402               | test                eax, eax
            //   4c01d8               | je                  0xb48
            //   eb07                 | ret                 
            //   48ffc3               | dec                 eax
            //   ebc8                 | sub                 esp, 0x48
            //   31c0                 | dec                 eax

        $sequence_8 = { 498b4b40 e8???????? 3d88ae6393 7506 }
            // n = 4, score = 300
            //   498b4b40             | test                ecx, ecx
            //   e8????????           |                     
            //   3d88ae6393           | je                  0x4b
            //   7506                 | mov                 edx, eax

        $sequence_9 = { 894c2414 8d8b00020000 890424 894c2410 }
            // n = 4, score = 300
            //   894c2414             | add                 ebx, ebx
            //   8d8b00020000         | jne                 0x148
            //   890424               | dec                 eax
            //   894c2410             | mov                 dword ptr [esp + 0x28], ecx

    condition:
        7 of them and filesize < 81920
}