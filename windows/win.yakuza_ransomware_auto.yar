rule win_yakuza_ransomware_auto {

    meta:
        author = "Felix Bilstein - yara-signator at cocacoding dot com"
        date = "2022-10-07"
        version = "1"
        description = "Detects win.yakuza_ransomware."
        info = "autogenerated rule brought to you by yara-signator"
        tool = "yara-signator v0.6.0"
        signator_config = "callsandjumps;datarefs;binvalue"
        malpedia_reference = "https://malpedia.caad.fkie.fraunhofer.de/details/win.yakuza_ransomware"
        malpedia_rule_date = "20221007"
        malpedia_hash = "597f9539014e3d0f350c069cd804aa71679486ae"
        malpedia_version = "20221010"
        malpedia_license = "CC BY-SA 4.0"
        malpedia_sharing = "TLP:WHITE"

    /* DISCLAIMER
     * The strings used in this rule have been automatically selected from the
     * disassembly of memory dumps and unpacked files, using YARA-Signator.
     * The code and documentation is published here:
     * https://github.com/fxb-cocacoding/yara-signator
     * As Malpedia is used as data source, please note that for a given
     * number of families, only single samples are documented.
     * This likely impacts the degree of generalization these rules will offer.
     * Take the described generation method also into consideration when you
     * apply the rules in your use cases and assign them confidence levels.
     */


    strings:
        $sequence_0 = { 8d45f4 64a300000000 68???????? c7852cfeffff00000000 e8???????? 83c404 85c0 }
            // n = 7, score = 100
            //   8d45f4               | lea                 eax, [ebp - 0xc]
            //   64a300000000         | mov                 dword ptr fs:[0], eax
            //   68????????           |                     
            //   c7852cfeffff00000000     | mov    dword ptr [ebp - 0x1d4], 0
            //   e8????????           |                     
            //   83c404               | add                 esp, 4
            //   85c0                 | test                eax, eax

        $sequence_1 = { 8bfa 33c0 f3ab 52 e8???????? 83c404 8b4dcc }
            // n = 7, score = 100
            //   8bfa                 | mov                 edi, edx
            //   33c0                 | xor                 eax, eax
            //   f3ab                 | rep stosd           dword ptr es:[edi], eax
            //   52                   | push                edx
            //   e8????????           |                     
            //   83c404               | add                 esp, 4
            //   8b4dcc               | mov                 ecx, dword ptr [ebp - 0x34]

        $sequence_2 = { e9???????? 8d8d5cf4ffff e9???????? 8d8ddcf3ffff e9???????? 8d8d44f4ffff e9???????? }
            // n = 7, score = 100
            //   e9????????           |                     
            //   8d8d5cf4ffff         | lea                 ecx, [ebp - 0xba4]
            //   e9????????           |                     
            //   8d8ddcf3ffff         | lea                 ecx, [ebp - 0xc24]
            //   e9????????           |                     
            //   8d8d44f4ffff         | lea                 ecx, [ebp - 0xbbc]
            //   e9????????           |                     

        $sequence_3 = { 83c408 c645fc22 8d8dacf1ffff e8???????? c645fc09 8d8d88f1ffff e8???????? }
            // n = 7, score = 100
            //   83c408               | add                 esp, 8
            //   c645fc22             | mov                 byte ptr [ebp - 4], 0x22
            //   8d8dacf1ffff         | lea                 ecx, [ebp - 0xe54]
            //   e8????????           |                     
            //   c645fc09             | mov                 byte ptr [ebp - 4], 9
            //   8d8d88f1ffff         | lea                 ecx, [ebp - 0xe78]
            //   e8????????           |                     

        $sequence_4 = { b001 5b 8be5 5d c20800 8b43f0 8d4bf0 }
            // n = 7, score = 100
            //   b001                 | mov                 al, 1
            //   5b                   | pop                 ebx
            //   8be5                 | mov                 esp, ebp
            //   5d                   | pop                 ebp
            //   c20800               | ret                 8
            //   8b43f0               | mov                 eax, dword ptr [ebx - 0x10]
            //   8d4bf0               | lea                 ecx, [ebx - 0x10]

        $sequence_5 = { e8???????? 8b4d0c 394d08 8b5510 0f424d08 c645fc28 85d2 }
            // n = 7, score = 100
            //   e8????????           |                     
            //   8b4d0c               | mov                 ecx, dword ptr [ebp + 0xc]
            //   394d08               | cmp                 dword ptr [ebp + 8], ecx
            //   8b5510               | mov                 edx, dword ptr [ebp + 0x10]
            //   0f424d08             | cmovb               ecx, dword ptr [ebp + 8]
            //   c645fc28             | mov                 byte ptr [ebp - 4], 0x28
            //   85d2                 | test                edx, edx

        $sequence_6 = { e8???????? 83c404 8bf0 eb02 33f6 8b4508 8933 }
            // n = 7, score = 100
            //   e8????????           |                     
            //   83c404               | add                 esp, 4
            //   8bf0                 | mov                 esi, eax
            //   eb02                 | jmp                 4
            //   33f6                 | xor                 esi, esi
            //   8b4508               | mov                 eax, dword ptr [ebp + 8]
            //   8933                 | mov                 dword ptr [ebx], esi

        $sequence_7 = { c745fc01000000 8b06 8b5020 3d???????? 7577 8d868c000000 c645fc02 }
            // n = 7, score = 100
            //   c745fc01000000       | mov                 dword ptr [ebp - 4], 1
            //   8b06                 | mov                 eax, dword ptr [esi]
            //   8b5020               | mov                 edx, dword ptr [eax + 0x20]
            //   3d????????           |                     
            //   7577                 | jne                 0x79
            //   8d868c000000         | lea                 eax, [esi + 0x8c]
            //   c645fc02             | mov                 byte ptr [ebp - 4], 2

        $sequence_8 = { 8b4e1c 8d55bc ff7510 83c104 c745fc01000000 ff7508 52 }
            // n = 7, score = 100
            //   8b4e1c               | mov                 ecx, dword ptr [esi + 0x1c]
            //   8d55bc               | lea                 edx, [ebp - 0x44]
            //   ff7510               | push                dword ptr [ebp + 0x10]
            //   83c104               | add                 ecx, 4
            //   c745fc01000000       | mov                 dword ptr [ebp - 4], 1
            //   ff7508               | push                dword ptr [ebp + 8]
            //   52                   | push                edx

        $sequence_9 = { e8???????? 8d8d74ffffff e8???????? 8d4ddc e8???????? 8d8d98feffff e8???????? }
            // n = 7, score = 100
            //   e8????????           |                     
            //   8d8d74ffffff         | lea                 ecx, [ebp - 0x8c]
            //   e8????????           |                     
            //   8d4ddc               | lea                 ecx, [ebp - 0x24]
            //   e8????????           |                     
            //   8d8d98feffff         | lea                 ecx, [ebp - 0x168]
            //   e8????????           |                     

    condition:
        7 of them and filesize < 2811904
}