rule win_darktequila_auto {

    meta:
        author = "Felix Bilstein - yara-signator at cocacoding dot com"
        date = "2022-10-07"
        version = "1"
        description = "Detects win.darktequila."
        info = "autogenerated rule brought to you by yara-signator"
        tool = "yara-signator v0.6.0"
        signator_config = "callsandjumps;datarefs;binvalue"
        malpedia_reference = "https://malpedia.caad.fkie.fraunhofer.de/details/win.darktequila"
        malpedia_rule_date = "20221007"
        malpedia_hash = "597f9539014e3d0f350c069cd804aa71679486ae"
        malpedia_version = "20221010"
        malpedia_license = "CC BY-SA 4.0"
        malpedia_sharing = "TLP:WHITE"

    /* DISCLAIMER
     * The strings used in this rule have been automatically selected from the
     * disassembly of memory dumps and unpacked files, using YARA-Signator.
     * The code and documentation is published here:
     * https://github.com/fxb-cocacoding/yara-signator
     * As Malpedia is used as data source, please note that for a given
     * number of families, only single samples are documented.
     * This likely impacts the degree of generalization these rules will offer.
     * Take the described generation method also into consideration when you
     * apply the rules in your use cases and assign them confidence levels.
     */


    strings:
        $sequence_0 = { 33db 83e803 7408 48 }
            // n = 4, score = 200
            //   33db                 | xor                 ebx, ebx
            //   83e803               | sub                 eax, 3
            //   7408                 | je                  0xa
            //   48                   | dec                 eax

        $sequence_1 = { c745fc00000000 e8???????? 8b1d???????? 50 ffd3 8bf8 }
            // n = 6, score = 200
            //   c745fc00000000       | mov                 dword ptr [ebp - 4], 0
            //   e8????????           |                     
            //   8b1d????????         |                     
            //   50                   | push                eax
            //   ffd3                 | call                ebx
            //   8bf8                 | mov                 edi, eax

        $sequence_2 = { 85f6 743f 83c603 b901000000 8bc6 8bd3 }
            // n = 6, score = 200
            //   85f6                 | test                esi, esi
            //   743f                 | je                  0x41
            //   83c603               | add                 esi, 3
            //   b901000000           | mov                 ecx, 1
            //   8bc6                 | mov                 eax, esi
            //   8bd3                 | mov                 edx, ebx

        $sequence_3 = { 8b45fc 8b4df8 8b55f4 894310 897b04 894b08 89530c }
            // n = 7, score = 200
            //   8b45fc               | mov                 eax, dword ptr [ebp - 4]
            //   8b4df8               | mov                 ecx, dword ptr [ebp - 8]
            //   8b55f4               | mov                 edx, dword ptr [ebp - 0xc]
            //   894310               | mov                 dword ptr [ebx + 0x10], eax
            //   897b04               | mov                 dword ptr [ebx + 4], edi
            //   894b08               | mov                 dword ptr [ebx + 8], ecx
            //   89530c               | mov                 dword ptr [ebx + 0xc], edx

        $sequence_4 = { 897b08 5f b801000000 5e 8be5 }
            // n = 5, score = 200
            //   897b08               | mov                 dword ptr [ebx + 8], edi
            //   5f                   | pop                 edi
            //   b801000000           | mov                 eax, 1
            //   5e                   | pop                 esi
            //   8be5                 | mov                 esp, ebp

        $sequence_5 = { 68???????? 6a00 6a00 50 52 ff15???????? 85c0 }
            // n = 7, score = 200
            //   68????????           |                     
            //   6a00                 | push                0
            //   6a00                 | push                0
            //   50                   | push                eax
            //   52                   | push                edx
            //   ff15????????         |                     
            //   85c0                 | test                eax, eax

        $sequence_6 = { 8b06 53 33db 83e803 }
            // n = 4, score = 200
            //   8b06                 | mov                 eax, dword ptr [esi]
            //   53                   | push                ebx
            //   33db                 | xor                 ebx, ebx
            //   83e803               | sub                 eax, 3

        $sequence_7 = { 744d 6a01 8d55df 52 ffd7 8bf0 85f6 }
            // n = 7, score = 200
            //   744d                 | je                  0x4f
            //   6a01                 | push                1
            //   8d55df               | lea                 edx, [ebp - 0x21]
            //   52                   | push                edx
            //   ffd7                 | call                edi
            //   8bf0                 | mov                 esi, eax
            //   85f6                 | test                esi, esi

        $sequence_8 = { 894b08 89530c 5f 5e }
            // n = 4, score = 200
            //   894b08               | mov                 dword ptr [ebx + 8], ecx
            //   89530c               | mov                 dword ptr [ebx + 0xc], edx
            //   5f                   | pop                 edi
            //   5e                   | pop                 esi

        $sequence_9 = { 40 83f820 72dc b8???????? c3 33d2 }
            // n = 6, score = 200
            //   40                   | inc                 eax
            //   83f820               | cmp                 eax, 0x20
            //   72dc                 | jb                  0xffffffde
            //   b8????????           |                     
            //   c3                   | ret                 
            //   33d2                 | xor                 edx, edx

    condition:
        7 of them and filesize < 1827840
}