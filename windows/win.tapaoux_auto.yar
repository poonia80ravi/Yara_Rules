rule win_tapaoux_auto {

    meta:
        author = "Felix Bilstein - yara-signator at cocacoding dot com"
        date = "2022-10-07"
        version = "1"
        description = "Detects win.tapaoux."
        info = "autogenerated rule brought to you by yara-signator"
        tool = "yara-signator v0.6.0"
        signator_config = "callsandjumps;datarefs;binvalue"
        malpedia_reference = "https://malpedia.caad.fkie.fraunhofer.de/details/win.tapaoux"
        malpedia_rule_date = "20221007"
        malpedia_hash = "597f9539014e3d0f350c069cd804aa71679486ae"
        malpedia_version = "20221010"
        malpedia_license = "CC BY-SA 4.0"
        malpedia_sharing = "TLP:WHITE"

    /* DISCLAIMER
     * The strings used in this rule have been automatically selected from the
     * disassembly of memory dumps and unpacked files, using YARA-Signator.
     * The code and documentation is published here:
     * https://github.com/fxb-cocacoding/yara-signator
     * As Malpedia is used as data source, please note that for a given
     * number of families, only single samples are documented.
     * This likely impacts the degree of generalization these rules will offer.
     * Take the described generation method also into consideration when you
     * apply the rules in your use cases and assign them confidence levels.
     */


    strings:
        $sequence_0 = { 5d 5b 81c40c010000 c3 8d7c241c 83c9ff }
            // n = 6, score = 200
            //   5d                   | pop                 ebp
            //   5b                   | pop                 ebx
            //   81c40c010000         | add                 esp, 0x10c
            //   c3                   | ret                 
            //   8d7c241c             | lea                 edi, [esp + 0x1c]
            //   83c9ff               | or                  ecx, 0xffffffff

        $sequence_1 = { 33c0 f2ae f7d1 2bf9 8d94248c000000 8bc1 8bf7 }
            // n = 7, score = 200
            //   33c0                 | xor                 eax, eax
            //   f2ae                 | repne scasb         al, byte ptr es:[edi]
            //   f7d1                 | not                 ecx
            //   2bf9                 | sub                 edi, ecx
            //   8d94248c000000       | lea                 edx, [esp + 0x8c]
            //   8bc1                 | mov                 eax, ecx
            //   8bf7                 | mov                 esi, edi

        $sequence_2 = { 8d4e08 50 51 68???????? 8d542420 }
            // n = 5, score = 200
            //   8d4e08               | lea                 ecx, [esi + 8]
            //   50                   | push                eax
            //   51                   | push                ecx
            //   68????????           |                     
            //   8d542420             | lea                 edx, [esp + 0x20]

        $sequence_3 = { 3bd3 7e6b 8a840c1c040000 3c0d 7409 }
            // n = 5, score = 200
            //   3bd3                 | cmp                 edx, ebx
            //   7e6b                 | jle                 0x6d
            //   8a840c1c040000       | mov                 al, byte ptr [esp + ecx + 0x41c]
            //   3c0d                 | cmp                 al, 0xd
            //   7409                 | je                  0xb

        $sequence_4 = { 5e 5d 83c8ff 5b 81c400010000 c3 e8???????? }
            // n = 7, score = 200
            //   5e                   | pop                 esi
            //   5d                   | pop                 ebp
            //   83c8ff               | or                  eax, 0xffffffff
            //   5b                   | pop                 ebx
            //   81c400010000         | add                 esp, 0x100
            //   c3                   | ret                 
            //   e8????????           |                     

        $sequence_5 = { 56 e8???????? 83c420 85c0 0f8cd0030000 8d7c2420 83c9ff }
            // n = 7, score = 200
            //   56                   | push                esi
            //   e8????????           |                     
            //   83c420               | add                 esp, 0x20
            //   85c0                 | test                eax, eax
            //   0f8cd0030000         | jl                  0x3d6
            //   8d7c2420             | lea                 edi, [esp + 0x20]
            //   83c9ff               | or                  ecx, 0xffffffff

        $sequence_6 = { c22000 8b6c2418 b94c000000 33c0 }
            // n = 4, score = 200
            //   c22000               | ret                 0x20
            //   8b6c2418             | mov                 ebp, dword ptr [esp + 0x18]
            //   b94c000000           | mov                 ecx, 0x4c
            //   33c0                 | xor                 eax, eax

        $sequence_7 = { 83c404 85db 7505 5e 5d 5b }
            // n = 6, score = 200
            //   83c404               | add                 esp, 4
            //   85db                 | test                ebx, ebx
            //   7505                 | jne                 7
            //   5e                   | pop                 esi
            //   5d                   | pop                 ebp
            //   5b                   | pop                 ebx

        $sequence_8 = { 8d8424b4000000 83e103 6a01 f3a4 50 8d4c241c e8???????? }
            // n = 7, score = 200
            //   8d8424b4000000       | lea                 eax, [esp + 0xb4]
            //   83e103               | and                 ecx, 3
            //   6a01                 | push                1
            //   f3a4                 | rep movsb           byte ptr es:[edi], byte ptr [esi]
            //   50                   | push                eax
            //   8d4c241c             | lea                 ecx, [esp + 0x1c]
            //   e8????????           |                     

        $sequence_9 = { 7634 6a04 8d542414 68???????? 52 e8???????? }
            // n = 6, score = 200
            //   7634                 | jbe                 0x36
            //   6a04                 | push                4
            //   8d542414             | lea                 edx, [esp + 0x14]
            //   68????????           |                     
            //   52                   | push                edx
            //   e8????????           |                     

    condition:
        7 of them and filesize < 294912
}