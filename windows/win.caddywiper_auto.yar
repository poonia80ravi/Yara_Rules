rule win_caddywiper_auto {

    meta:
        author = "Felix Bilstein - yara-signator at cocacoding dot com"
        date = "2022-10-07"
        version = "1"
        description = "Detects win.caddywiper."
        info = "autogenerated rule brought to you by yara-signator"
        tool = "yara-signator v0.6.0"
        signator_config = "callsandjumps;datarefs;binvalue"
        malpedia_reference = "https://malpedia.caad.fkie.fraunhofer.de/details/win.caddywiper"
        malpedia_rule_date = "20221007"
        malpedia_hash = "597f9539014e3d0f350c069cd804aa71679486ae"
        malpedia_version = "20221010"
        malpedia_license = "CC BY-SA 4.0"
        malpedia_sharing = "TLP:WHITE"

    /* DISCLAIMER
     * The strings used in this rule have been automatically selected from the
     * disassembly of memory dumps and unpacked files, using YARA-Signator.
     * The code and documentation is published here:
     * https://github.com/fxb-cocacoding/yara-signator
     * As Malpedia is used as data source, please note that for a given
     * number of families, only single samples are documented.
     * This likely impacts the degree of generalization these rules will offer.
     * Take the described generation method also into consideration when you
     * apply the rules in your use cases and assign them confidence levels.
     */


    strings:
        $sequence_0 = { 742a 8b5508 0355f4 8a45fb }
            // n = 4, score = 100
            //   742a                 | je                  0x2c
            //   8b5508               | mov                 edx, dword ptr [ebp + 8]
            //   0355f4               | add                 edx, dword ptr [ebp - 0xc]
            //   8a45fb               | mov                 al, byte ptr [ebp - 5]

        $sequence_1 = { 83c408 c645985c c6459900 c6459a5c }
            // n = 4, score = 100
            //   83c408               | add                 esp, 8
            //   c645985c             | mov                 byte ptr [ebp - 0x68], 0x5c
            //   c6459900             | mov                 byte ptr [ebp - 0x67], 0
            //   c6459a5c             | mov                 byte ptr [ebp - 0x66], 0x5c

        $sequence_2 = { 55 8bec 51 8b4508 8b483c 034d08 }
            // n = 6, score = 100
            //   55                   | push                ebp
            //   8bec                 | mov                 ebp, esp
            //   51                   | push                ecx
            //   8b4508               | mov                 eax, dword ptr [ebp + 8]
            //   8b483c               | mov                 ecx, dword ptr [eax + 0x3c]
            //   034d08               | add                 ecx, dword ptr [ebp + 8]

        $sequence_3 = { 52 6a00 8d85d8feffff 50 6a02 ff9550ffffff 85c0 }
            // n = 7, score = 100
            //   52                   | push                edx
            //   6a00                 | push                0
            //   8d85d8feffff         | lea                 eax, [ebp - 0x128]
            //   50                   | push                eax
            //   6a02                 | push                2
            //   ff9550ffffff         | call                dword ptr [ebp - 0xb0]
            //   85c0                 | test                eax, eax

        $sequence_4 = { c685b6fbffff65 c685b7fbffff00 c685b8fbffff72 c685b9fbffff00 c685bafbffff6e c685bbfbffff00 c685bcfbffff65 }
            // n = 7, score = 100
            //   c685b6fbffff65       | mov                 byte ptr [ebp - 0x44a], 0x65
            //   c685b7fbffff00       | mov                 byte ptr [ebp - 0x449], 0
            //   c685b8fbffff72       | mov                 byte ptr [ebp - 0x448], 0x72
            //   c685b9fbffff00       | mov                 byte ptr [ebp - 0x447], 0
            //   c685bafbffff6e       | mov                 byte ptr [ebp - 0x446], 0x6e
            //   c685bbfbffff00       | mov                 byte ptr [ebp - 0x445], 0
            //   c685bcfbffff65       | mov                 byte ptr [ebp - 0x444], 0x65

        $sequence_5 = { c645842e c6458500 c6458664 c6458700 c645886c c6458900 c6458a6c }
            // n = 7, score = 100
            //   c645842e             | mov                 byte ptr [ebp - 0x7c], 0x2e
            //   c6458500             | mov                 byte ptr [ebp - 0x7b], 0
            //   c6458664             | mov                 byte ptr [ebp - 0x7a], 0x64
            //   c6458700             | mov                 byte ptr [ebp - 0x79], 0
            //   c645886c             | mov                 byte ptr [ebp - 0x78], 0x6c
            //   c6458900             | mov                 byte ptr [ebp - 0x77], 0
            //   c6458a6c             | mov                 byte ptr [ebp - 0x76], 0x6c

        $sequence_6 = { c7856cffffff00000000 c7459c00000000 c645e800 c645e900 c645ea00 }
            // n = 5, score = 100
            //   c7856cffffff00000000     | mov    dword ptr [ebp - 0x94], 0
            //   c7459c00000000       | mov                 dword ptr [ebp - 0x64], 0
            //   c645e800             | mov                 byte ptr [ebp - 0x18], 0
            //   c645e900             | mov                 byte ptr [ebp - 0x17], 0
            //   c645ea00             | mov                 byte ptr [ebp - 0x16], 0

        $sequence_7 = { 8b95acf1ffff 52 ff9564f7ffff 8985a4f1ffff 83bda4f1ffff00 7305 e9???????? }
            // n = 7, score = 100
            //   8b95acf1ffff         | mov                 edx, dword ptr [ebp - 0xe54]
            //   52                   | push                edx
            //   ff9564f7ffff         | call                dword ptr [ebp - 0x89c]
            //   8985a4f1ffff         | mov                 dword ptr [ebp - 0xe5c], eax
            //   83bda4f1ffff00       | cmp                 dword ptr [ebp - 0xe5c], 0
            //   7305                 | jae                 7
            //   e9????????           |                     

        $sequence_8 = { c645cd6f c645ce6c c645cf00 c645dc6b c645dd00 }
            // n = 5, score = 100
            //   c645cd6f             | mov                 byte ptr [ebp - 0x33], 0x6f
            //   c645ce6c             | mov                 byte ptr [ebp - 0x32], 0x6c
            //   c645cf00             | mov                 byte ptr [ebp - 0x31], 0
            //   c645dc6b             | mov                 byte ptr [ebp - 0x24], 0x6b
            //   c645dd00             | mov                 byte ptr [ebp - 0x23], 0

        $sequence_9 = { c685c4fbffff2e c685c5fbffff00 c685c6fbffff64 c685c7fbffff00 c685c8fbffff6c c685c9fbffff00 c685cafbffff6c }
            // n = 7, score = 100
            //   c685c4fbffff2e       | mov                 byte ptr [ebp - 0x43c], 0x2e
            //   c685c5fbffff00       | mov                 byte ptr [ebp - 0x43b], 0
            //   c685c6fbffff64       | mov                 byte ptr [ebp - 0x43a], 0x64
            //   c685c7fbffff00       | mov                 byte ptr [ebp - 0x439], 0
            //   c685c8fbffff6c       | mov                 byte ptr [ebp - 0x438], 0x6c
            //   c685c9fbffff00       | mov                 byte ptr [ebp - 0x437], 0
            //   c685cafbffff6c       | mov                 byte ptr [ebp - 0x436], 0x6c

    condition:
        7 of them and filesize < 33792
}