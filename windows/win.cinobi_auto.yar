rule win_cinobi_auto {

    meta:
        author = "Felix Bilstein - yara-signator at cocacoding dot com"
        date = "2022-10-07"
        version = "1"
        description = "Detects win.cinobi."
        info = "autogenerated rule brought to you by yara-signator"
        tool = "yara-signator v0.6.0"
        signator_config = "callsandjumps;datarefs;binvalue"
        malpedia_reference = "https://malpedia.caad.fkie.fraunhofer.de/details/win.cinobi"
        malpedia_rule_date = "20221007"
        malpedia_hash = "597f9539014e3d0f350c069cd804aa71679486ae"
        malpedia_version = "20221010"
        malpedia_license = "CC BY-SA 4.0"
        malpedia_sharing = "TLP:WHITE"

    /* DISCLAIMER
     * The strings used in this rule have been automatically selected from the
     * disassembly of memory dumps and unpacked files, using YARA-Signator.
     * The code and documentation is published here:
     * https://github.com/fxb-cocacoding/yara-signator
     * As Malpedia is used as data source, please note that for a given
     * number of families, only single samples are documented.
     * This likely impacts the degree of generalization these rules will offer.
     * Take the described generation method also into consideration when you
     * apply the rules in your use cases and assign them confidence levels.
     */


    strings:
        $sequence_0 = { c9 c3 55 8bec 51 e8???????? 58 }
            // n = 7, score = 200
            //   c9                   | leave               
            //   c3                   | ret                 
            //   55                   | push                ebp
            //   8bec                 | mov                 ebp, esp
            //   51                   | push                ecx
            //   e8????????           |                     
            //   58                   | pop                 eax

        $sequence_1 = { 57 e8???????? ff765f 8986df000000 }
            // n = 4, score = 100
            //   57                   | push                edi
            //   e8????????           |                     
            //   ff765f               | push                dword ptr [esi + 0x5f]
            //   8986df000000         | mov                 dword ptr [esi + 0xdf], eax

        $sequence_2 = { e8???????? 83c40c 8b4dc0 894173 }
            // n = 4, score = 100
            //   e8????????           |                     
            //   83c40c               | add                 esp, 0xc
            //   8b4dc0               | mov                 ecx, dword ptr [ebp - 0x40]
            //   894173               | mov                 dword ptr [ecx + 0x73], eax

        $sequence_3 = { ffb0b7000000 ff75dc e8???????? 83c40c }
            // n = 4, score = 100
            //   ffb0b7000000         | push                dword ptr [eax + 0xb7]
            //   ff75dc               | push                dword ptr [ebp - 0x24]
            //   e8????????           |                     
            //   83c40c               | add                 esp, 0xc

        $sequence_4 = { 660fbe4e18 66898fba1c0000 660fbe4e32 66898fbc1c0000 660fbe0e }
            // n = 5, score = 100
            //   660fbe4e18           | movsx               cx, byte ptr [esi + 0x18]
            //   66898fba1c0000       | mov                 word ptr [edi + 0x1cba], cx
            //   660fbe4e32           | movsx               cx, byte ptr [esi + 0x32]
            //   66898fbc1c0000       | mov                 word ptr [edi + 0x1cbc], cx
            //   660fbe0e             | movsx               cx, byte ptr [esi]

        $sequence_5 = { 8bec 83ec0c e8???????? 8d4df4 }
            // n = 4, score = 100
            //   8bec                 | mov                 ebp, esp
            //   83ec0c               | sub                 esp, 0xc
            //   e8????????           |                     
            //   8d4df4               | lea                 ecx, [ebp - 0xc]

        $sequence_6 = { 8955c4 8b45c4 48 50 6a00 e8???????? 59 }
            // n = 7, score = 100
            //   8955c4               | mov                 dword ptr [ebp - 0x3c], edx
            //   8b45c4               | mov                 eax, dword ptr [ebp - 0x3c]
            //   48                   | dec                 eax
            //   50                   | push                eax
            //   6a00                 | push                0
            //   e8????????           |                     
            //   59                   | pop                 ecx

        $sequence_7 = { 668945a6 8b85a8faffff 660fbe4012 668945a8 8b85a8faffff 660fbe4017 668945aa }
            // n = 7, score = 100
            //   668945a6             | mov                 word ptr [ebp - 0x5a], ax
            //   8b85a8faffff         | mov                 eax, dword ptr [ebp - 0x558]
            //   660fbe4012           | movsx               ax, byte ptr [eax + 0x12]
            //   668945a8             | mov                 word ptr [ebp - 0x58], ax
            //   8b85a8faffff         | mov                 eax, dword ptr [ebp - 0x558]
            //   660fbe4017           | movsx               ax, byte ptr [eax + 0x17]
            //   668945aa             | mov                 word ptr [ebp - 0x56], ax

        $sequence_8 = { e8???????? 8d4dc4 051c520300 51 50 c745c447555845 c745c86b335267 }
            // n = 7, score = 100
            //   e8????????           |                     
            //   8d4dc4               | lea                 ecx, [ebp - 0x3c]
            //   051c520300           | add                 eax, 0x3521c
            //   51                   | push                ecx
            //   50                   | push                eax
            //   c745c447555845       | mov                 dword ptr [ebp - 0x3c], 0x45585547
            //   c745c86b335267       | mov                 dword ptr [ebp - 0x38], 0x6752336b

        $sequence_9 = { 50 8b45c0 ff5063 894594 }
            // n = 4, score = 100
            //   50                   | push                eax
            //   8b45c0               | mov                 eax, dword ptr [ebp - 0x40]
            //   ff5063               | call                dword ptr [eax + 0x63]
            //   894594               | mov                 dword ptr [ebp - 0x6c], eax

        $sequence_10 = { 6a10 668945ee 885dff 58 48 885c05d0 75f9 }
            // n = 7, score = 100
            //   6a10                 | push                0x10
            //   668945ee             | mov                 word ptr [ebp - 0x12], ax
            //   885dff               | mov                 byte ptr [ebp - 1], bl
            //   58                   | pop                 eax
            //   48                   | dec                 eax
            //   885c05d0             | mov                 byte ptr [ebp + eax - 0x30], bl
            //   75f9                 | jne                 0xfffffffb

        $sequence_11 = { 837dfc01 7504 b002 c9 c3 837dfc02 7540 }
            // n = 7, score = 100
            //   837dfc01             | cmp                 dword ptr [ebp - 4], 1
            //   7504                 | jne                 6
            //   b002                 | mov                 al, 2
            //   c9                   | leave               
            //   c3                   | ret                 
            //   837dfc02             | cmp                 dword ptr [ebp - 4], 2
            //   7540                 | jne                 0x42

        $sequence_12 = { 8b45e4 59 6a00 6800100000 ff75f8 8945ec }
            // n = 6, score = 100
            //   8b45e4               | mov                 eax, dword ptr [ebp - 0x1c]
            //   59                   | pop                 ecx
            //   6a00                 | push                0
            //   6800100000           | push                0x1000
            //   ff75f8               | push                dword ptr [ebp - 8]
            //   8945ec               | mov                 dword ptr [ebp - 0x14], eax

        $sequence_13 = { 8b85a8faffff 660fbe4042 668985a2faffff 33c0 668985a4faffff 8b85a8faffff 660fbe4047 }
            // n = 7, score = 100
            //   8b85a8faffff         | mov                 eax, dword ptr [ebp - 0x558]
            //   660fbe4042           | movsx               ax, byte ptr [eax + 0x42]
            //   668985a2faffff       | mov                 word ptr [ebp - 0x55e], ax
            //   33c0                 | xor                 eax, eax
            //   668985a4faffff       | mov                 word ptr [ebp - 0x55c], ax
            //   8b85a8faffff         | mov                 eax, dword ptr [ebp - 0x558]
            //   660fbe4047           | movsx               ax, byte ptr [eax + 0x47]

        $sequence_14 = { ff7508 e8???????? 83c40c 33c0 8b4d10 8b5508 }
            // n = 6, score = 100
            //   ff7508               | push                dword ptr [ebp + 8]
            //   e8????????           |                     
            //   83c40c               | add                 esp, 0xc
            //   33c0                 | xor                 eax, eax
            //   8b4d10               | mov                 ecx, dword ptr [ebp + 0x10]
            //   8b5508               | mov                 edx, dword ptr [ebp + 8]

    condition:
        7 of them and filesize < 32768
}