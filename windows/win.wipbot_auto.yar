rule win_wipbot_auto {

    meta:
        author = "Felix Bilstein - yara-signator at cocacoding dot com"
        date = "2022-10-07"
        version = "1"
        description = "Detects win.wipbot."
        info = "autogenerated rule brought to you by yara-signator"
        tool = "yara-signator v0.6.0"
        signator_config = "callsandjumps;datarefs;binvalue"
        malpedia_reference = "https://malpedia.caad.fkie.fraunhofer.de/details/win.wipbot"
        malpedia_rule_date = "20221007"
        malpedia_hash = "597f9539014e3d0f350c069cd804aa71679486ae"
        malpedia_version = "20221010"
        malpedia_license = "CC BY-SA 4.0"
        malpedia_sharing = "TLP:WHITE"

    /* DISCLAIMER
     * The strings used in this rule have been automatically selected from the
     * disassembly of memory dumps and unpacked files, using YARA-Signator.
     * The code and documentation is published here:
     * https://github.com/fxb-cocacoding/yara-signator
     * As Malpedia is used as data source, please note that for a given
     * number of families, only single samples are documented.
     * This likely impacts the degree of generalization these rules will offer.
     * Take the described generation method also into consideration when you
     * apply the rules in your use cases and assign them confidence levels.
     */


    strings:
        $sequence_0 = { 8d8424f8040000 48 c744242000000000 31d2 48 89d9 }
            // n = 6, score = 100
            //   8d8424f8040000       | lea                 eax, [esp + 0x4f8]
            //   48                   | dec                 eax
            //   c744242000000000     | mov                 dword ptr [esp + 0x20], 0
            //   31d2                 | xor                 edx, edx
            //   48                   | dec                 eax
            //   89d9                 | mov                 ecx, ebx

        $sequence_1 = { 8d442468 c744243802000000 4c 896c2430 4c 89f1 48 }
            // n = 7, score = 100
            //   8d442468             | lea                 eax, [esp + 0x68]
            //   c744243802000000     | mov                 dword ptr [esp + 0x38], 2
            //   4c                   | dec                 esp
            //   896c2430             | mov                 dword ptr [esp + 0x30], ebp
            //   4c                   | dec                 esp
            //   89f1                 | mov                 ecx, esi
            //   48                   | dec                 eax

        $sequence_2 = { e8???????? 8b4b04 89da 89f0 e8???????? }
            // n = 5, score = 100
            //   e8????????           |                     
            //   8b4b04               | mov                 ecx, dword ptr [ebx + 4]
            //   89da                 | mov                 edx, ebx
            //   89f0                 | mov                 eax, esi
            //   e8????????           |                     

        $sequence_3 = { c685c9feffff7b c685cafeffff66 c685cbfeffff6f c685ccfeffff73 c685cdfeffff44 c685cefeffff7c c685cffeffff7d }
            // n = 7, score = 100
            //   c685c9feffff7b       | mov                 byte ptr [ebp - 0x137], 0x7b
            //   c685cafeffff66       | mov                 byte ptr [ebp - 0x136], 0x66
            //   c685cbfeffff6f       | mov                 byte ptr [ebp - 0x135], 0x6f
            //   c685ccfeffff73       | mov                 byte ptr [ebp - 0x134], 0x73
            //   c685cdfeffff44       | mov                 byte ptr [ebp - 0x133], 0x44
            //   c685cefeffff7c       | mov                 byte ptr [ebp - 0x132], 0x7c
            //   c685cffeffff7d       | mov                 byte ptr [ebp - 0x131], 0x7d

        $sequence_4 = { 45 31c0 ba11000000 48 89d9 ffd0 85c0 }
            // n = 7, score = 100
            //   45                   | inc                 ebp
            //   31c0                 | xor                 eax, eax
            //   ba11000000           | mov                 edx, 0x11
            //   48                   | dec                 eax
            //   89d9                 | mov                 ecx, ebx
            //   ffd0                 | call                eax
            //   85c0                 | test                eax, eax

        $sequence_5 = { 53 83ec3c 8945d4 b8de3e4b5a 8955d0 ba6cf4af8f 894dcc }
            // n = 7, score = 100
            //   53                   | push                ebx
            //   83ec3c               | sub                 esp, 0x3c
            //   8945d4               | mov                 dword ptr [ebp - 0x2c], eax
            //   b8de3e4b5a           | mov                 eax, 0x5a4b3ede
            //   8955d0               | mov                 dword ptr [ebp - 0x30], edx
            //   ba6cf4af8f           | mov                 edx, 0x8faff46c
            //   894dcc               | mov                 dword ptr [ebp - 0x34], ecx

        $sequence_6 = { 40 83f844 8d9d9cf9ffff 75ec b8???????? c7859cf9ffff44000000 }
            // n = 6, score = 100
            //   40                   | inc                 eax
            //   83f844               | cmp                 eax, 0x44
            //   8d9d9cf9ffff         | lea                 ebx, [ebp - 0x664]
            //   75ec                 | jne                 0xffffffee
            //   b8????????           |                     
            //   c7859cf9ffff44000000     | mov    dword ptr [ebp - 0x664], 0x44

        $sequence_7 = { 7407 48 833900 0f94c0 }
            // n = 4, score = 100
            //   7407                 | je                  9
            //   48                   | dec                 eax
            //   833900               | cmp                 dword ptr [ecx], 0
            //   0f94c0               | sete                al

        $sequence_8 = { eb7d 48 894c2438 e8???????? 01c0 ba9ad65fb0 b98a758b1f }
            // n = 7, score = 100
            //   eb7d                 | jmp                 0x7f
            //   48                   | dec                 eax
            //   894c2438             | mov                 dword ptr [esp + 0x38], ecx
            //   e8????????           |                     
            //   01c0                 | add                 eax, eax
            //   ba9ad65fb0           | mov                 edx, 0xb05fd69a
            //   b98a758b1f           | mov                 ecx, 0x1f8b758a

        $sequence_9 = { 85c0 7411 48 8b4010 48 8b4860 }
            // n = 6, score = 100
            //   85c0                 | test                eax, eax
            //   7411                 | je                  0x13
            //   48                   | dec                 eax
            //   8b4010               | mov                 eax, dword ptr [eax + 0x10]
            //   48                   | dec                 eax
            //   8b4860               | mov                 ecx, dword ptr [eax + 0x60]

    condition:
        7 of them and filesize < 253952
}