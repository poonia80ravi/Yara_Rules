rule win_mozart_auto {

    meta:
        author = "Felix Bilstein - yara-signator at cocacoding dot com"
        date = "2022-10-07"
        version = "1"
        description = "Detects win.mozart."
        info = "autogenerated rule brought to you by yara-signator"
        tool = "yara-signator v0.6.0"
        signator_config = "callsandjumps;datarefs;binvalue"
        malpedia_reference = "https://malpedia.caad.fkie.fraunhofer.de/details/win.mozart"
        malpedia_rule_date = "20221007"
        malpedia_hash = "597f9539014e3d0f350c069cd804aa71679486ae"
        malpedia_version = "20221010"
        malpedia_license = "CC BY-SA 4.0"
        malpedia_sharing = "TLP:WHITE"

    /* DISCLAIMER
     * The strings used in this rule have been automatically selected from the
     * disassembly of memory dumps and unpacked files, using YARA-Signator.
     * The code and documentation is published here:
     * https://github.com/fxb-cocacoding/yara-signator
     * As Malpedia is used as data source, please note that for a given
     * number of families, only single samples are documented.
     * This likely impacts the degree of generalization these rules will offer.
     * Take the described generation method also into consideration when you
     * apply the rules in your use cases and assign them confidence levels.
     */


    strings:
        $sequence_0 = { 3bde 0f94c0 5f 5e 5b 48 }
            // n = 6, score = 200
            //   3bde                 | cmp                 ebx, esi
            //   0f94c0               | sete                al
            //   5f                   | pop                 edi
            //   5e                   | pop                 esi
            //   5b                   | pop                 ebx
            //   48                   | dec                 eax

        $sequence_1 = { e8???????? 83c424 33f6 33ff c644241800 33ed e9???????? }
            // n = 7, score = 200
            //   e8????????           |                     
            //   83c424               | add                 esp, 0x24
            //   33f6                 | xor                 esi, esi
            //   33ff                 | xor                 edi, edi
            //   c644241800           | mov                 byte ptr [esp + 0x18], 0
            //   33ed                 | xor                 ebp, ebp
            //   e9????????           |                     

        $sequence_2 = { 83e61f 8d3c8dc0db4000 8b0f c1e603 f644310401 7455 }
            // n = 6, score = 200
            //   83e61f               | and                 esi, 0x1f
            //   8d3c8dc0db4000       | lea                 edi, [ecx*4 + 0x40dbc0]
            //   8b0f                 | mov                 ecx, dword ptr [edi]
            //   c1e603               | shl                 esi, 3
            //   f644310401           | test                byte ptr [ecx + esi + 4], 1
            //   7455                 | je                  0x57

        $sequence_3 = { 6800100000 8d4c2410 51 e8???????? 85c0 7431 }
            // n = 6, score = 200
            //   6800100000           | push                0x1000
            //   8d4c2410             | lea                 ecx, [esp + 0x10]
            //   51                   | push                ecx
            //   e8????????           |                     
            //   85c0                 | test                eax, eax
            //   7431                 | je                  0x33

        $sequence_4 = { 7416 8bc3 c1f805 8b0485c0db4000 8bcb }
            // n = 5, score = 200
            //   7416                 | je                  0x18
            //   8bc3                 | mov                 eax, ebx
            //   c1f805               | sar                 eax, 5
            //   8b0485c0db4000       | mov                 eax, dword ptr [eax*4 + 0x40dbc0]
            //   8bcb                 | mov                 ecx, ebx

        $sequence_5 = { 33f6 3b1d???????? 8945fc 0f831b010000 8bc3 c1f805 8b0485c0db4000 }
            // n = 7, score = 200
            //   33f6                 | xor                 esi, esi
            //   3b1d????????         |                     
            //   8945fc               | mov                 dword ptr [ebp - 4], eax
            //   0f831b010000         | jae                 0x121
            //   8bc3                 | mov                 eax, ebx
            //   c1f805               | sar                 eax, 5
            //   8b0485c0db4000       | mov                 eax, dword ptr [eax*4 + 0x40dbc0]

        $sequence_6 = { 55 e8???????? 8b8c2414040000 83c404 5f }
            // n = 5, score = 200
            //   55                   | push                ebp
            //   e8????????           |                     
            //   8b8c2414040000       | mov                 ecx, dword ptr [esp + 0x414]
            //   83c404               | add                 esp, 4
            //   5f                   | pop                 edi

        $sequence_7 = { 8a8ae0ba4000 8a042f 2ac1 8807 b8???????? 42 8d7001 }
            // n = 7, score = 200
            //   8a8ae0ba4000         | mov                 cl, byte ptr [edx + 0x40bae0]
            //   8a042f               | mov                 al, byte ptr [edi + ebp]
            //   2ac1                 | sub                 al, cl
            //   8807                 | mov                 byte ptr [edi], al
            //   b8????????           |                     
            //   42                   | inc                 edx
            //   8d7001               | lea                 esi, [eax + 1]

        $sequence_8 = { 48 75f5 bf???????? c680f1ba400000 }
            // n = 4, score = 200
            //   48                   | dec                 eax
            //   75f5                 | jne                 0xfffffff7
            //   bf????????           |                     
            //   c680f1ba400000       | mov                 byte ptr [eax + 0x40baf1], 0

        $sequence_9 = { 8d8c2440010000 51 8d942444020000 52 68???????? e8???????? }
            // n = 6, score = 200
            //   8d8c2440010000       | lea                 ecx, [esp + 0x140]
            //   51                   | push                ecx
            //   8d942444020000       | lea                 edx, [esp + 0x244]
            //   52                   | push                edx
            //   68????????           |                     
            //   e8????????           |                     

    condition:
        7 of them and filesize < 114688
}