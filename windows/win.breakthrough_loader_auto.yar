rule win_breakthrough_loader_auto {

    meta:
        author = "Felix Bilstein - yara-signator at cocacoding dot com"
        date = "2022-10-07"
        version = "1"
        description = "Detects win.breakthrough_loader."
        info = "autogenerated rule brought to you by yara-signator"
        tool = "yara-signator v0.6.0"
        signator_config = "callsandjumps;datarefs;binvalue"
        malpedia_reference = "https://malpedia.caad.fkie.fraunhofer.de/details/win.breakthrough_loader"
        malpedia_rule_date = "20221007"
        malpedia_hash = "597f9539014e3d0f350c069cd804aa71679486ae"
        malpedia_version = "20221010"
        malpedia_license = "CC BY-SA 4.0"
        malpedia_sharing = "TLP:WHITE"

    /* DISCLAIMER
     * The strings used in this rule have been automatically selected from the
     * disassembly of memory dumps and unpacked files, using YARA-Signator.
     * The code and documentation is published here:
     * https://github.com/fxb-cocacoding/yara-signator
     * As Malpedia is used as data source, please note that for a given
     * number of families, only single samples are documented.
     * This likely impacts the degree of generalization these rules will offer.
     * Take the described generation method also into consideration when you
     * apply the rules in your use cases and assign them confidence levels.
     */


    strings:
        $sequence_0 = { 3bf0 75bd 807b3d00 7419 }
            // n = 4, score = 100
            //   3bf0                 | cmp                 esi, eax
            //   75bd                 | jne                 0xffffffbf
            //   807b3d00             | cmp                 byte ptr [ebx + 0x3d], 0
            //   7419                 | je                  0x1b

        $sequence_1 = { 8908 8b432c 8b4d08 8910 837b3800 7523 ff734c }
            // n = 7, score = 100
            //   8908                 | mov                 dword ptr [eax], ecx
            //   8b432c               | mov                 eax, dword ptr [ebx + 0x2c]
            //   8b4d08               | mov                 ecx, dword ptr [ebp + 8]
            //   8910                 | mov                 dword ptr [eax], edx
            //   837b3800             | cmp                 dword ptr [ebx + 0x38], 0
            //   7523                 | jne                 0x25
            //   ff734c               | push                dword ptr [ebx + 0x4c]

        $sequence_2 = { 807c01020d 7507 807c01030a 7403 40 ebe2 }
            // n = 6, score = 100
            //   807c01020d           | cmp                 byte ptr [ecx + eax + 2], 0xd
            //   7507                 | jne                 9
            //   807c01030a           | cmp                 byte ptr [ecx + eax + 3], 0xa
            //   7403                 | je                  5
            //   40                   | inc                 eax
            //   ebe2                 | jmp                 0xffffffe4

        $sequence_3 = { 83bc243001000000 740e 8d8424e0000000 50 56 e8???????? 56 }
            // n = 7, score = 100
            //   83bc243001000000     | cmp                 dword ptr [esp + 0x130], 0
            //   740e                 | je                  0x10
            //   8d8424e0000000       | lea                 eax, [esp + 0xe0]
            //   50                   | push                eax
            //   56                   | push                esi
            //   e8????????           |                     
            //   56                   | push                esi

        $sequence_4 = { 8b1d???????? 56 ffd3 8bcf 2bc8 81c1???????? }
            // n = 6, score = 100
            //   8b1d????????         |                     
            //   56                   | push                esi
            //   ffd3                 | call                ebx
            //   8bcf                 | mov                 ecx, edi
            //   2bc8                 | sub                 ecx, eax
            //   81c1????????         |                     

        $sequence_5 = { 8bec 8b4d08 33c0 3b0cc5506b4400 }
            // n = 4, score = 100
            //   8bec                 | mov                 ebp, esp
            //   8b4d08               | mov                 ecx, dword ptr [ebp + 8]
            //   33c0                 | xor                 eax, eax
            //   3b0cc5506b4400       | cmp                 ecx, dword ptr [eax*8 + 0x446b50]

        $sequence_6 = { 0fbec1 0fb680b86a4400 83e00f eb02 }
            // n = 4, score = 100
            //   0fbec1               | movsx               eax, cl
            //   0fb680b86a4400       | movzx               eax, byte ptr [eax + 0x446ab8]
            //   83e00f               | and                 eax, 0xf
            //   eb02                 | jmp                 4

        $sequence_7 = { 57 6a07 83ec08 8bf1 e8???????? c745fc0f000000 c745f800000000 }
            // n = 7, score = 100
            //   57                   | push                edi
            //   6a07                 | push                7
            //   83ec08               | sub                 esp, 8
            //   8bf1                 | mov                 esi, ecx
            //   e8????????           |                     
            //   c745fc0f000000       | mov                 dword ptr [ebp - 4], 0xf
            //   c745f800000000       | mov                 dword ptr [ebp - 8], 0

        $sequence_8 = { 8be5 5d c20400 8d45f0 c745ec44224400 }
            // n = 5, score = 100
            //   8be5                 | mov                 esp, ebp
            //   5d                   | pop                 ebp
            //   c20400               | ret                 4
            //   8d45f0               | lea                 eax, [ebp - 0x10]
            //   c745ec44224400       | mov                 dword ptr [ebp - 0x14], 0x442244

        $sequence_9 = { 40 50 8945fc e8???????? 83c41c 8bf0 837f1410 }
            // n = 7, score = 100
            //   40                   | inc                 eax
            //   50                   | push                eax
            //   8945fc               | mov                 dword ptr [ebp - 4], eax
            //   e8????????           |                     
            //   83c41c               | add                 esp, 0x1c
            //   8bf0                 | mov                 esi, eax
            //   837f1410             | cmp                 dword ptr [edi + 0x14], 0x10

    condition:
        7 of them and filesize < 753664
}