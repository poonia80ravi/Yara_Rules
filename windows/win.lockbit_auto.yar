rule win_lockbit_auto {

    meta:
        author = "Felix Bilstein - yara-signator at cocacoding dot com"
        date = "2022-10-07"
        version = "1"
        description = "Detects win.lockbit."
        info = "autogenerated rule brought to you by yara-signator"
        tool = "yara-signator v0.6.0"
        signator_config = "callsandjumps;datarefs;binvalue"
        malpedia_reference = "https://malpedia.caad.fkie.fraunhofer.de/details/win.lockbit"
        malpedia_rule_date = "20221007"
        malpedia_hash = "597f9539014e3d0f350c069cd804aa71679486ae"
        malpedia_version = "20221010"
        malpedia_license = "CC BY-SA 4.0"
        malpedia_sharing = "TLP:WHITE"

    /* DISCLAIMER
     * The strings used in this rule have been automatically selected from the
     * disassembly of memory dumps and unpacked files, using YARA-Signator.
     * The code and documentation is published here:
     * https://github.com/fxb-cocacoding/yara-signator
     * As Malpedia is used as data source, please note that for a given
     * number of families, only single samples are documented.
     * This likely impacts the degree of generalization these rules will offer.
     * Take the described generation method also into consideration when you
     * apply the rules in your use cases and assign them confidence levels.
     */


    strings:
        $sequence_0 = { 6685c0 7505 e9???????? 6683f841 720c }
            // n = 5, score = 300
            //   6685c0               | test                ax, ax
            //   7505                 | jne                 7
            //   e9????????           |                     
            //   6683f841             | cmp                 ax, 0x41
            //   720c                 | jb                  0xe

        $sequence_1 = { 8bd0 f7d2 ad c1c00b 0fc8 }
            // n = 5, score = 300
            //   8bd0                 | mov                 edx, eax
            //   f7d2                 | not                 edx
            //   ad                   | lodsd               eax, dword ptr [esi]
            //   c1c00b               | rol                 eax, 0xb
            //   0fc8                 | bswap               eax

        $sequence_2 = { 8d857cffffff 50 57 e8???????? ff750c }
            // n = 5, score = 300
            //   8d857cffffff         | lea                 eax, [ebp - 0x84]
            //   50                   | push                eax
            //   57                   | push                edi
            //   e8????????           |                     
            //   ff750c               | push                dword ptr [ebp + 0xc]

        $sequence_3 = { 50 8d45fc 50 ff75fc ff75f4 }
            // n = 5, score = 300
            //   50                   | push                eax
            //   8d45fc               | lea                 eax, [ebp - 4]
            //   50                   | push                eax
            //   ff75fc               | push                dword ptr [ebp - 4]
            //   ff75f4               | push                dword ptr [ebp - 0xc]

        $sequence_4 = { 6683f839 7706 6683e830 eb05 }
            // n = 4, score = 300
            //   6683f839             | cmp                 ax, 0x39
            //   7706                 | ja                  8
            //   6683e830             | sub                 ax, 0x30
            //   eb05                 | jmp                 7

        $sequence_5 = { 4e 85f6 75d2 5d 5f }
            // n = 5, score = 300
            //   4e                   | dec                 esi
            //   85f6                 | test                esi, esi
            //   75d2                 | jne                 0xffffffd4
            //   5d                   | pop                 ebp
            //   5f                   | pop                 edi

        $sequence_6 = { 8b7d0c 66ad 6685c0 7505 }
            // n = 4, score = 300
            //   8b7d0c               | mov                 edi, dword ptr [ebp + 0xc]
            //   66ad                 | lodsw               ax, word ptr [esi]
            //   6685c0               | test                ax, ax
            //   7505                 | jne                 7

        $sequence_7 = { 33c2 8bd0 f7d2 ab c1c005 }
            // n = 5, score = 300
            //   33c2                 | xor                 eax, edx
            //   8bd0                 | mov                 edx, eax
            //   f7d2                 | not                 edx
            //   ab                   | stosd               dword ptr es:[edi], eax
            //   c1c005               | rol                 eax, 5

        $sequence_8 = { 57 33c0 8b5d14 33c9 }
            // n = 4, score = 300
            //   57                   | push                edi
            //   33c0                 | xor                 eax, eax
            //   8b5d14               | mov                 ebx, dword ptr [ebp + 0x14]
            //   33c9                 | xor                 ecx, ecx

        $sequence_9 = { 888424e1040000 33ff c68424e204000000 57 }
            // n = 4, score = 100
            //   888424e1040000       | mov                 byte ptr [esp + 0x4e1], al
            //   33ff                 | xor                 edi, edi
            //   c68424e204000000     | mov                 byte ptr [esp + 0x4e2], 0
            //   57                   | push                edi

        $sequence_10 = { 888424e1030000 e8???????? 6a72 8d8c24cc030000 }
            // n = 4, score = 100
            //   888424e1030000       | mov                 byte ptr [esp + 0x3e1], al
            //   e8????????           |                     
            //   6a72                 | push                0x72
            //   8d8c24cc030000       | lea                 ecx, [esp + 0x3cc]

        $sequence_11 = { 888424e1020000 e8???????? 6a6e 8d8c24d4020000 }
            // n = 4, score = 100
            //   888424e1020000       | mov                 byte ptr [esp + 0x2e1], al
            //   e8????????           |                     
            //   6a6e                 | push                0x6e
            //   8d8c24d4020000       | lea                 ecx, [esp + 0x2d4]

        $sequence_12 = { 888424e1040000 e8???????? 6a65 8d8c24c1040000 }
            // n = 4, score = 100
            //   888424e1040000       | mov                 byte ptr [esp + 0x4e1], al
            //   e8????????           |                     
            //   6a65                 | push                0x65
            //   8d8c24c1040000       | lea                 ecx, [esp + 0x4c1]

        $sequence_13 = { 888424e1060000 32e9 8a442412 32d1 }
            // n = 4, score = 100
            //   888424e1060000       | mov                 byte ptr [esp + 0x6e1], al
            //   32e9                 | xor                 ch, cl
            //   8a442412             | mov                 al, byte ptr [esp + 0x12]
            //   32d1                 | xor                 dl, cl

        $sequence_14 = { 888424e1000000 e8???????? 6a6e 8d8c24dc000000 888424e2000000 }
            // n = 5, score = 100
            //   888424e1000000       | mov                 byte ptr [esp + 0xe1], al
            //   e8????????           |                     
            //   6a6e                 | push                0x6e
            //   8d8c24dc000000       | lea                 ecx, [esp + 0xdc]
            //   888424e2000000       | mov                 byte ptr [esp + 0xe2], al

        $sequence_15 = { 888424e1010000 e8???????? 6a63 8d8c24da010000 }
            // n = 4, score = 100
            //   888424e1010000       | mov                 byte ptr [esp + 0x1e1], al
            //   e8????????           |                     
            //   6a63                 | push                0x63
            //   8d8c24da010000       | lea                 ecx, [esp + 0x1da]

    condition:
        7 of them and filesize < 360448
}