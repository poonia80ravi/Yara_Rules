rule win_coronavirus_ransomware_auto {

    meta:
        author = "Felix Bilstein - yara-signator at cocacoding dot com"
        date = "2022-10-07"
        version = "1"
        description = "Detects win.coronavirus_ransomware."
        info = "autogenerated rule brought to you by yara-signator"
        tool = "yara-signator v0.6.0"
        signator_config = "callsandjumps;datarefs;binvalue"
        malpedia_reference = "https://malpedia.caad.fkie.fraunhofer.de/details/win.coronavirus_ransomware"
        malpedia_rule_date = "20221007"
        malpedia_hash = "597f9539014e3d0f350c069cd804aa71679486ae"
        malpedia_version = "20221010"
        malpedia_license = "CC BY-SA 4.0"
        malpedia_sharing = "TLP:WHITE"

    /* DISCLAIMER
     * The strings used in this rule have been automatically selected from the
     * disassembly of memory dumps and unpacked files, using YARA-Signator.
     * The code and documentation is published here:
     * https://github.com/fxb-cocacoding/yara-signator
     * As Malpedia is used as data source, please note that for a given
     * number of families, only single samples are documented.
     * This likely impacts the degree of generalization these rules will offer.
     * Take the described generation method also into consideration when you
     * apply the rules in your use cases and assign them confidence levels.
     */


    strings:
        $sequence_0 = { b8???????? e8???????? 8b15???????? 50 52 ffd6 68???????? }
            // n = 7, score = 100
            //   b8????????           |                     
            //   e8????????           |                     
            //   8b15????????         |                     
            //   50                   | push                eax
            //   52                   | push                edx
            //   ffd6                 | call                esi
            //   68????????           |                     

        $sequence_1 = { c745fcffffffff 68???????? ff15???????? 8b0d???????? 83f901 7e0b 68???????? }
            // n = 7, score = 100
            //   c745fcffffffff       | mov                 dword ptr [ebp - 4], 0xffffffff
            //   68????????           |                     
            //   ff15????????         |                     
            //   8b0d????????         |                     
            //   83f901               | cmp                 ecx, 1
            //   7e0b                 | jle                 0xd
            //   68????????           |                     

        $sequence_2 = { 8b7dd0 53 e8???????? 50 a3???????? }
            // n = 5, score = 100
            //   8b7dd0               | mov                 edi, dword ptr [ebp - 0x30]
            //   53                   | push                ebx
            //   e8????????           |                     
            //   50                   | push                eax
            //   a3????????           |                     

        $sequence_3 = { 8b75e4 8b0d???????? 56 6a09 51 ff15???????? }
            // n = 6, score = 100
            //   8b75e4               | mov                 esi, dword ptr [ebp - 0x1c]
            //   8b0d????????         |                     
            //   56                   | push                esi
            //   6a09                 | push                9
            //   51                   | push                ecx
            //   ff15????????         |                     

        $sequence_4 = { 66390b 75a1 e9???????? 6800100000 ff15???????? 648b152c000000 }
            // n = 6, score = 100
            //   66390b               | cmp                 word ptr [ebx], cx
            //   75a1                 | jne                 0xffffffa3
            //   e9????????           |                     
            //   6800100000           | push                0x1000
            //   ff15????????         |                     
            //   648b152c000000       | mov                 edx, dword ptr fs:[0x2c]

        $sequence_5 = { 897dbc 8b5de0 895dc0 83ffff 7508 85db 0f84d9020000 }
            // n = 7, score = 100
            //   897dbc               | mov                 dword ptr [ebp - 0x44], edi
            //   8b5de0               | mov                 ebx, dword ptr [ebp - 0x20]
            //   895dc0               | mov                 dword ptr [ebp - 0x40], ebx
            //   83ffff               | cmp                 edi, -1
            //   7508                 | jne                 0xa
            //   85db                 | test                ebx, ebx
            //   0f84d9020000         | je                  0x2df

        $sequence_6 = { 89048d8ccf4000 81f9e3000000 7cc1 81f96f020000 7d3a }
            // n = 5, score = 100
            //   89048d8ccf4000       | mov                 dword ptr [ecx*4 + 0x40cf8c], eax
            //   81f9e3000000         | cmp                 ecx, 0xe3
            //   7cc1                 | jl                  0xffffffc3
            //   81f96f020000         | cmp                 ecx, 0x26f
            //   7d3a                 | jge                 0x3c

        $sequence_7 = { ff15???????? e8???????? 035dc4 807d0802 8b7dc8 0f8583000000 807d0c01 }
            // n = 7, score = 100
            //   ff15????????         |                     
            //   e8????????           |                     
            //   035dc4               | add                 ebx, dword ptr [ebp - 0x3c]
            //   807d0802             | cmp                 byte ptr [ebp + 8], 2
            //   8b7dc8               | mov                 edi, dword ptr [ebp - 0x38]
            //   0f8583000000         | jne                 0x89
            //   807d0c01             | cmp                 byte ptr [ebp + 0xc], 1

        $sequence_8 = { 50 ffd6 833d????????00 a3???????? 740d 833d????????00 }
            // n = 6, score = 100
            //   50                   | push                eax
            //   ffd6                 | call                esi
            //   833d????????00       |                     
            //   a3????????           |                     
            //   740d                 | je                  0xf
            //   833d????????00       |                     

        $sequence_9 = { 84c0 7426 0fb60d???????? 0fb6c0 0fb68080fa4000 03c1 }
            // n = 6, score = 100
            //   84c0                 | test                al, al
            //   7426                 | je                  0x28
            //   0fb60d????????       |                     
            //   0fb6c0               | movzx               eax, al
            //   0fb68080fa4000       | movzx               eax, byte ptr [eax + 0x40fa80]
            //   03c1                 | add                 eax, ecx

    condition:
        7 of them and filesize < 235520
}