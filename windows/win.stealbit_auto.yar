rule win_stealbit_auto {

    meta:
        author = "Felix Bilstein - yara-signator at cocacoding dot com"
        date = "2022-10-07"
        version = "1"
        description = "Detects win.stealbit."
        info = "autogenerated rule brought to you by yara-signator"
        tool = "yara-signator v0.6.0"
        signator_config = "callsandjumps;datarefs;binvalue"
        malpedia_reference = "https://malpedia.caad.fkie.fraunhofer.de/details/win.stealbit"
        malpedia_rule_date = "20221007"
        malpedia_hash = "597f9539014e3d0f350c069cd804aa71679486ae"
        malpedia_version = "20221010"
        malpedia_license = "CC BY-SA 4.0"
        malpedia_sharing = "TLP:WHITE"

    /* DISCLAIMER
     * The strings used in this rule have been automatically selected from the
     * disassembly of memory dumps and unpacked files, using YARA-Signator.
     * The code and documentation is published here:
     * https://github.com/fxb-cocacoding/yara-signator
     * As Malpedia is used as data source, please note that for a given
     * number of families, only single samples are documented.
     * This likely impacts the degree of generalization these rules will offer.
     * Take the described generation method also into consideration when you
     * apply the rules in your use cases and assign them confidence levels.
     */


    strings:
        $sequence_0 = { 884204 e8???????? 56 8ac8 6a65 884a05 e8???????? }
            // n = 7, score = 300
            //   884204               | mov                 byte ptr [edx + 4], al
            //   e8????????           |                     
            //   56                   | push                esi
            //   8ac8                 | mov                 cl, al
            //   6a65                 | push                0x65
            //   884a05               | mov                 byte ptr [edx + 5], cl
            //   e8????????           |                     

        $sequence_1 = { 6a25 e8???????? 6a73 8801 e8???????? 6a0d 884101 }
            // n = 7, score = 300
            //   6a25                 | push                0x25
            //   e8????????           |                     
            //   6a73                 | push                0x73
            //   8801                 | mov                 byte ptr [ecx], al
            //   e8????????           |                     
            //   6a0d                 | push                0xd
            //   884101               | mov                 byte ptr [ecx + 1], al

        $sequence_2 = { 033d???????? 83c40c ff35???????? 68???????? 57 e8???????? 0fb706 }
            // n = 7, score = 300
            //   033d????????         |                     
            //   83c40c               | add                 esp, 0xc
            //   ff35????????         |                     
            //   68????????           |                     
            //   57                   | push                edi
            //   e8????????           |                     
            //   0fb706               | movzx               eax, word ptr [esi]

        $sequence_3 = { 8b7d14 8bd9 f7f3 8bd0 8b450c 83c704 8bcf }
            // n = 7, score = 300
            //   8b7d14               | mov                 edi, dword ptr [ebp + 0x14]
            //   8bd9                 | mov                 ebx, ecx
            //   f7f3                 | div                 ebx
            //   8bd0                 | mov                 edx, eax
            //   8b450c               | mov                 eax, dword ptr [ebp + 0xc]
            //   83c704               | add                 edi, 4
            //   8bcf                 | mov                 ecx, edi

        $sequence_4 = { f7f3 8bd0 8b450c 83c704 8bcf e8???????? }
            // n = 6, score = 300
            //   f7f3                 | div                 ebx
            //   8bd0                 | mov                 edx, eax
            //   8b450c               | mov                 eax, dword ptr [ebp + 0xc]
            //   83c704               | add                 edi, 4
            //   8bcf                 | mov                 ecx, edi
            //   e8????????           |                     

        $sequence_5 = { 58 6a65 66898544feffff 58 6a78 }
            // n = 5, score = 300
            //   58                   | pop                 eax
            //   6a65                 | push                0x65
            //   66898544feffff       | mov                 word ptr [ebp - 0x1bc], ax
            //   58                   | pop                 eax
            //   6a78                 | push                0x78

        $sequence_6 = { e8???????? 8bc8 e8???????? ffd0 8d85c4fbffff }
            // n = 5, score = 300
            //   e8????????           |                     
            //   8bc8                 | mov                 ecx, eax
            //   e8????????           |                     
            //   ffd0                 | call                eax
            //   8d85c4fbffff         | lea                 eax, [ebp - 0x43c]

        $sequence_7 = { 58 6a6d 66898572fcffff 66898576fcffff 33c0 66898578fcffff }
            // n = 6, score = 300
            //   58                   | pop                 eax
            //   6a6d                 | push                0x6d
            //   66898572fcffff       | mov                 word ptr [ebp - 0x38e], ax
            //   66898576fcffff       | mov                 word ptr [ebp - 0x38a], ax
            //   33c0                 | xor                 eax, eax
            //   66898578fcffff       | mov                 word ptr [ebp - 0x388], ax

        $sequence_8 = { 57 56 6a05 5a 8d4df4 e8???????? 85c0 }
            // n = 7, score = 300
            //   57                   | push                edi
            //   56                   | push                esi
            //   6a05                 | push                5
            //   5a                   | pop                 edx
            //   8d4df4               | lea                 ecx, [ebp - 0xc]
            //   e8????????           |                     
            //   85c0                 | test                eax, eax

        $sequence_9 = { 55 8bec 8a450c 324508 5d c20800 55 }
            // n = 7, score = 300
            //   55                   | push                ebp
            //   8bec                 | mov                 ebp, esp
            //   8a450c               | mov                 al, byte ptr [ebp + 0xc]
            //   324508               | xor                 al, byte ptr [ebp + 8]
            //   5d                   | pop                 ebp
            //   c20800               | ret                 8
            //   55                   | push                ebp

    condition:
        7 of them and filesize < 131072
}