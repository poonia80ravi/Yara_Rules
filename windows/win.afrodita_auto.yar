rule win_afrodita_auto {

    meta:
        author = "Felix Bilstein - yara-signator at cocacoding dot com"
        date = "2022-10-07"
        version = "1"
        description = "Detects win.afrodita."
        info = "autogenerated rule brought to you by yara-signator"
        tool = "yara-signator v0.6.0"
        signator_config = "callsandjumps;datarefs;binvalue"
        malpedia_reference = "https://malpedia.caad.fkie.fraunhofer.de/details/win.afrodita"
        malpedia_rule_date = "20221007"
        malpedia_hash = "597f9539014e3d0f350c069cd804aa71679486ae"
        malpedia_version = "20221010"
        malpedia_license = "CC BY-SA 4.0"
        malpedia_sharing = "TLP:WHITE"

    /* DISCLAIMER
     * The strings used in this rule have been automatically selected from the
     * disassembly of memory dumps and unpacked files, using YARA-Signator.
     * The code and documentation is published here:
     * https://github.com/fxb-cocacoding/yara-signator
     * As Malpedia is used as data source, please note that for a given
     * number of families, only single samples are documented.
     * This likely impacts the degree of generalization these rules will offer.
     * Take the described generation method also into consideration when you
     * apply the rules in your use cases and assign them confidence levels.
     */


    strings:
        $sequence_0 = { e8???????? 84c0 0f84a6050000 6a01 8d4dd8 e8???????? }
            // n = 6, score = 300
            //   e8????????           |                     
            //   84c0                 | test                al, al
            //   0f84a6050000         | je                  0x5ac
            //   6a01                 | push                1
            //   8d4dd8               | lea                 ecx, [ebp - 0x28]
            //   e8????????           |                     

        $sequence_1 = { 8bfe 0f4255d8 33c0 c645fc09 8bca f3ab }
            // n = 6, score = 300
            //   8bfe                 | mov                 edi, esi
            //   0f4255d8             | cmovb               edx, dword ptr [ebp - 0x28]
            //   33c0                 | xor                 eax, eax
            //   c645fc09             | mov                 byte ptr [ebp - 4], 9
            //   8bca                 | mov                 ecx, edx
            //   f3ab                 | rep stosd           dword ptr es:[edi], eax

        $sequence_2 = { 8bce 8975d0 8b06 ff5044 8b4608 }
            // n = 5, score = 300
            //   8bce                 | mov                 ecx, esi
            //   8975d0               | mov                 dword ptr [ebp - 0x30], esi
            //   8b06                 | mov                 eax, dword ptr [esi]
            //   ff5044               | call                dword ptr [eax + 0x44]
            //   8b4608               | mov                 eax, dword ptr [esi + 8]

        $sequence_3 = { e8???????? 6a01 8d4d88 e8???????? 8d45c0 c645fc06 53 }
            // n = 7, score = 300
            //   e8????????           |                     
            //   6a01                 | push                1
            //   8d4d88               | lea                 ecx, [ebp - 0x78]
            //   e8????????           |                     
            //   8d45c0               | lea                 eax, [ebp - 0x40]
            //   c645fc06             | mov                 byte ptr [ebp - 4], 6
            //   53                   | push                ebx

        $sequence_4 = { c645fc09 c6451300 85f6 0f8448020000 8b7dec 33f6 }
            // n = 6, score = 300
            //   c645fc09             | mov                 byte ptr [ebp - 4], 9
            //   c6451300             | mov                 byte ptr [ebp + 0x13], 0
            //   85f6                 | test                esi, esi
            //   0f8448020000         | je                  0x24e
            //   8b7dec               | mov                 edi, dword ptr [ebp - 0x14]
            //   33f6                 | xor                 esi, esi

        $sequence_5 = { e8???????? 83c408 84c0 7424 8b8d70ffffff 8d854cffffff 50 }
            // n = 7, score = 300
            //   e8????????           |                     
            //   83c408               | add                 esp, 8
            //   84c0                 | test                al, al
            //   7424                 | je                  0x26
            //   8b8d70ffffff         | mov                 ecx, dword ptr [ebp - 0x90]
            //   8d854cffffff         | lea                 eax, [ebp - 0xb4]
            //   50                   | push                eax

        $sequence_6 = { 7208 3bf8 7204 8bf8 8bd1 ff751c 8b4610 }
            // n = 7, score = 300
            //   7208                 | jb                  0xa
            //   3bf8                 | cmp                 edi, eax
            //   7204                 | jb                  6
            //   8bf8                 | mov                 edi, eax
            //   8bd1                 | mov                 edx, ecx
            //   ff751c               | push                dword ptr [ebp + 0x1c]
            //   8b4610               | mov                 eax, dword ptr [esi + 0x10]

        $sequence_7 = { 0f429560ffffff 33c0 c745fc23000000 8bca f3ab 56 85d2 }
            // n = 7, score = 300
            //   0f429560ffffff       | cmovb               edx, dword ptr [ebp - 0xa0]
            //   33c0                 | xor                 eax, eax
            //   c745fc23000000       | mov                 dword ptr [ebp - 4], 0x23
            //   8bca                 | mov                 ecx, edx
            //   f3ab                 | rep stosd           dword ptr es:[edi], eax
            //   56                   | push                esi
            //   85d2                 | test                edx, edx

        $sequence_8 = { e8???????? 8bf0 83c404 8975ec c645fc0e 85f6 }
            // n = 6, score = 300
            //   e8????????           |                     
            //   8bf0                 | mov                 esi, eax
            //   83c404               | add                 esp, 4
            //   8975ec               | mov                 dword ptr [ebp - 0x14], esi
            //   c645fc0e             | mov                 byte ptr [ebp - 4], 0xe
            //   85f6                 | test                esi, esi

        $sequence_9 = { 740c ffd0 84c0 0f84ee000000 eb02 ffd0 8b06 }
            // n = 7, score = 300
            //   740c                 | je                  0xe
            //   ffd0                 | call                eax
            //   84c0                 | test                al, al
            //   0f84ee000000         | je                  0xf4
            //   eb02                 | jmp                 4
            //   ffd0                 | call                eax
            //   8b06                 | mov                 eax, dword ptr [esi]

    condition:
        7 of them and filesize < 2334720
}