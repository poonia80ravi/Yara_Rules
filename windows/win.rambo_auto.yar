rule win_rambo_auto {

    meta:
        author = "Felix Bilstein - yara-signator at cocacoding dot com"
        date = "2022-10-07"
        version = "1"
        description = "Detects win.rambo."
        info = "autogenerated rule brought to you by yara-signator"
        tool = "yara-signator v0.6.0"
        signator_config = "callsandjumps;datarefs;binvalue"
        malpedia_reference = "https://malpedia.caad.fkie.fraunhofer.de/details/win.rambo"
        malpedia_rule_date = "20221007"
        malpedia_hash = "597f9539014e3d0f350c069cd804aa71679486ae"
        malpedia_version = "20221010"
        malpedia_license = "CC BY-SA 4.0"
        malpedia_sharing = "TLP:WHITE"

    /* DISCLAIMER
     * The strings used in this rule have been automatically selected from the
     * disassembly of memory dumps and unpacked files, using YARA-Signator.
     * The code and documentation is published here:
     * https://github.com/fxb-cocacoding/yara-signator
     * As Malpedia is used as data source, please note that for a given
     * number of families, only single samples are documented.
     * This likely impacts the degree of generalization these rules will offer.
     * Take the described generation method also into consideration when you
     * apply the rules in your use cases and assign them confidence levels.
     */


    strings:
        $sequence_0 = { 50 e8???????? 8065fe00 8d45fc }
            // n = 4, score = 200
            //   50                   | push                eax
            //   e8????????           |                     
            //   8065fe00             | and                 byte ptr [ebp - 2], 0
            //   8d45fc               | lea                 eax, [ebp - 4]

        $sequence_1 = { 8bf8 ff15???????? 56 57 8d85f8faffff 6a01 50 }
            // n = 7, score = 200
            //   8bf8                 | mov                 edi, eax
            //   ff15????????         |                     
            //   56                   | push                esi
            //   57                   | push                edi
            //   8d85f8faffff         | lea                 eax, [ebp - 0x508]
            //   6a01                 | push                1
            //   50                   | push                eax

        $sequence_2 = { c3 55 8bec 81ec08050000 56 6800040000 8d85f8faffff }
            // n = 7, score = 200
            //   c3                   | ret                 
            //   55                   | push                ebp
            //   8bec                 | mov                 ebp, esp
            //   81ec08050000         | sub                 esp, 0x508
            //   56                   | push                esi
            //   6800040000           | push                0x400
            //   8d85f8faffff         | lea                 eax, [ebp - 0x508]

        $sequence_3 = { 81ec04010000 8d85fcfeffff 50 6804010000 ff15???????? ff7508 8d85fcfeffff }
            // n = 7, score = 200
            //   81ec04010000         | sub                 esp, 0x104
            //   8d85fcfeffff         | lea                 eax, [ebp - 0x104]
            //   50                   | push                eax
            //   6804010000           | push                0x104
            //   ff15????????         |                     
            //   ff7508               | push                dword ptr [ebp + 8]
            //   8d85fcfeffff         | lea                 eax, [ebp - 0x104]

        $sequence_4 = { ff15???????? 56 ff15???????? 8d85ecfdffff 50 8d85f0feffff 50 }
            // n = 7, score = 200
            //   ff15????????         |                     
            //   56                   | push                esi
            //   ff15????????         |                     
            //   8d85ecfdffff         | lea                 eax, [ebp - 0x214]
            //   50                   | push                eax
            //   8d85f0feffff         | lea                 eax, [ebp - 0x110]
            //   50                   | push                eax

        $sequence_5 = { ff15???????? 8d85f8faffff 50 68???????? e8???????? }
            // n = 5, score = 200
            //   ff15????????         |                     
            //   8d85f8faffff         | lea                 eax, [ebp - 0x508]
            //   50                   | push                eax
            //   68????????           |                     
            //   e8????????           |                     

        $sequence_6 = { 8bec 81ec14020000 8d85f0feffff 56 50 }
            // n = 5, score = 200
            //   8bec                 | mov                 ebp, esp
            //   81ec14020000         | sub                 esp, 0x214
            //   8d85f0feffff         | lea                 eax, [ebp - 0x110]
            //   56                   | push                esi
            //   50                   | push                eax

        $sequence_7 = { 83c420 85f6 7437 56 }
            // n = 4, score = 200
            //   83c420               | add                 esp, 0x20
            //   85f6                 | test                esi, esi
            //   7437                 | je                  0x39
            //   56                   | push                esi

        $sequence_8 = { 89842494000000 8b442424 6a00 50 8d8c24a4000000 e8???????? 8d4c241c }
            // n = 7, score = 100
            //   89842494000000       | mov                 dword ptr [esp + 0x94], eax
            //   8b442424             | mov                 eax, dword ptr [esp + 0x24]
            //   6a00                 | push                0
            //   50                   | push                eax
            //   8d8c24a4000000       | lea                 ecx, [esp + 0xa4]
            //   e8????????           |                     
            //   8d4c241c             | lea                 ecx, [esp + 0x1c]

        $sequence_9 = { 8d4c2410 c68424000400000b e8???????? 8d4c2428 }
            // n = 4, score = 100
            //   8d4c2410             | lea                 ecx, [esp + 0x10]
            //   c68424000400000b     | mov                 byte ptr [esp + 0x400], 0xb
            //   e8????????           |                     
            //   8d4c2428             | lea                 ecx, [esp + 0x28]

        $sequence_10 = { e8???????? 8d4c2420 c684240004000007 e8???????? 8d4c2424 c684240004000006 e8???????? }
            // n = 7, score = 100
            //   e8????????           |                     
            //   8d4c2420             | lea                 ecx, [esp + 0x20]
            //   c684240004000007     | mov                 byte ptr [esp + 0x400], 7
            //   e8????????           |                     
            //   8d4c2424             | lea                 ecx, [esp + 0x24]
            //   c684240004000006     | mov                 byte ptr [esp + 0x400], 6
            //   e8????????           |                     

        $sequence_11 = { e8???????? 55 55 8d4c2424 }
            // n = 4, score = 100
            //   e8????????           |                     
            //   55                   | push                ebp
            //   55                   | push                ebp
            //   8d4c2424             | lea                 ecx, [esp + 0x24]

        $sequence_12 = { 83c404 33f6 8bfd 6a04 e8???????? 83c404 8d0c1e }
            // n = 7, score = 100
            //   83c404               | add                 esp, 4
            //   33f6                 | xor                 esi, esi
            //   8bfd                 | mov                 edi, ebp
            //   6a04                 | push                4
            //   e8????????           |                     
            //   83c404               | add                 esp, 4
            // 

        $sequence_13 = { 7405 57 ffd5 8bf8 8a4304 8b7604 84c0 }
            // n = 7, score = 100
            //   7405                 | je                  7
            //   57                   | push                edi
            //   ffd5                 | call                ebp
            //   8bf8                 | mov                 edi, eax
            //   8a4304               | mov                 al, byte ptr [ebx + 4]
            //   8b7604               | mov                 esi, dword ptr [esi + 4]
            //   84c0                 | test                al, al

        $sequence_14 = { 8bf3 8d4c2464 2bf7 e8???????? 8bf8 b8fcfeffff }
            // n = 6, score = 100
            //   8bf3                 | mov                 esi, ebx
            //   8d4c2464             | lea                 ecx, [esp + 0x64]
            //   2bf7                 | sub                 esi, edi
            //   e8????????           |                     
            //   8bf8                 | mov                 edi, eax
            //   b8fcfeffff           | mov                 eax, 0xfffffefc

        $sequence_15 = { c684240004000003 7416 8d9424ec000000 6804010000 52 8bc8 e8???????? }
            // n = 7, score = 100
            //   c684240004000003     | mov                 byte ptr [esp + 0x400], 3
            //   7416                 | je                  0x18
            //   8d9424ec000000       | lea                 edx, [esp + 0xec]
            //   6804010000           | push                0x104
            //   52                   | push                edx
            //   8bc8                 | mov                 ecx, eax
            //   e8????????           |                     

    condition:
        7 of them and filesize < 57344
}