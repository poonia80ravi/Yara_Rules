rule win_monero_miner_auto {

    meta:
        author = "Felix Bilstein - yara-signator at cocacoding dot com"
        date = "2022-10-07"
        version = "1"
        description = "Detects win.monero_miner."
        info = "autogenerated rule brought to you by yara-signator"
        tool = "yara-signator v0.6.0"
        signator_config = "callsandjumps;datarefs;binvalue"
        malpedia_reference = "https://malpedia.caad.fkie.fraunhofer.de/details/win.monero_miner"
        malpedia_rule_date = "20221007"
        malpedia_hash = "597f9539014e3d0f350c069cd804aa71679486ae"
        malpedia_version = "20221010"
        malpedia_license = "CC BY-SA 4.0"
        malpedia_sharing = "TLP:WHITE"

    /* DISCLAIMER
     * The strings used in this rule have been automatically selected from the
     * disassembly of memory dumps and unpacked files, using YARA-Signator.
     * The code and documentation is published here:
     * https://github.com/fxb-cocacoding/yara-signator
     * As Malpedia is used as data source, please note that for a given
     * number of families, only single samples are documented.
     * This likely impacts the degree of generalization these rules will offer.
     * Take the described generation method also into consideration when you
     * apply the rules in your use cases and assign them confidence levels.
     */


    strings:
        $sequence_0 = { c6835902000001 b801000000 0f865f030000 c6835a02000000 88835b020000 8b85d0030000 85c0 }
            // n = 7, score = 100
            //   c6835902000001       | mov                 byte ptr [ebx + 0x259], 1
            //   b801000000           | mov                 eax, 1
            //   0f865f030000         | jbe                 0x365
            //   c6835a02000000       | mov                 byte ptr [ebx + 0x25a], 0
            //   88835b020000         | mov                 byte ptr [ebx + 0x25b], al
            //   8b85d0030000         | mov                 eax, dword ptr [ebp + 0x3d0]
            //   85c0                 | test                eax, eax

        $sequence_1 = { e8???????? 85c0 89c7 0f8443010000 f684249400000002 7439 85db }
            // n = 7, score = 100
            //   e8????????           |                     
            //   85c0                 | test                eax, eax
            //   89c7                 | mov                 edi, eax
            //   0f8443010000         | je                  0x149
            //   f684249400000002     | test                byte ptr [esp + 0x94], 2
            //   7439                 | je                  0x3b
            //   85db                 | test                ebx, ebx

        $sequence_2 = { 8b8c2410030000 0fa4f208 89ee 8b2c24 3394248c010000 31c6 89742468 }
            // n = 7, score = 100
            //   8b8c2410030000       | mov                 ecx, dword ptr [esp + 0x310]
            //   0fa4f208             | shld                edx, esi, 8
            //   89ee                 | mov                 esi, ebp
            //   8b2c24               | mov                 ebp, dword ptr [esp]
            //   3394248c010000       | xor                 edx, dword ptr [esp + 0x18c]
            //   31c6                 | xor                 esi, eax
            //   89742468             | mov                 dword ptr [esp + 0x68], esi

        $sequence_3 = { c783c002000000000000 890424 ff15???????? 8b83b0020000 c783ac02000000000000 890424 ff15???????? }
            // n = 7, score = 100
            //   c783c002000000000000     | mov    dword ptr [ebx + 0x2c0], 0
            //   890424               | mov                 dword ptr [esp], eax
            //   ff15????????         |                     
            //   8b83b0020000         | mov                 eax, dword ptr [ebx + 0x2b0]
            //   c783ac02000000000000     | mov    dword ptr [ebx + 0x2ac], 0
            //   890424               | mov                 dword ptr [esp], eax
            //   ff15????????         |                     

        $sequence_4 = { e8???????? 85c0 0f854bf3ffff 8b442460 c744240802000000 c7442404???????? 890424 }
            // n = 7, score = 100
            //   e8????????           |                     
            //   85c0                 | test                eax, eax
            //   0f854bf3ffff         | jne                 0xfffff351
            //   8b442460             | mov                 eax, dword ptr [esp + 0x60]
            //   c744240802000000     | mov                 dword ptr [esp + 8], 2
            //   c7442404????????     |                     
            //   890424               | mov                 dword ptr [esp], eax

        $sequence_5 = { e8???????? 8b4c2438 890424 89fd 89542404 894c2408 8b4c243c }
            // n = 7, score = 100
            //   e8????????           |                     
            //   8b4c2438             | mov                 ecx, dword ptr [esp + 0x38]
            //   890424               | mov                 dword ptr [esp], eax
            //   89fd                 | mov                 ebp, edi
            //   89542404             | mov                 dword ptr [esp + 4], edx
            //   894c2408             | mov                 dword ptr [esp + 8], ecx
            //   8b4c243c             | mov                 ecx, dword ptr [esp + 0x3c]

        $sequence_6 = { 0fbed0 83c328 89542404 891c24 e8???????? 83c42c 89f0 }
            // n = 7, score = 100
            //   0fbed0               | movsx               edx, al
            //   83c328               | add                 ebx, 0x28
            //   89542404             | mov                 dword ptr [esp + 4], edx
            //   891c24               | mov                 dword ptr [esp], ebx
            //   e8????????           |                     
            //   83c42c               | add                 esp, 0x2c
            //   89f0                 | mov                 eax, esi

        $sequence_7 = { c1fa05 89d0 29f8 8d50ff 89d8 89542438 f7ee }
            // n = 7, score = 100
            //   c1fa05               | sar                 edx, 5
            //   89d0                 | mov                 eax, edx
            //   29f8                 | sub                 eax, edi
            //   8d50ff               | lea                 edx, [eax - 1]
            //   89d8                 | mov                 eax, ebx
            //   89542438             | mov                 dword ptr [esp + 0x38], edx
            //   f7ee                 | imul                esi

        $sequence_8 = { 8b9424f4010000 89ac24e0000000 01c1 89c5 11d3 0facd00d 0facea0d }
            // n = 7, score = 100
            //   8b9424f4010000       | mov                 edx, dword ptr [esp + 0x1f4]
            //   89ac24e0000000       | mov                 dword ptr [esp + 0xe0], ebp
            //   01c1                 | add                 ecx, eax
            //   89c5                 | mov                 ebp, eax
            //   11d3                 | adc                 ebx, edx
            //   0facd00d             | shrd                eax, edx, 0xd
            //   0facea0d             | shrd                edx, ebp, 0xd

        $sequence_9 = { 89ca 035518 8b4c2460 135d1c 034c2448 8b442464 1344244c }
            // n = 7, score = 100
            //   89ca                 | mov                 edx, ecx
            //   035518               | add                 edx, dword ptr [ebp + 0x18]
            //   8b4c2460             | mov                 ecx, dword ptr [esp + 0x60]
            //   135d1c               | adc                 ebx, dword ptr [ebp + 0x1c]
            //   034c2448             | add                 ecx, dword ptr [esp + 0x48]
            //   8b442464             | mov                 eax, dword ptr [esp + 0x64]
            //   1344244c             | adc                 eax, dword ptr [esp + 0x4c]

    condition:
        7 of them and filesize < 1425408
}