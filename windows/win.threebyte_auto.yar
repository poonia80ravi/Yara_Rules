rule win_threebyte_auto {

    meta:
        author = "Felix Bilstein - yara-signator at cocacoding dot com"
        date = "2022-10-07"
        version = "1"
        description = "Detects win.threebyte."
        info = "autogenerated rule brought to you by yara-signator"
        tool = "yara-signator v0.6.0"
        signator_config = "callsandjumps;datarefs;binvalue"
        malpedia_reference = "https://malpedia.caad.fkie.fraunhofer.de/details/win.threebyte"
        malpedia_rule_date = "20221007"
        malpedia_hash = "597f9539014e3d0f350c069cd804aa71679486ae"
        malpedia_version = "20221010"
        malpedia_license = "CC BY-SA 4.0"
        malpedia_sharing = "TLP:WHITE"

    /* DISCLAIMER
     * The strings used in this rule have been automatically selected from the
     * disassembly of memory dumps and unpacked files, using YARA-Signator.
     * The code and documentation is published here:
     * https://github.com/fxb-cocacoding/yara-signator
     * As Malpedia is used as data source, please note that for a given
     * number of families, only single samples are documented.
     * This likely impacts the degree of generalization these rules will offer.
     * Take the described generation method also into consideration when you
     * apply the rules in your use cases and assign them confidence levels.
     */


    strings:
        $sequence_0 = { c6857bffffff6f c6857cffffff72 c6857dffffff20 c6857effffff53 c6857fffffff6c c6458065 c6458165 }
            // n = 7, score = 200
            //   c6857bffffff6f       | mov                 byte ptr [ebp - 0x85], 0x6f
            //   c6857cffffff72       | mov                 byte ptr [ebp - 0x84], 0x72
            //   c6857dffffff20       | mov                 byte ptr [ebp - 0x83], 0x20
            //   c6857effffff53       | mov                 byte ptr [ebp - 0x82], 0x53
            //   c6857fffffff6c       | mov                 byte ptr [ebp - 0x81], 0x6c
            //   c6458065             | mov                 byte ptr [ebp - 0x80], 0x65
            //   c6458165             | mov                 byte ptr [ebp - 0x7f], 0x65

        $sequence_1 = { 6a00 ff15???????? 6aff 8b55f0 52 ff15???????? }
            // n = 6, score = 200
            //   6a00                 | push                0
            //   ff15????????         |                     
            //   6aff                 | push                -1
            //   8b55f0               | mov                 edx, dword ptr [ebp - 0x10]
            //   52                   | push                edx
            //   ff15????????         |                     

        $sequence_2 = { c68552fdffff49 c68553fdffff4c c68554fdffff45 c68555fdffff5f c68556fdffff45 c68557fdffff4e c68558fdffff44 }
            // n = 7, score = 200
            //   c68552fdffff49       | mov                 byte ptr [ebp - 0x2ae], 0x49
            //   c68553fdffff4c       | mov                 byte ptr [ebp - 0x2ad], 0x4c
            //   c68554fdffff45       | mov                 byte ptr [ebp - 0x2ac], 0x45
            //   c68555fdffff5f       | mov                 byte ptr [ebp - 0x2ab], 0x5f
            //   c68556fdffff45       | mov                 byte ptr [ebp - 0x2aa], 0x45
            //   c68557fdffff4e       | mov                 byte ptr [ebp - 0x2a9], 0x4e
            //   c68558fdffff44       | mov                 byte ptr [ebp - 0x2a8], 0x44

        $sequence_3 = { 8945fc 837dfc00 7535 8b8584f7ffff 50 8b8d40f7ffff ff510c }
            // n = 7, score = 200
            //   8945fc               | mov                 dword ptr [ebp - 4], eax
            //   837dfc00             | cmp                 dword ptr [ebp - 4], 0
            //   7535                 | jne                 0x37
            //   8b8584f7ffff         | mov                 eax, dword ptr [ebp - 0x87c]
            //   50                   | push                eax
            //   8b8d40f7ffff         | mov                 ecx, dword ptr [ebp - 0x8c0]
            //   ff510c               | call                dword ptr [ecx + 0xc]

        $sequence_4 = { 8b11 8b85f0fdffff 50 ff5218 }
            // n = 4, score = 200
            //   8b11                 | mov                 edx, dword ptr [ecx]
            //   8b85f0fdffff         | mov                 eax, dword ptr [ebp - 0x210]
            //   50                   | push                eax
            //   ff5218               | call                dword ptr [edx + 0x18]

        $sequence_5 = { c685eafeffff74 6a00 6880000000 6a02 6a00 6a01 6800000040 }
            // n = 7, score = 200
            //   c685eafeffff74       | mov                 byte ptr [ebp - 0x116], 0x74
            //   6a00                 | push                0
            //   6880000000           | push                0x80
            //   6a02                 | push                2
            //   6a00                 | push                0
            //   6a01                 | push                1
            //   6800000040           | push                0x40000000

        $sequence_6 = { 8d8db0fbffff 51 8b955cf7ffff ff12 898580f7ffff 83bd80f7ffff00 751f }
            // n = 7, score = 200
            //   8d8db0fbffff         | lea                 ecx, [ebp - 0x450]
            //   51                   | push                ecx
            //   8b955cf7ffff         | mov                 edx, dword ptr [ebp - 0x8a4]
            //   ff12                 | call                dword ptr [edx]
            //   898580f7ffff         | mov                 dword ptr [ebp - 0x880], eax
            //   83bd80f7ffff00       | cmp                 dword ptr [ebp - 0x880], 0
            //   751f                 | jne                 0x21

        $sequence_7 = { c6854efdffff54 c6854ffdffff53 c68550fdffff20 c68551fdffff46 c68552fdffff49 c68553fdffff4c c68554fdffff45 }
            // n = 7, score = 200
            //   c6854efdffff54       | mov                 byte ptr [ebp - 0x2b2], 0x54
            //   c6854ffdffff53       | mov                 byte ptr [ebp - 0x2b1], 0x53
            //   c68550fdffff20       | mov                 byte ptr [ebp - 0x2b0], 0x20
            //   c68551fdffff46       | mov                 byte ptr [ebp - 0x2af], 0x46
            //   c68552fdffff49       | mov                 byte ptr [ebp - 0x2ae], 0x49
            //   c68553fdffff4c       | mov                 byte ptr [ebp - 0x2ad], 0x4c
            //   c68554fdffff45       | mov                 byte ptr [ebp - 0x2ac], 0x45

        $sequence_8 = { 51 8d9518f7ffff 52 6805000020 8b8564f7ffff 50 8b8d10f7ffff }
            // n = 7, score = 200
            //   51                   | push                ecx
            //   8d9518f7ffff         | lea                 edx, [ebp - 0x8e8]
            //   52                   | push                edx
            //   6805000020           | push                0x20000005
            //   8b8564f7ffff         | mov                 eax, dword ptr [ebp - 0x89c]
            //   50                   | push                eax
            //   8b8d10f7ffff         | mov                 ecx, dword ptr [ebp - 0x8f0]

        $sequence_9 = { 8b8540f7ffff ff5004 eb02 eb05 e9???????? }
            // n = 5, score = 200
            //   8b8540f7ffff         | mov                 eax, dword ptr [ebp - 0x8c0]
            //   ff5004               | call                dword ptr [eax + 4]
            //   eb02                 | jmp                 4
            //   eb05                 | jmp                 7
            //   e9????????           |                     

    condition:
        7 of them and filesize < 180224
}