rule win_webc2_ausov_auto {

    meta:
        author = "Felix Bilstein - yara-signator at cocacoding dot com"
        date = "2022-10-07"
        version = "1"
        description = "Detects win.webc2_ausov."
        info = "autogenerated rule brought to you by yara-signator"
        tool = "yara-signator v0.6.0"
        signator_config = "callsandjumps;datarefs;binvalue"
        malpedia_reference = "https://malpedia.caad.fkie.fraunhofer.de/details/win.webc2_ausov"
        malpedia_rule_date = "20221007"
        malpedia_hash = "597f9539014e3d0f350c069cd804aa71679486ae"
        malpedia_version = "20221010"
        malpedia_license = "CC BY-SA 4.0"
        malpedia_sharing = "TLP:WHITE"

    /* DISCLAIMER
     * The strings used in this rule have been automatically selected from the
     * disassembly of memory dumps and unpacked files, using YARA-Signator.
     * The code and documentation is published here:
     * https://github.com/fxb-cocacoding/yara-signator
     * As Malpedia is used as data source, please note that for a given
     * number of families, only single samples are documented.
     * This likely impacts the degree of generalization these rules will offer.
     * Take the described generation method also into consideration when you
     * apply the rules in your use cases and assign them confidence levels.
     */


    strings:
        $sequence_0 = { c70101000000 e9???????? 8dbdfcfbffff 83c9ff }
            // n = 4, score = 100
            //   c70101000000         | mov                 dword ptr [ecx], 1
            //   e9????????           |                     
            //   8dbdfcfbffff         | lea                 edi, [ebp - 0x404]
            //   83c9ff               | or                  ecx, 0xffffffff

        $sequence_1 = { 52 e8???????? 83c408 50 8b85f8fbffff 50 }
            // n = 6, score = 100
            //   52                   | push                edx
            //   e8????????           |                     
            //   83c408               | add                 esp, 8
            //   50                   | push                eax
            //   8b85f8fbffff         | mov                 eax, dword ptr [ebp - 0x408]
            //   50                   | push                eax

        $sequence_2 = { f8 68???????? 8d8dfcfbffff 51 e8???????? 83c408 0f8407000000 }
            // n = 7, score = 100
            //   f8                   | clc                 
            //   68????????           |                     
            //   8d8dfcfbffff         | lea                 ecx, [ebp - 0x404]
            //   51                   | push                ecx
            //   e8????????           |                     
            //   83c408               | add                 esp, 8
            //   0f8407000000         | je                  0xd

        $sequence_3 = { a3???????? ffd3 85c0 7442 68???????? }
            // n = 5, score = 100
            //   a3????????           |                     
            //   ffd3                 | call                ebx
            //   85c0                 | test                eax, eax
            //   7442                 | je                  0x44
            //   68????????           |                     

        $sequence_4 = { 7507 33c0 e9???????? 0f8407000000 }
            // n = 4, score = 100
            //   7507                 | jne                 9
            //   33c0                 | xor                 eax, eax
            //   e9????????           |                     
            //   0f8407000000         | je                  0xd

        $sequence_5 = { 899534faffff 83ad34faffff01 83bd34faffff00 7425 }
            // n = 4, score = 100
            //   899534faffff         | mov                 dword ptr [ebp - 0x5cc], edx
            //   83ad34faffff01       | sub                 dword ptr [ebp - 0x5cc], 1
            //   83bd34faffff00       | cmp                 dword ptr [ebp - 0x5cc], 0
            //   7425                 | je                  0x27

        $sequence_6 = { 33c0 e9???????? 0f8407000000 0f8501000000 f8 8b95f8fbffff 0355fc }
            // n = 7, score = 100
            //   33c0                 | xor                 eax, eax
            //   e9????????           |                     
            //   0f8407000000         | je                  0xd
            //   0f8501000000         | jne                 7
            //   f8                   | clc                 
            //   8b95f8fbffff         | mov                 edx, dword ptr [ebp - 0x408]
            //   0355fc               | add                 edx, dword ptr [ebp - 4]

        $sequence_7 = { 8b550c 83c208 83c9ff 33c0 }
            // n = 4, score = 100
            //   8b550c               | mov                 edx, dword ptr [ebp + 0xc]
            //   83c208               | add                 edx, 8
            //   83c9ff               | or                  ecx, 0xffffffff
            //   33c0                 | xor                 eax, eax

        $sequence_8 = { 0f8407000000 0f8501000000 f8 c785f8fbffff00000000 }
            // n = 4, score = 100
            //   0f8407000000         | je                  0xd
            //   0f8501000000         | jne                 7
            //   f8                   | clc                 
            //   c785f8fbffff00000000     | mov    dword ptr [ebp - 0x408], 0

        $sequence_9 = { 85c9 742b 8b0d???????? 85c9 7421 }
            // n = 5, score = 100
            //   85c9                 | test                ecx, ecx
            //   742b                 | je                  0x2d
            //   8b0d????????         |                     
            //   85c9                 | test                ecx, ecx
            //   7421                 | je                  0x23

    condition:
        7 of them and filesize < 40960
}