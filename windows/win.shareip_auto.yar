rule win_shareip_auto {

    meta:
        author = "Felix Bilstein - yara-signator at cocacoding dot com"
        date = "2022-10-07"
        version = "1"
        description = "Detects win.shareip."
        info = "autogenerated rule brought to you by yara-signator"
        tool = "yara-signator v0.6.0"
        signator_config = "callsandjumps;datarefs;binvalue"
        malpedia_reference = "https://malpedia.caad.fkie.fraunhofer.de/details/win.shareip"
        malpedia_rule_date = "20221007"
        malpedia_hash = "597f9539014e3d0f350c069cd804aa71679486ae"
        malpedia_version = "20221010"
        malpedia_license = "CC BY-SA 4.0"
        malpedia_sharing = "TLP:WHITE"

    /* DISCLAIMER
     * The strings used in this rule have been automatically selected from the
     * disassembly of memory dumps and unpacked files, using YARA-Signator.
     * The code and documentation is published here:
     * https://github.com/fxb-cocacoding/yara-signator
     * As Malpedia is used as data source, please note that for a given
     * number of families, only single samples are documented.
     * This likely impacts the degree of generalization these rules will offer.
     * Take the described generation method also into consideration when you
     * apply the rules in your use cases and assign them confidence levels.
     */


    strings:
        $sequence_0 = { 83f910 7304 8d442440 803800 7e68 83f910 7304 }
            // n = 7, score = 100
            //   83f910               | cmp                 ecx, 0x10
            //   7304                 | jae                 6
            //   8d442440             | lea                 eax, [esp + 0x40]
            //   803800               | cmp                 byte ptr [eax], 0
            //   7e68                 | jle                 0x6a
            //   83f910               | cmp                 ecx, 0x10
            //   7304                 | jae                 6

        $sequence_1 = { 8bc3 8bce e8???????? 83c404 8bd8 8d742458 e8???????? }
            // n = 7, score = 100
            //   8bc3                 | mov                 eax, ebx
            //   8bce                 | mov                 ecx, esi
            //   e8????????           |                     
            //   83c404               | add                 esp, 4
            //   8bd8                 | mov                 ebx, eax
            //   8d742458             | lea                 esi, [esp + 0x58]
            //   e8????????           |                     

        $sequence_2 = { 32c0 5e c3 8b17 8b06 03c2 }
            // n = 6, score = 100
            //   32c0                 | xor                 al, al
            //   5e                   | pop                 esi
            //   c3                   | ret                 
            //   8b17                 | mov                 edx, dword ptr [edi]
            //   8b06                 | mov                 eax, dword ptr [esi]
            //   03c2                 | add                 eax, edx

        $sequence_3 = { 0fb6ca 0fbe8960994500 85c9 750d e8???????? c7002a000000 eb7a }
            // n = 7, score = 100
            //   0fb6ca               | movzx               ecx, dl
            //   0fbe8960994500       | movsx               ecx, byte ptr [ecx + 0x459960]
            //   85c9                 | test                ecx, ecx
            //   750d                 | jne                 0xf
            //   e8????????           |                     
            //   c7002a000000         | mov                 dword ptr [eax], 0x2a
            //   eb7a                 | jmp                 0x7c

        $sequence_4 = { 83c404 33db 837c246010 be0f000000 89742444 895c2440 885c2430 }
            // n = 7, score = 100
            //   83c404               | add                 esp, 4
            //   33db                 | xor                 ebx, ebx
            //   837c246010           | cmp                 dword ptr [esp + 0x60], 0x10
            //   be0f000000           | mov                 esi, 0xf
            //   89742444             | mov                 dword ptr [esp + 0x44], esi
            //   895c2440             | mov                 dword ptr [esp + 0x40], ebx
            //   885c2430             | mov                 byte ptr [esp + 0x30], bl

        $sequence_5 = { e8???????? 8d442474 e8???????? 8d842404010000 e8???????? 8b442430 c744242484034500 }
            // n = 7, score = 100
            //   e8????????           |                     
            //   8d442474             | lea                 eax, [esp + 0x74]
            //   e8????????           |                     
            //   8d842404010000       | lea                 eax, [esp + 0x104]
            //   e8????????           |                     
            //   8b442430             | mov                 eax, dword ptr [esp + 0x30]
            //   c744242484034500     | mov                 dword ptr [esp + 0x24], 0x450384

        $sequence_6 = { 6689842400010000 8d4c2414 51 8d8c24a8000000 c68424dc01000004 e8???????? }
            // n = 6, score = 100
            //   6689842400010000     | mov                 word ptr [esp + 0x100], ax
            //   8d4c2414             | lea                 ecx, [esp + 0x14]
            //   51                   | push                ecx
            //   8d8c24a8000000       | lea                 ecx, [esp + 0xa8]
            //   c68424dc01000004     | mov                 byte ptr [esp + 0x1dc], 4
            //   e8????????           |                     

        $sequence_7 = { 85c0 7467 8b7c2418 8d8424a0010000 50 57 53 }
            // n = 7, score = 100
            //   85c0                 | test                eax, eax
            //   7467                 | je                  0x69
            //   8b7c2418             | mov                 edi, dword ptr [esp + 0x18]
            //   8d8424a0010000       | lea                 eax, [esp + 0x1a0]
            //   50                   | push                eax
            //   57                   | push                edi
            //   53                   | push                ebx

        $sequence_8 = { 84c0 0f84b7000000 6a00 e8???????? 83c404 84c0 0f84a5000000 }
            // n = 7, score = 100
            //   84c0                 | test                al, al
            //   0f84b7000000         | je                  0xbd
            //   6a00                 | push                0
            //   e8????????           |                     
            //   83c404               | add                 esp, 4
            //   84c0                 | test                al, al
            //   0f84a5000000         | je                  0xab

        $sequence_9 = { 50 8bcf e8???????? 8d8c24ac000000 51 8bce c684240801000003 }
            // n = 7, score = 100
            //   50                   | push                eax
            //   8bcf                 | mov                 ecx, edi
            //   e8????????           |                     
            //   8d8c24ac000000       | lea                 ecx, [esp + 0xac]
            //   51                   | push                ecx
            //   8bce                 | mov                 ecx, esi
            //   c684240801000003     | mov                 byte ptr [esp + 0x108], 3

    condition:
        7 of them and filesize < 811008
}