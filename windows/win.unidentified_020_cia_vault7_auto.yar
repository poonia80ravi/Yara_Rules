rule win_unidentified_020_cia_vault7_auto {

    meta:
        author = "Felix Bilstein - yara-signator at cocacoding dot com"
        date = "2022-10-07"
        version = "1"
        description = "Detects win.unidentified_020_cia_vault7."
        info = "autogenerated rule brought to you by yara-signator"
        tool = "yara-signator v0.6.0"
        signator_config = "callsandjumps;datarefs;binvalue"
        malpedia_reference = "https://malpedia.caad.fkie.fraunhofer.de/details/win.unidentified_020_cia_vault7"
        malpedia_rule_date = "20221007"
        malpedia_hash = "597f9539014e3d0f350c069cd804aa71679486ae"
        malpedia_version = "20221010"
        malpedia_license = "CC BY-SA 4.0"
        malpedia_sharing = "TLP:WHITE"

    /* DISCLAIMER
     * The strings used in this rule have been automatically selected from the
     * disassembly of memory dumps and unpacked files, using YARA-Signator.
     * The code and documentation is published here:
     * https://github.com/fxb-cocacoding/yara-signator
     * As Malpedia is used as data source, please note that for a given
     * number of families, only single samples are documented.
     * This likely impacts the degree of generalization these rules will offer.
     * Take the described generation method also into consideration when you
     * apply the rules in your use cases and assign them confidence levels.
     */


    strings:
        $sequence_0 = { c3 83f807 750e 66890d???????? b801000000 59 c3 }
            // n = 7, score = 200
            //   c3                   | ret                 
            //   83f807               | cmp                 eax, 7
            //   750e                 | jne                 0x10
            //   66890d????????       |                     
            //   b801000000           | mov                 eax, 1
            //   59                   | pop                 ecx
            //   c3                   | ret                 

        $sequence_1 = { 0fb6ca 0fbe89c04b4100 85c9 750d e8???????? }
            // n = 5, score = 200
            //   0fb6ca               | movzx               ecx, dl
            //   0fbe89c04b4100       | movsx               ecx, byte ptr [ecx + 0x414bc0]
            //   85c9                 | test                ecx, ecx
            //   750d                 | jne                 0xf
            //   e8????????           |                     

        $sequence_2 = { 33ff 47 eb1a 6afe }
            // n = 4, score = 200
            //   33ff                 | xor                 edi, edi
            //   47                   | inc                 edi
            //   eb1a                 | jmp                 0x1c
            //   6afe                 | push                -2

        $sequence_3 = { 8b7df8 8975f4 85ff 743c 8b4718 66833802 75e5 }
            // n = 7, score = 200
            //   8b7df8               | mov                 edi, dword ptr [ebp - 8]
            //   8975f4               | mov                 dword ptr [ebp - 0xc], esi
            //   85ff                 | test                edi, edi
            //   743c                 | je                  0x3e
            //   8b4718               | mov                 eax, dword ptr [edi + 0x18]
            //   66833802             | cmp                 word ptr [eax], 2
            //   75e5                 | jne                 0xffffffe7

        $sequence_4 = { 53 e8???????? 83c404 8b85c0f7ffff 8b4df0 64890d00000000 59 }
            // n = 7, score = 200
            //   53                   | push                ebx
            //   e8????????           |                     
            //   83c404               | add                 esp, 4
            //   8b85c0f7ffff         | mov                 eax, dword ptr [ebp - 0x840]
            //   8b4df0               | mov                 ecx, dword ptr [ebp - 0x10]
            //   64890d00000000       | mov                 dword ptr fs:[0], ecx
            //   59                   | pop                 ecx

        $sequence_5 = { 8985d8fdffff 8985dcfdffff 8985e0fdffff 8985e4fdffff 8d85f0fdffff }
            // n = 5, score = 200
            //   8985d8fdffff         | mov                 dword ptr [ebp - 0x228], eax
            //   8985dcfdffff         | mov                 dword ptr [ebp - 0x224], eax
            //   8985e0fdffff         | mov                 dword ptr [ebp - 0x220], eax
            //   8985e4fdffff         | mov                 dword ptr [ebp - 0x21c], eax
            //   8d85f0fdffff         | lea                 eax, [ebp - 0x210]

        $sequence_6 = { eb03 2b5610 83faff 7405 3b5614 7611 }
            // n = 6, score = 200
            //   eb03                 | jmp                 5
            //   2b5610               | sub                 edx, dword ptr [esi + 0x10]
            //   83faff               | cmp                 edx, -1
            //   7405                 | je                  7
            //   3b5614               | cmp                 edx, dword ptr [esi + 0x14]
            //   7611                 | jbe                 0x13

        $sequence_7 = { eb15 57 ff15???????? 50 e8???????? 59 }
            // n = 6, score = 200
            //   eb15                 | jmp                 0x17
            //   57                   | push                edi
            //   ff15????????         |                     
            //   50                   | push                eax
            //   e8????????           |                     
            //   59                   | pop                 ecx

        $sequence_8 = { ff15???????? a3???????? 85c0 7424 ff15???????? 3db7000000 }
            // n = 6, score = 200
            //   ff15????????         |                     
            //   a3????????           |                     
            //   85c0                 | test                eax, eax
            //   7424                 | je                  0x26
            //   ff15????????         |                     
            //   3db7000000           | cmp                 eax, 0xb7

        $sequence_9 = { 8b4df8 8b5508 8b07 03c1 50 52 e8???????? }
            // n = 7, score = 200
            //   8b4df8               | mov                 ecx, dword ptr [ebp - 8]
            //   8b5508               | mov                 edx, dword ptr [ebp + 8]
            //   8b07                 | mov                 eax, dword ptr [edi]
            //   03c1                 | add                 eax, ecx
            //   50                   | push                eax
            //   52                   | push                edx
            //   e8????????           |                     

    condition:
        7 of them and filesize < 253952
}