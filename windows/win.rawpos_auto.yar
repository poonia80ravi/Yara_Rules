rule win_rawpos_auto {

    meta:
        author = "Felix Bilstein - yara-signator at cocacoding dot com"
        date = "2022-10-07"
        version = "1"
        description = "Detects win.rawpos."
        info = "autogenerated rule brought to you by yara-signator"
        tool = "yara-signator v0.6.0"
        signator_config = "callsandjumps;datarefs;binvalue"
        malpedia_reference = "https://malpedia.caad.fkie.fraunhofer.de/details/win.rawpos"
        malpedia_rule_date = "20221007"
        malpedia_hash = "597f9539014e3d0f350c069cd804aa71679486ae"
        malpedia_version = "20221010"
        malpedia_license = "CC BY-SA 4.0"
        malpedia_sharing = "TLP:WHITE"

    /* DISCLAIMER
     * The strings used in this rule have been automatically selected from the
     * disassembly of memory dumps and unpacked files, using YARA-Signator.
     * The code and documentation is published here:
     * https://github.com/fxb-cocacoding/yara-signator
     * As Malpedia is used as data source, please note that for a given
     * number of families, only single samples are documented.
     * This likely impacts the degree of generalization these rules will offer.
     * Take the described generation method also into consideration when you
     * apply the rules in your use cases and assign them confidence levels.
     */


    strings:
        $sequence_0 = { ff450c 41 3a03 7404 33c0 eb0e 8bc2 }
            // n = 7, score = 100
            //   ff450c               | inc                 dword ptr [ebp + 0xc]
            //   41                   | inc                 ecx
            //   3a03                 | cmp                 al, byte ptr [ebx]
            //   7404                 | je                  6
            //   33c0                 | xor                 eax, eax
            //   eb0e                 | jmp                 0x10
            //   8bc2                 | mov                 eax, edx

        $sequence_1 = { 43 43 e9???????? 43 33c0 8a03 }
            // n = 6, score = 100
            //   43                   | inc                 ebx
            //   43                   | inc                 ebx
            //   e9????????           |                     
            //   43                   | inc                 ebx
            //   33c0                 | xor                 eax, eax
            //   8a03                 | mov                 al, byte ptr [ebx]

        $sequence_2 = { 7504 33c0 eb05 b801000000 8945b8 8a17 47 }
            // n = 7, score = 100
            //   7504                 | jne                 6
            //   33c0                 | xor                 eax, eax
            //   eb05                 | jmp                 7
            //   b801000000           | mov                 eax, 1
            //   8945b8               | mov                 dword ptr [ebp - 0x48], eax
            //   8a17                 | mov                 dl, byte ptr [edi]
            //   47                   | inc                 edi

        $sequence_3 = { 2bc6 3b45e8 7d08 8b532c 2bd6 8955e8 }
            // n = 6, score = 100
            //   2bc6                 | sub                 eax, esi
            //   3b45e8               | cmp                 eax, dword ptr [ebp - 0x18]
            //   7d08                 | jge                 0xa
            //   8b532c               | mov                 edx, dword ptr [ebx + 0x2c]
            //   2bd6                 | sub                 edx, esi
            //   8955e8               | mov                 dword ptr [ebp - 0x18], edx

        $sequence_4 = { 57 be???????? 8dbdd4feffff b944000000 f3a5 66a5 }
            // n = 6, score = 100
            //   57                   | push                edi
            //   be????????           |                     
            //   8dbdd4feffff         | lea                 edi, [ebp - 0x12c]
            //   b944000000           | mov                 ecx, 0x44
            //   f3a5                 | rep movsd           dword ptr es:[edi], dword ptr [esi]
            //   66a5                 | movsw               word ptr es:[edi], word ptr [esi]

        $sequence_5 = { e9???????? 33d2 33c9 8a5301 8a4b02 c1e208 03d1 }
            // n = 7, score = 100
            //   e9????????           |                     
            //   33d2                 | xor                 edx, edx
            //   33c9                 | xor                 ecx, ecx
            //   8a5301               | mov                 dl, byte ptr [ebx + 1]
            //   8a4b02               | mov                 cl, byte ptr [ebx + 2]
            //   c1e208               | shl                 edx, 8
            //   03d1                 | add                 edx, ecx

        $sequence_6 = { 3b45f8 0f8ffe020000 8b55f0 80bc153078feff00 7510 }
            // n = 5, score = 100
            //   3b45f8               | cmp                 eax, dword ptr [ebp - 8]
            //   0f8ffe020000         | jg                  0x304
            //   8b55f0               | mov                 edx, dword ptr [ebp - 0x10]
            //   80bc153078feff00     | cmp                 byte ptr [ebp + edx - 0x187d0], 0
            //   7510                 | jne                 0x12

        $sequence_7 = { c1f803 8b4df0 0fb60401 23d0 }
            // n = 4, score = 100
            //   c1f803               | sar                 eax, 3
            //   8b4df0               | mov                 ecx, dword ptr [ebp - 0x10]
            //   0fb60401             | movzx               eax, byte ptr [ecx + eax]
            //   23d0                 | and                 edx, eax

        $sequence_8 = { 837dbc00 7404 33c0 eb0a 8b45d8 }
            // n = 5, score = 100
            //   837dbc00             | cmp                 dword ptr [ebp - 0x44], 0
            //   7404                 | je                  6
            //   33c0                 | xor                 eax, eax
            //   eb0a                 | jmp                 0xc
            //   8b45d8               | mov                 eax, dword ptr [ebp - 0x28]

        $sequence_9 = { 803e0a 7407 33c0 e9???????? 47 e9???????? 3b732c }
            // n = 7, score = 100
            //   803e0a               | cmp                 byte ptr [esi], 0xa
            //   7407                 | je                  9
            //   33c0                 | xor                 eax, eax
            //   e9????????           |                     
            //   47                   | inc                 edi
            //   e9????????           |                     
            //   3b732c               | cmp                 esi, dword ptr [ebx + 0x2c]

    condition:
        7 of them and filesize < 466944
}