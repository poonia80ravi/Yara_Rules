rule win_tiny_turla_auto {

    meta:
        author = "Felix Bilstein - yara-signator at cocacoding dot com"
        date = "2022-10-07"
        version = "1"
        description = "Detects win.tiny_turla."
        info = "autogenerated rule brought to you by yara-signator"
        tool = "yara-signator v0.6.0"
        signator_config = "callsandjumps;datarefs;binvalue"
        malpedia_reference = "https://malpedia.caad.fkie.fraunhofer.de/details/win.tiny_turla"
        malpedia_rule_date = "20221007"
        malpedia_hash = "597f9539014e3d0f350c069cd804aa71679486ae"
        malpedia_version = "20221010"
        malpedia_license = "CC BY-SA 4.0"
        malpedia_sharing = "TLP:WHITE"

    /* DISCLAIMER
     * The strings used in this rule have been automatically selected from the
     * disassembly of memory dumps and unpacked files, using YARA-Signator.
     * The code and documentation is published here:
     * https://github.com/fxb-cocacoding/yara-signator
     * As Malpedia is used as data source, please note that for a given
     * number of families, only single samples are documented.
     * This likely impacts the degree of generalization these rules will offer.
     * Take the described generation method also into consideration when you
     * apply the rules in your use cases and assign them confidence levels.
     */


    strings:
        $sequence_0 = { 44897d48 7409 488d4de8 e8???????? }
            // n = 4, score = 100
            //   44897d48             | pop                 edi
            //   7409                 | inc                 ecx
            //   488d4de8             | pop                 esi
            //   e8????????           |                     

        $sequence_1 = { 488b4d77 85c0 0f85a0000000 ff15???????? }
            // n = 4, score = 100
            //   488b4d77             | inc                 ebp
            //   85c0                 | xor                 edi, edi
            //   0f85a0000000         | inc                 ebp
            //   ff15????????         |                     

        $sequence_2 = { 4489642420 ff15???????? 488bcb 85c0 0f842effffff 33d2 ff15???????? }
            // n = 7, score = 100
            //   4489642420           | dec                 eax
            //   ff15????????         |                     
            //   488bcb               | mov                 dword ptr [esp + 0x20], eax
            //   85c0                 | dec                 eax
            //   0f842effffff         | mov                 ecx, dword ptr [ebp + 0x77]
            //   33d2                 | test                eax, eax
            //   ff15????????         |                     

        $sequence_3 = { 4c8be8 4885c0 0f84d8010000 488b5628 }
            // n = 4, score = 100
            //   4c8be8               | mov                 dword ptr [esp + 0x20], eax
            //   4885c0               | dec                 eax
            //   0f84d8010000         | mov                 ecx, dword ptr [esp + 0x38]
            //   488b5628             | dec                 eax

        $sequence_4 = { ffc8 83f80a 0f87ee060000 488d1534e9ffff 4898 8b8c822c1e0000 }
            // n = 6, score = 100
            //   ffc8                 | mov                 dword ptr [esp + 0x30], ebp
            //   83f80a               | inc                 ebp
            //   0f87ee060000         | xor                 ecx, ecx
            //   488d1534e9ffff       | inc                 ecx
            //   4898                 | cmp                 eax, esi
            //   8b8c822c1e0000       | je                  0x8da

        $sequence_5 = { 4883ec38 4c8bfa 4d8bf0 488d542468 }
            // n = 4, score = 100
            //   4883ec38             | inc                 ecx
            //   4c8bfa               | lea                 eax, [eax + edi]
            //   4d8bf0               | inc                 esp
            //   488d542468           | mov                 eax, dword ptr [ebp + 0x48]

        $sequence_6 = { 4d8bf0 4c89642420 4c8bfa 4533c9 4533c0 488d15260f0000 }
            // n = 6, score = 100
            //   4d8bf0               | add                 edx, dword ptr [esi]
            //   4c89642420           | dec                 eax
            //   4c8bfa               | mov                 ecx, ebx
            //   4533c9               | mov                 ebx, eax
            //   4533c0               | mov                 dword ptr [ebp + 0x67], eax
            //   488d15260f0000       | inc                 ecx

        $sequence_7 = { 895e08 32db e9???????? 488bcf }
            // n = 4, score = 100
            //   895e08               | dec                 eax
            //   32db                 | lea                 edx, [0x15c0]
            //   e9????????           |                     
            //   488bcf               | inc                 ebp

        $sequence_8 = { 418d0438 3b06 774e 8bd7 4c8d4c244c 490316 488bcb }
            // n = 7, score = 100
            //   418d0438             | inc                 esp
            //   3b06                 | mov                 eax, ebp
            //   774e                 | dec                 ecx
            //   8bd7                 | mov                 edx, edi
            //   4c8d4c244c           | inc                 ecx
            //   490316               | mov                 ecx, 0x20000000
            //   488bcb               | dec                 eax

        $sequence_9 = { 33c9 48898424c8000000 48898424d0000000 488d442470 4889442440 }
            // n = 5, score = 100
            //   33c9                 | jb                  0x8d5
            //   48898424c8000000     | dec                 eax
            //   48898424d0000000     | lea                 ebx, [esi + 0x18]
            //   488d442470           | dec                 eax
            //   4889442440           | mov                 ecx, ebx

    condition:
        7 of them and filesize < 51200
}