rule win_fatal_rat_auto {

    meta:
        author = "Felix Bilstein - yara-signator at cocacoding dot com"
        date = "2022-10-07"
        version = "1"
        description = "Detects win.fatal_rat."
        info = "autogenerated rule brought to you by yara-signator"
        tool = "yara-signator v0.6.0"
        signator_config = "callsandjumps;datarefs;binvalue"
        malpedia_reference = "https://malpedia.caad.fkie.fraunhofer.de/details/win.fatal_rat"
        malpedia_rule_date = "20221007"
        malpedia_hash = "597f9539014e3d0f350c069cd804aa71679486ae"
        malpedia_version = "20221010"
        malpedia_license = "CC BY-SA 4.0"
        malpedia_sharing = "TLP:WHITE"

    /* DISCLAIMER
     * The strings used in this rule have been automatically selected from the
     * disassembly of memory dumps and unpacked files, using YARA-Signator.
     * The code and documentation is published here:
     * https://github.com/fxb-cocacoding/yara-signator
     * As Malpedia is used as data source, please note that for a given
     * number of families, only single samples are documented.
     * This likely impacts the degree of generalization these rules will offer.
     * Take the described generation method also into consideration when you
     * apply the rules in your use cases and assign them confidence levels.
     */


    strings:
        $sequence_0 = { 8d85acfeffff 50 8d85a0fbffff 68???????? 50 ff15???????? 83c41c }
            // n = 7, score = 100
            //   8d85acfeffff         | lea                 eax, [ebp - 0x154]
            //   50                   | push                eax
            //   8d85a0fbffff         | lea                 eax, [ebp - 0x460]
            //   68????????           |                     
            //   50                   | push                eax
            //   ff15????????         |                     
            //   83c41c               | add                 esp, 0x1c

        $sequence_1 = { 53 6a00 ff7508 ffd6 85c0 89450c 0f8412ffffff }
            // n = 7, score = 100
            //   53                   | push                ebx
            //   6a00                 | push                0
            //   ff7508               | push                dword ptr [ebp + 8]
            //   ffd6                 | call                esi
            //   85c0                 | test                eax, eax
            //   89450c               | mov                 dword ptr [ebp + 0xc], eax
            //   0f8412ffffff         | je                  0xffffff18

        $sequence_2 = { e8???????? 8b5d0c 59 85db 8bf8 742b 8b4510 }
            // n = 7, score = 100
            //   e8????????           |                     
            //   8b5d0c               | mov                 ebx, dword ptr [ebp + 0xc]
            //   59                   | pop                 ecx
            //   85db                 | test                ebx, ebx
            //   8bf8                 | mov                 edi, eax
            //   742b                 | je                  0x2d
            //   8b4510               | mov                 eax, dword ptr [ebp + 0x10]

        $sequence_3 = { 85c0 a3???????? 7411 85f6 7409 6a01 8bce }
            // n = 7, score = 100
            //   85c0                 | test                eax, eax
            //   a3????????           |                     
            //   7411                 | je                  0x13
            //   85f6                 | test                esi, esi
            //   7409                 | je                  0xb
            //   6a01                 | push                1
            //   8bce                 | mov                 ecx, esi

        $sequence_4 = { 59 8dbdd5feffff 889dd4feffff 680c020000 f3ab 66ab }
            // n = 6, score = 100
            //   59                   | pop                 ecx
            //   8dbdd5feffff         | lea                 edi, [ebp - 0x12b]
            //   889dd4feffff         | mov                 byte ptr [ebp - 0x12c], bl
            //   680c020000           | push                0x20c
            //   f3ab                 | rep stosd           dword ptr es:[edi], eax
            //   66ab                 | stosw               word ptr es:[edi], ax

        $sequence_5 = { c6856bfdffff68 c6856cfdffff61 c6856dfdffff74 c6856efdffff2e c6856ffdffff65 c68570fdffff78 c68571fdffff65 }
            // n = 7, score = 100
            //   c6856bfdffff68       | mov                 byte ptr [ebp - 0x295], 0x68
            //   c6856cfdffff61       | mov                 byte ptr [ebp - 0x294], 0x61
            //   c6856dfdffff74       | mov                 byte ptr [ebp - 0x293], 0x74
            //   c6856efdffff2e       | mov                 byte ptr [ebp - 0x292], 0x2e
            //   c6856ffdffff65       | mov                 byte ptr [ebp - 0x291], 0x65
            //   c68570fdffff78       | mov                 byte ptr [ebp - 0x290], 0x78
            //   c68571fdffff65       | mov                 byte ptr [ebp - 0x28f], 0x65

        $sequence_6 = { 8d85fcfeffff 6804010000 50 6a00 ff15???????? 8d85fcfeffff 5f }
            // n = 7, score = 100
            //   8d85fcfeffff         | lea                 eax, [ebp - 0x104]
            //   6804010000           | push                0x104
            //   50                   | push                eax
            //   6a00                 | push                0
            //   ff15????????         |                     
            //   8d85fcfeffff         | lea                 eax, [ebp - 0x104]
            //   5f                   | pop                 edi

        $sequence_7 = { 51 8bcc 8965f0 68???????? e8???????? e8???????? }
            // n = 6, score = 100
            //   51                   | push                ecx
            //   8bcc                 | mov                 ecx, esp
            //   8965f0               | mov                 dword ptr [ebp - 0x10], esp
            //   68????????           |                     
            //   e8????????           |                     
            //   e8????????           |                     

        $sequence_8 = { ff15???????? e8???????? ff15???????? 50 56 68ff0f1f00 ff15???????? }
            // n = 7, score = 100
            //   ff15????????         |                     
            //   e8????????           |                     
            //   ff15????????         |                     
            //   50                   | push                eax
            //   56                   | push                esi
            //   68ff0f1f00           | push                0x1f0fff
            //   ff15????????         |                     

        $sequence_9 = { 8bf0 23f1 33f3 0fb65a01 8b34b57cc80110 c1e808 33f0 }
            // n = 7, score = 100
            //   8bf0                 | mov                 esi, eax
            //   23f1                 | and                 esi, ecx
            //   33f3                 | xor                 esi, ebx
            //   0fb65a01             | movzx               ebx, byte ptr [edx + 1]
            //   8b34b57cc80110       | mov                 esi, dword ptr [esi*4 + 0x1001c87c]
            //   c1e808               | shr                 eax, 8
            //   33f0                 | xor                 esi, eax

    condition:
        7 of them and filesize < 344064
}