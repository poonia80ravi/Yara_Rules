rule win_derohe_auto {

    meta:
        author = "Felix Bilstein - yara-signator at cocacoding dot com"
        date = "2022-08-05"
        version = "1"
        description = "Detects win.derohe."
        info = "autogenerated rule brought to you by yara-signator"
        tool = "yara-signator v0.6.0"
        signator_config = "callsandjumps;datarefs;binvalue"
        malpedia_reference = "https://malpedia.caad.fkie.fraunhofer.de/details/win.derohe"
        malpedia_rule_date = "20220805"
        malpedia_hash = "6ec06c64bcfdbeda64eff021c766b4ce34542b71"
        malpedia_version = "20220808"
        malpedia_license = "CC BY-SA 4.0"
        malpedia_sharing = "TLP:WHITE"

    /* DISCLAIMER
     * The strings used in this rule have been automatically selected from the
     * disassembly of memory dumps and unpacked files, using YARA-Signator.
     * The code and documentation is published here:
     * https://github.com/fxb-cocacoding/yara-signator
     * As Malpedia is used as data source, please note that for a given
     * number of families, only single samples are documented.
     * This likely impacts the degree of generalization these rules will offer.
     * Take the described generation method also into consideration when you
     * apply the rules in your use cases and assign them confidence levels.
     */


    strings:
        $sequence_0 = { ffd1 8b442438 8d5801 8b44243c 8b4c2418 0fb6542416 39d9 }
            // n = 7, score = 100
            //   ffd1                 | call                ecx
            //   8b442438             | mov                 eax, dword ptr [esp + 0x38]
            //   8d5801               | lea                 ebx, [eax + 1]
            //   8b44243c             | mov                 eax, dword ptr [esp + 0x3c]
            //   8b4c2418             | mov                 ecx, dword ptr [esp + 0x18]
            //   0fb6542416           | movzx               edx, byte ptr [esp + 0x16]
            //   39d9                 | cmp                 ecx, ebx

        $sequence_1 = { ffd0 8b542404 c60424fb 8b02 ffd0 8b542404 c6042436 }
            // n = 7, score = 100
            //   ffd0                 | call                eax
            //   8b542404             | mov                 edx, dword ptr [esp + 4]
            //   c60424fb             | mov                 byte ptr [esp], 0xfb
            //   8b02                 | mov                 eax, dword ptr [edx]
            //   ffd0                 | call                eax
            //   8b542404             | mov                 edx, dword ptr [esp + 4]
            //   c6042436             | mov                 byte ptr [esp], 0x36

        $sequence_2 = { ffd0 8b542404 c60424ee 8b02 ffd0 8b542404 c604244c }
            // n = 7, score = 100
            //   ffd0                 | call                eax
            //   8b542404             | mov                 edx, dword ptr [esp + 4]
            //   c60424ee             | mov                 byte ptr [esp], 0xee
            //   8b02                 | mov                 eax, dword ptr [edx]
            //   ffd0                 | call                eax
            //   8b542404             | mov                 edx, dword ptr [esp + 4]
            //   c604244c             | mov                 byte ptr [esp], 0x4c

        $sequence_3 = { ffd0 8b542404 c604245a 8b02 ffd0 8b542404 c6042428 }
            // n = 7, score = 100
            //   ffd0                 | call                eax
            //   8b542404             | mov                 edx, dword ptr [esp + 4]
            //   c604245a             | mov                 byte ptr [esp], 0x5a
            //   8b02                 | mov                 eax, dword ptr [edx]
            //   ffd0                 | call                eax
            //   8b542404             | mov                 edx, dword ptr [esp + 4]
            //   c6042428             | mov                 byte ptr [esp], 0x28

        $sequence_4 = { ffd0 8b542404 c60424b1 8b02 ffd0 8b542404 c6042470 }
            // n = 7, score = 100
            //   ffd0                 | call                eax
            //   8b542404             | mov                 edx, dword ptr [esp + 4]
            //   c60424b1             | mov                 byte ptr [esp], 0xb1
            //   8b02                 | mov                 eax, dword ptr [edx]
            //   ffd0                 | call                eax
            //   8b542404             | mov                 edx, dword ptr [esp + 4]
            //   c6042470             | mov                 byte ptr [esp], 0x70

        $sequence_5 = { ffd0 8b542404 c604246b 8b02 ffd0 8b542404 c6042492 }
            // n = 7, score = 100
            //   ffd0                 | call                eax
            //   8b542404             | mov                 edx, dword ptr [esp + 4]
            //   c604246b             | mov                 byte ptr [esp], 0x6b
            //   8b02                 | mov                 eax, dword ptr [edx]
            //   ffd0                 | call                eax
            //   8b542404             | mov                 edx, dword ptr [esp + 4]
            //   c6042492             | mov                 byte ptr [esp], 0x92

        $sequence_6 = { ff742424 6afe 8b442428 e8???????? 31d2 83c420 85f6 }
            // n = 7, score = 100
            //   ff742424             | push                dword ptr [esp + 0x24]
            //   6afe                 | push                -2
            //   8b442428             | mov                 eax, dword ptr [esp + 0x28]
            //   e8????????           |                     
            //   31d2                 | xor                 edx, edx
            //   83c420               | add                 esp, 0x20
            //   85f6                 | test                esi, esi

        $sequence_7 = { ffd0 8b542404 c604249d 8b02 ffd0 8b542404 c604247d }
            // n = 7, score = 100
            //   ffd0                 | call                eax
            //   8b542404             | mov                 edx, dword ptr [esp + 4]
            //   c604249d             | mov                 byte ptr [esp], 0x9d
            //   8b02                 | mov                 eax, dword ptr [edx]
            //   ffd0                 | call                eax
            //   8b542404             | mov                 edx, dword ptr [esp + 4]
            //   c604247d             | mov                 byte ptr [esp], 0x7d

        $sequence_8 = { e8???????? eb51 8b842438010000 0fb600 88442422 8b11 8b4904 }
            // n = 7, score = 100
            //   e8????????           |                     
            //   eb51                 | jmp                 0x53
            //   8b842438010000       | mov                 eax, dword ptr [esp + 0x138]
            //   0fb600               | movzx               eax, byte ptr [eax]
            //   88442422             | mov                 byte ptr [esp + 0x22], al
            //   8b11                 | mov                 edx, dword ptr [ecx]
            //   8b4904               | mov                 ecx, dword ptr [ecx + 4]

        $sequence_9 = { e8???????? e9???????? 648b0d14000000 8b8900000000 3b6108 0f86ec000000 83ec24 }
            // n = 7, score = 100
            //   e8????????           |                     
            //   e9????????           |                     
            //   648b0d14000000       | mov                 ecx, dword ptr fs:[0x14]
            //   8b8900000000         | mov                 ecx, dword ptr [ecx]
            //   3b6108               | cmp                 esp, dword ptr [ecx + 8]
            //   0f86ec000000         | jbe                 0xf2
            //   83ec24               | sub                 esp, 0x24

    condition:
        7 of them and filesize < 35788800
}